<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Thu, 20 Apr 2023 17:56:26 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>github.com でブランチ保護をバイパスする管理者向けの機能強化</title><link>https://github.blog/changelog/2023-04-20-enhancements-for-admins-bypassing-branch-protections-on-github-com</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 20 Apr 2023 17:44:29 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-20-enhancements-for-admins-bypassing-branch-protections-on-github-com</guid><description>Enhancements for admins bypassing branch protections on github.com</description><content:encoded>&lt;p&gt;github.com でファイルを編集する場合、リポジトリ管理者、 &lt;a href=&quot;https://docs.github.com/en/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization#repository&quot;&gt;ブランチ保護のバイパス権限を&lt;/a&gt;持つアクター、およびブランチ保護のバイパス リスト内のアクターは、直接コミットする代わりにデフォルトで新しいブランチを作成するようになりました。保護されたブランチに直接コミットすることもできますが、そうすると、一部のルールがバイパスされることを強調する通知がインラインで追加されます。&lt;/p&gt;
&lt;p&gt;歴史的に、デフォルトの動作は、バイパスされている通知なしでブランチ保護をプッシュスルーすることでした。&lt;/p&gt;
&lt;p&gt;ここで、 &lt;a href=&quot;https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule&quot;&gt;ブランチ保護ルール&lt;/a&gt;をバイパスする資格のある管理者用にブランチを作成することをお勧めします。この動作は、新しいファイルをリポジトリに追加するとき、およびプル リクエスト中に発生します。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/7575792/232958423-dd623619-5f79-4301-94ae-6d17667719c1.png?ssl=1&quot; alt=&quot;リポジトリに直接コミットするスクリーンショット&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;br /&gt;
&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/7575792/232958417-30bf6b72-52aa-4590-a7b1-03fc796d989f.png?ssl=1&quot; alt=&quot;PR でルールをバイパスするスクリーンショット&gt;&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt; GitHub の&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/repositories&quot;&gt;パブリック フィードバック ディスカッション&lt;/a&gt;でフィードバックをお寄せください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71453</post-id></item><item><title>Team Sync は、デフォルトで組織のメンバーを招待または削除しなくなりました</title><link>https://github.blog/changelog/2023-04-20-team-sync-no-longer-invites-or-removes-organization-members-by-default</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 20 Apr 2023 17:28:48 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-20-team-sync-no-longer-invites-or-removes-organization-members-by-default</guid><description>Team Sync no longer invites or removes organization members by default</description><content:encoded>&lt;p&gt;GitHub Enterprise Cloud のお客様の場合、チーム同期はデフォルトでメンバーを Organization に招待しなくなりました。既存のチーム同期のお客様のために、ID プロバイダー グループから同期されるユーザーの組織の自動プロビジョニングを無効にする構成オプションを追加しました。チーム同期では、ユーザーがチームから削除されても組織から削除されません。&lt;/p&gt;
&lt;p&gt;デフォルトの動作をオプトアウトするための追加情報と手順については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/organizations/organizing-members-into-teams/synchronizing-a-team-with-an-identity-provider-group#requirements-for-members-of-synchronized-teams&quot;&gt;チーム同期のドキュメント で詳細を確認してください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71452</post-id></item><item><title>GitHub Actions: 安全で制御されたデプロイのために、独自のデプロイ保護ルールを作成して共有します</title><link>https://github.blog/changelog/2023-04-20-github-actions-create-and-share-your-own-deployment-protection-rules-for-safe-and-controlled-deployments</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 20 Apr 2023 16:02:34 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-20-github-actions-create-and-share-your-own-deployment-protection-rules-for-safe-and-controlled-deployments</guid><description>GitHub Actions&amp;#058; Create and share your own deployment protection rules for safe and controlled deployments</description><content:encoded>&lt;p&gt;GitHub は本日、GitHub Actions を使用してデプロイを安全にロールアウトするため&lt;a href=&quot;https://github.blog/2023-04-20-announcing-github-actions-deployment-protection-rules-now-in-public-beta&quot;&gt;のカスタム デプロイ保護ルールのパブリック ベータ サポート&lt;/a&gt;を発表しました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#custom-deployment-protection-rules&quot;&gt;カスタムのデプロイ保護ルールは&lt;/a&gt;GitHub アプリによって強化され、任意の GitHub 組織/リポジトリ/環境で有効にして、外部システムがデプロイを承認または拒否できるようにすることができます。&lt;br /&gt;
各ルールは、これらの外部システムの特定の条件を評価して、自動化された展開に対する環境の準備を評価し、リスクを軽減し、より堅牢にします。&lt;/p&gt;
&lt;p&gt;このパブリック ベータ版から、GitHub Enterprise Cloud (GHEC) ユーザーは独自の保護ルールを作成してデプロイ ワークフローを制御し、必要に応じてアプリを GitHub Marketplace に公開して共有できます。&lt;br /&gt;
また&lt;a href=&quot;https://docs.github.com/en/actions/deployment/protecting-deployments/configuring-custom-deployment-protection-rules#using-existing-custom-deployment-protection-rules&quot;&gt;、さまざまな外部パートナーから展開保護ルール&lt;/a&gt;の公式アプリをインストールして、アクション ワークフローで展開を制御するために使用できるサービスでセキュリティ、コンプライアンス、およびガバナンス関連の条件を定義することもできます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/67774922/233233806-69479159-154f-4682-a267-b7d0e58aac74.png?ssl=1&quot; alt=&quot;運用環境で有効になっている 2 つのカスタム展開保護ルール&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;品質、セキュリティ、および手動承認のすべての要件に合格したデプロイのみが本番環境に移行することを保証する、厳格で合理化されたガードレールをデプロイに設定するための&lt;a href=&quot;https://docs.github.com/en/actions/deployment/protecting-deployments&quot;&gt;カスタム デプロイ保護ルールの作成と構成&lt;/a&gt;の詳細をご覧ください。&lt;/p&gt;
&lt;p&gt;質問がある場合は、 &lt;a href=&quot;https://github.com/orgs/community/discussions/53324&quot;&gt;GitHub Actions コミュニティ&lt;/a&gt;にアクセスしてください。&lt;br /&gt;
 Actions の次の予定を確認するには、&lt;a href=&quot;https://github.com/orgs/github/projects/4247&quot;&gt;パブリック ロードマップ&lt;/a&gt;にアクセスしてください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71448</post-id></item><item><title>プル リクエスト マージ キュー (パブリック ベータ): API サポートと最近の修正</title><link>https://github.blog/changelog/2023-04-19-pull-request-merge-queue-public-beta-api-support-and-recent-fixes</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 19 Apr 2023 16:48:17 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-19-auto-draft</guid><description>As we work towards general availability of pull request merge queue, we want to thank everyone that has provided feedback &amp;#10084; (keep it coming!) and let you know about some recent fixes and new API support. See the public beta announcement to learn more about merge queue and how it can help increase velocity by [&amp;#8230;]</description><content:encoded>&lt;p&gt;プル リクエスト マージ キューの一般提供に向けて取り組んでいるため、&lt;a href=&quot;https://github.com/community/community/discussions/46757&quot;&gt;フィードバック&lt;/a&gt;を提供してくださった皆様に感謝いたします。 &lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2764.png?v8&quot; alias=&quot;heart&quot;&gt; ❤&lt;/g-emoji&gt; (引き続きお知らせします!) 最近の修正と新しい API サポートについてお知らせします。&lt;/p&gt;
&lt;p&gt;マージ キューの詳細と、最も使用頻度の高いブランチへのプル リクエストのマージを自動化することで速度を向上させる方法については、パブリック ベータ版&lt;a href=&quot;https://github.blog/changelog/2023-02-08-pull-request-merge-queue-public-beta/&quot;&gt;の発表&lt;/a&gt;を参照してください。 &lt;/p&gt;
&lt;h2 id=&quot;api-support&quot;&gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f195.png?v8&quot; alias=&quot;new&quot;&gt; 🆕&lt;/g-emoji&gt; API サポート&lt;a href=&quot;#api-support&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f195.png?v8&quot; alias=&quot;new&quot;&gt;🆕&lt;/a&gt;&lt;/g-emoji&gt; &lt;a href=&quot;#api-support&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f195.png?v8&quot; alias=&quot;new&quot;&gt;APIサポート&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;新しい GraphQL API を使用して、プログラムでマージ キューを操作できるようになりました。プル リクエストをキューに追加またはキューから削除し、どのプル リクエストがキューに入れられているかを確認し、キューに入れられたプル リクエストの詳細を取得します。例えば：&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/graphql/reference/mutations#enqueuepullrequest&quot;&gt;&lt;code&gt;enqueuePullRequest&lt;/code&gt;&lt;/a&gt;ミューテーションを呼び出してプル リクエストをキューに追加するか、 &lt;a href=&quot;https://docs.github.com/en/graphql/reference/mutations#dequeuepullrequest&quot;&gt;&lt;code&gt;dequeuePullRequest&lt;/code&gt;&lt;/a&gt;を呼び出してプル リクエストを削除します。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/graphql/reference/objects#repository&quot;&gt;&lt;code&gt;Repository&lt;/code&gt;&lt;/a&gt;の&lt;code&gt;mergeQueue&lt;/code&gt;フィールドを使用して、そのコンテンツまたは構成を一覧表示します。 &lt;a href=&quot;https://docs.github.com/en/graphql/reference/objects#pullrequest&quot;&gt;&lt;code&gt;PullRequest&lt;/code&gt;&lt;/a&gt;の&lt;code&gt;mergeQueueEntry&lt;/code&gt;フィールドを使用して、状態、キュー内の位置、マージの推定時間など、キューに入れられたプル リクエストに関する詳細を取得します。 &lt;/p&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png?v8&quot; alias=&quot;bug&quot;&gt; 🐛&lt;/g-emoji&gt;修正&lt;a href=&quot;#fixes&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png?v8&quot; alias=&quot;bug&quot;&gt;🐛&lt;/a&gt;&lt;/g-emoji&gt; &lt;a href=&quot;#fixes&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png?v8&quot; alias=&quot;bug&quot;&gt;修正&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;パブリック ベータ版のリリース以降に行われた注目すべき修正の一部:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修正済み: GitHub Actions ワークフローが、一部のリポジトリの&lt;code&gt;merge_group&lt;/code&gt;イベントでトリガーされない&lt;/li&gt;
&lt;li&gt;修正: キューに入れられたプル リクエストが失敗すると、チェックが再実行されて合格した後でも失敗したままになる&lt;/li&gt;
&lt;li&gt;修正: 紛らわしい「このプル リクエストを参照するコミットをプッシュしました」というメッセージがタイムラインに表示される&lt;/li&gt;
&lt;li&gt;修正: コミットは、キューで作成された prep ブランチにプッシュできました (注: これらのコミットは無視され、マージされませんでしたが、一部のユーザーに混乱を引き起こしました)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;get-started&quot;&gt;始めましょう&lt;a href=&quot;#get-started&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Get started&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;マージ キューに興味がありますか? &lt;a href=&quot;https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue&quot;&gt;開始&lt;/a&gt;方法をご覧ください。&lt;/p&gt;
&lt;p&gt;質問や提案？&lt;a href=&quot;https://github.com/community/community/discussions/46757&quot;&gt;マージ キューのパブリック ベータ ディスカッション&lt;/a&gt;に参加してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71434</post-id></item><item><title>npm 来歴パブリックベータ</title><link>https://github.blog/changelog/2023-04-19-npm-provenance-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 19 Apr 2023 16:11:34 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-19-npm-provenance-public-beta</guid><description>npm provenance public beta</description><content:encoded>&lt;p&gt;クラウド CI/CD システム (GitHub Actions など) 上に構築された npm パッケージは、来歴とともに公開できるようになりました。つまり、パッケージにはソース コードとビルド手順への検証可能なリンクが含まれています。&lt;/p&gt;
&lt;p&gt;クラウド CI/CD システムは、署名された OIDC JWT で来歴情報を Sigstore の公益サーバーに送信することで、この情報を安全に通信します。Sigstore の公共財サーバーは、ビルドされたパッケージと共にレジストリに送信される署名証明書を返します。&lt;/p&gt;
&lt;p&gt; GitHub Actions ワークフローで来歴を使用してビルドを行う方法の例を次に示します。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-yml&quot;&gt;name: Publish Package to npmjs
 on:
 release:
 types: [created]
 jobs:
 build:
 runs-on: ubuntu-latest
 permissions:
 contents: read
 id-token: write
 steps:
 - uses: actions/checkout@v3
 - uses: actions/setup-node@v3
 with:
 node-version: &amp;#39;18.x&amp;#39;
 registry-url: &amp;#39;https://registry.npmjs.org&amp;#39;
 - run: npm install -g npm
 - run: npm ci
 - run: npm publish --provenance --access public
 env:
 NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;公開されると、パッケージは&lt;a href=&quot;https://www.npmjs.com/package/sigstore#provenance&quot;&gt;レジストリ Web サイト&lt;/a&gt;で来歴を表示します。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/167759/223777293-fe4b08cf-7474-40fd-9853-1638e88fb611.png?ssl=1&quot; alt=&quot;レジストリ Web サイトに表示される来歴&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;来歴のある依存関係は&lt;code&gt;npm audit signatures&lt;/code&gt;を使用してコマンド ラインから検証することもできます。&lt;/p&gt;
&lt;p&gt;詳細については、&lt;a href=&quot;https://docs.npmjs.com/generating-provenance-statements&quot;&gt;来歴の生成を&lt;/a&gt;参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71433</post-id></item><item><title>REST API を使用して非公開の脆弱性レポートを開く</title><link>https://github.blog/changelog/2023-04-18-open-a-private-vulnerability-report-with-rest-api</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 18 Apr 2023 22:46:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-18-open-a-private-vulnerability-report-with-rest-api</guid><description>Open a private vulnerability report with REST API</description><content:encoded>&lt;p&gt;REST API を使用して、この機能が有効になっているオープンソース リポジトリで&lt;a href=&quot;https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability&quot;&gt;非公開の脆弱性レポート&lt;/a&gt;を開くことができるようになりました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/rest/security-advisories/repository-advisories?apiVersion=2022-11-28&quot;&gt;リポジトリ セキュリティ アドバイザリ REST API&lt;/a&gt;の詳細&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71429</post-id></item><item><title>ホバーカード URL を使用してリポジトリの名前、説明、星の数を表示できるバグを修正しました</title><link>https://github.blog/changelog/2023-04-17-fixed-bug-that-allowed-a-hovercard-url-to-be-used-to-display-the-name-description-and-star-count-of-any-repository</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 17 Apr 2023 20:04:40 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-17-fixed-bug-that-allowed-a-hovercard-url-to-be-used-to-display-the-name-description-and-star-count-of-any-repository</guid><description>Fixed bug that allowed a hovercard URL to be used to display the name, description, and star count of any repository</description><content:encoded>&lt;p&gt;2023 年 3 月 30 日、依存関係グラフのホバーカード URL を使用して、GitHub.com 上の任意のリポジトリの名前、説明、スター数を取得できるバグを修正しました。このバグは 2023 年 3 月 28 日に発生し、調査の結果、悪用された形跡は見つかりませんでした。バグを悪用するには、提供されたリポジトリの URL と数値 ID にリクエストを送信するときに、特定のヘッダーを設定する必要がありました。 URL は、ホバーカード UI 要素に使用するように設計された HTML コンテンツを返し、リポジトリ名、説明、星の数が応答に含まれます。&lt;/p&gt;
&lt;p&gt;このバグは、 &lt;a href=&quot;https://bounty.github.com&quot;&gt;GitHub バグ報奨金プログラム&lt;/a&gt;を通じて GitHub に報告されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71389</post-id></item><item><title>ディスカッション カテゴリをセクションに整理する</title><link>https://github.blog/changelog/2023-04-17-organize-discussions-categories-into-sections</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 17 Apr 2023 19:07:57 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-17-organize-discussions-categories-into-sections</guid><description>Organize Discussions Categories into Sections</description><content:encoded>&lt;p&gt;独自の&lt;a href=&quot;https://github.com/orgs/community/discussions/&quot;&gt;コミュニティ&lt;/a&gt;でコンテンツを整理するためにカテゴリ セクションが導入されて以来、ユーザーは、独自のディスカッションを整理するために同様の機能を求めてきました。本日、すべてのメンテナがディスカッション カテゴリをセクションにグループ化できる機能を導入します。これにより、ユーザーはコンテンツをより適切に整理し、新しいコンテンツをより簡単に見つけることができるようになると考えています。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;スクリーンショット 2023 年 4 月 17 日午前 8 時 28 分 12 時&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/3157267/232538320-ebc0040c-02e8-4116-84ab-9cb3250bbc9b.png?w=371&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;この機能の UI は、私たち自身のコミュニティのものと似ていますが、ユーザーがカテゴリを編集するときに新しい UI が表示されるようになりました。ユーザーは、新しいカテゴリを作成できるだけでなく、[ディスカッション カテゴリの管理] ページから新しいセクションを作成することもできます。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;スクリーンショット 2023 年 4 月 17 日午前 8 時 30 分 22 時&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/3157267/232538584-f38cd2f9-0576-454d-99d9-cd07df245b52.png?w=277&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;単一のカテゴリを編集すると、既存のセクションに追加するオプションもユーザーに提供されるようになりました。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;スクリーンショット 2023 年 4 月 17 日午前 8 時 31 分 41 秒&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/3157267/232538661-611ee835-8622-4a74-a1c8-1ce6207558e4.png?w=729&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;質問やフィードバックについては、&lt;a href=&quot;https://github.com/orgs/community/discussions&quot;&gt;コミュニティ&lt;/a&gt;にアクセスしてください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71387</post-id></item><item><title>組織レベルのセキュリティ カバレッジ ページから複数のリポジトリのセキュリティ機能を有効にします</title><link>https://github.blog/changelog/2023-04-17-enable-security-features-for-multiple-repositories-from-your-organization-level-security-coverage-page</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 17 Apr 2023 17:34:42 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-17-enable-security-features-for-multiple-repositories-from-your-organization-level-security-coverage-page</guid><description>Enable security features for multiple repositories from your organization-level security coverage page</description><content:encoded>&lt;p&gt;本日公開ベータ版で利用可能なセキュリティ カバレッジ ページには、マルチリポジトリの有効化が含まれるようになりました。これにより、一度に複数のリポジトリにわたってセキュリティ機能を有効または無効にすることができます。この機能は、組織内のすべてのリポジトリに対して一度に 1 つのセキュリティ機能のみを有効にできる「すべてを有効にする」機能を改善します。&lt;/p&gt;
&lt;p&gt;マルチリポジトリの有効化により、チームやリポジトリのトピックなどの属性に基づいてリポジトリをフィルタリングし、数回クリックするだけでそれらのリポジトリのみのセキュリティ機能を有効または無効にすることもできます。 &lt;br /&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;セキュリティ カバレッジ ページのマルチリポジトリ有効化パネル&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/2262535/232230535-8b916a4e-7622-4459-8588-63a276fe8359.png?ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;
&lt;/p&gt;
&lt;p&gt;マルチリポジトリの有効化を使用して、次のセキュリティ機能を有効/無効にすることができます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;依存関係グラフ&lt;/li&gt;
&lt;li&gt;Dependabot アラート&lt;/li&gt;
&lt;li&gt;Dependabot のセキュリティ アップデート&lt;/li&gt;
&lt;li&gt;GitHub の高度なセキュリティ&lt;/li&gt;
&lt;li&gt;コードスキャンのデフォルト設定&lt;/li&gt;
&lt;li&gt;シークレットスキャン&lt;/li&gt;
&lt;li&gt;プッシュ保護&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの改善は、パブリック ベータとして GitHub.com に出荷されており、GitHub Enterprise Server 3.10 で利用できるようになります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/security-overview/enabling-security-features-for-multiple-repositories&quot;&gt;マルチリポジトリの有効化の詳細を確認し&lt;/a&gt;、&lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;フィードバックをお送りください&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;a href=&quot;https://github.com/features/security&quot;&gt;GitHub の高度なセキュリティについて詳しく知る&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71384</post-id></item><item><title>リポジトリ ルールのパブリック ベータ版の紹介</title><link>https://github.blog/changelog/2023-04-17-introducing-repository-rules-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 17 Apr 2023 15:38:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-17-introducing-repository-rules-public-beta</guid><description>Introducing Repository Rules Public Beta</description><content:encoded>&lt;p&gt;本日、リポジトリ ルールのパブリック ベータ版を発表します。 &lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f389.png&quot; alt=&quot;🎉&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;リポジトリ ルールは、ブランチ保護の GitHub の次の進化であり、リポジトリのセキュリティとコンプライアンスを大規模に強化するのに役立ちます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/7575792/229238416-32e3a767-2d4a-404a-a28a-5a778c3371db.png?ssl=1&quot; alt=&quot;ルールセットの概要のスクリーンショット&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;ルールを使用すると、リポジトリ内のブランチとタグの保護を簡単に定義できます。また、GitHub Enterprise Cloud の顧客であれば、それらを組織全体に適用できます。また、リポジトリで共同作業しているすべての人が、どのようなルールが適用されているかを簡単に知ることができます。&lt;/p&gt;
&lt;h1 id=&quot;creating-rules&quot; id=&quot;creating-rules&quot; &gt;ルールの作成&lt;a href=&quot;#creating-rules&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Creating rules&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/7575792/229236946-f91a103c-112f-4f84-b3e0-e8393703e4b8.png?ssl=1&quot; alt=&quot;ルールセット作成のスクリーンショット&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;ルールの中核となるのは、ルールセットを定義する機能です。ルールセットは、まとめて適用されるルールの集まりです。たとえば、ブランチへのすべてのコミットが署名されていること、およびそれらのコミットに 2 人のレビュー担当者がいることが要求される場合があります。ルールセットはタグにも適用できるため、リリースにルールを適用できます。&lt;/p&gt;
&lt;p&gt;ルールセット ページは、リポジトリのすべてのルールを表示および管理するための中心的な場所です。現在適用されているルールが表示され、新しいルールセットを追加したり、既存のルールセットを編集したりできます。&lt;/p&gt;
&lt;p&gt;ルールセットを作成するときは、その施行ステータスを&lt;code&gt;active&lt;/code&gt;または&lt;code&gt;disabled&lt;/code&gt;として定義します。アクティブなルールセットは、コミットがマージされるために合格する必要がありますが、 &lt;code&gt;disabled&lt;/code&gt;ルールセットは強制されません。マージを妨げることはありませんが、管理者はルールを適用する前にルールを作成できます。Enterprise Cloud のお客様は、ルールセットを&lt;code&gt;evaluate&lt;/code&gt;こともできます。これは、新しいルールが&lt;code&gt;active&lt;/code&gt;なって適用される前に、その影響を理解するための「予行演習」モードです。&lt;/p&gt;
&lt;p&gt;デフォルトのブランチ、すべてのブランチ、および&lt;em&gt;fnmatch&lt;/em&gt;パターンに一致するブランチまたはタグを選択するオプションを使用して、ルールセットでブランチとタグをターゲットにすることも簡単です。ルールセットに複数のパターンを追加して、さまざまなブランチやタグの命名スタイルに適用できます。&lt;/p&gt;
&lt;h1 id=&quot;viewing-the-rules&quot; id=&quot;viewing-the-rules&quot; &gt;ルールの表示&lt;a href=&quot;#viewing-the-rules&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Viewing the rules&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;リポジトリにどのようなルールが適用されているかを常に知ることができます。&lt;/p&gt;
&lt;p&gt;リポジトリへの読み取りアクセス権を持つユーザーは誰でも、そのルールとその意味を表示できます。ルールセットの概要は、シールド アイコンをクリックしてブランチ ページから、プル リクエストから、およびルールがプッシュをブロックする場合の Git CLI の出力からリンクされます。&lt;/p&gt;
&lt;p&gt;ここから、ブランチまたはタグでルールをフィルタリングして、次のプッシュでルールがどのように適用されるかを理解できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/7575792/229240158-4a0f407f-3211-4a78-95f8-d5bfa56c77f4.png?ssl=1&quot; alt=&quot;ルールの読み取り専用ビューのスクリーンショット&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;getting-started&quot; id=&quot;getting-started&quot; &gt;入門&lt;a href=&quot;#getting-started&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Getting Started&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt; GitHub クラウドのすべてのお客様がリポジトリ ルールを利用できるようになりました。開始するには、 &lt;a href=&quot;https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets&quot;&gt;ドキュメントに&lt;/a&gt;アクセスして、ルールを有効にして使用する方法を確認してください。 Enterprise Cloud のお客様は、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets&quot;&gt;ドキュメント&lt;/a&gt;にアクセスして、組織のルールセットなどについて学習してください。&lt;/p&gt;
&lt;p&gt;リポジトリ ルールを改善する方法について、ご意見をお聞かせください。リポジトリ ルール&lt;a href=&quot;https://github.com/orgs/community/discussions/52652&quot;&gt;パブリック ベータ ディスカッション&lt;/a&gt;の会話に参加してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71381</post-id></item></channel></rss>