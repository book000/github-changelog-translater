<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>Changelogs Archive - The GitHub Blog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Fri, 28 Jun 2024 16:46:46 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.5.5</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Changelogs Archive - The GitHub Blog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>SBOM に著作権帰属データが含まれるようになりました</title><link>https://github.blog/changelog/2024-06-27-sboms-now-include-copyright-attribution-data</link><dc:creator>Allison</dc:creator><pubDate>Thu, 27 Jun 2024 20:33:22 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-27-sboms-now-include-copyright-attribution-data</guid><description>&lt;p&gt;SBOMs now include copyright attribution data&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-27-sboms-now-include-copyright-attribution-data&quot;&gt;SBOMs now include copyright attribution data&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub ユーザーは、リポジトリのソフトウェア部品表 (SBOM) ファイルを作成して、その依存関係を理解することができます。 SBOM は、プロジェクトの依存関係と関連情報の機械読み取り可能なインベントリです。このリリースでは、SBOM の依存関係の著作権帰属データを追加しました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/exporting-a-software-bill-of-materials-for-your-repository&quot;&gt;SBOM ファイルと、GitHub がソフトウェア サプライ チェーンの保護にどのように役立つかについて詳しく説明します&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-06-27-sboms-now-include-copyright-attribution-data&quot;&gt;SBOM に著作権帰属データが含まれるようになりまし&lt;/a&gt;た appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; 。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78654</post-id></item><item><title>GitHub の問題とプロジェクト – プロジェクトのステータス更新などのための GraphQL と Webhook のサポート!</title><link>https://github.blog/changelog/2024-06-27-github-issues-projects-graphql-and-webhook-support-for-project-status-updates-and-more</link><dc:creator>Allison</dc:creator><pubDate>Thu, 27 Jun 2024 19:40:05 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-27-github-issues-projects-graphql-and-webhook-support-for-project-status-updates-and-more</guid><description>&lt;p&gt;GitHub Issues &amp;#38; Projects - GraphQL and webhook support for project status updates and more!&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-27-github-issues-projects-graphql-and-webhook-support-for-project-status-updates-and-more&quot;&gt;GitHub Issues &amp;amp; Projects &amp;#8211; GraphQL and webhook support for project status updates and more!&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;今日の変更ログでは&lt;a href=&quot;https://docs.github.com/en/issues/planning-and-tracking-with-projects/learning-about-projects/sharing-project-updates&quot;&gt;、プロジェクトのステータス更新&lt;/a&gt;とプロジェクトのカスタム フィールドの変更を Webhook イベントで直接行うための GraphQL と Webhook のサポートを紹介します。 &lt;/p&gt;
&lt;h2 id=&quot;using-graphql-and-webooks-with-project-status-updates&quot;&gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2699.png?v8&quot; alias=&quot;gear&quot;&gt; ⚙&lt;/g-emoji&gt; GraphQL と Webook を使用してプロジェクトのステータスを更新する&lt;a href=&quot;#using-graphql-and-webooks-with-project-status-updates&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2699.png?v8&quot; alias=&quot;gear&quot;&gt;&amp;#9881;&lt;/g-emoji&gt; Using GraphQL and webooks with project status updates&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-01-18-github-issues-projects-project-status-updates-issues-side-panel/&quot;&gt;今年初めのプロジェクト ステータス更新の&lt;/a&gt;リリースに続き、GraphQL と Webhook を使用してプロジェクト ステータス更新を操作できるようになりました。これにより、プロジェクト ステータスの更新情報を提供および収集する方法を自動化する新しい方法が可能になります。&lt;/p&gt;
&lt;h3 id=&quot;graphql&quot;&gt;グラフQL &lt;a href=&quot;#graphql&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;GraphQL&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;プロジェクト ステータスの更新を操作するための新しい&lt;a href=&quot;https://docs.github.com/en/graphql/reference/objects#projectv2statusupdate&quot;&gt;&lt;code&gt;ProjectV2StatusUpdate&lt;/code&gt;&lt;/a&gt; GraphQL オブジェクトがあり、ステータスの更新を表示、作成、更新、削除できます。&lt;/p&gt;
&lt;p&gt;以下は、新しいプロジェクト ステータス更新&lt;a href=&quot;https://docs.github.com/en/graphql/reference/mutations#createprojectv2statusupdate&quot;&gt;を作成する&lt;/a&gt;ためのクエリの例です。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;mutation {
 createProjectV2StatusUpdate(
 input: {projectId: &quot;0123456&quot;, body: &quot;We wrapped up our bug bash following the beta rollout. We&amp;#39;re back on track for our GA date in August! 🚀&quot;, startDate: &quot;2024-06-03&quot;, targetDate: &quot;2024-08-09&quot;, status: ON_TRACK}
 ) {
 statusUpdate {
 id
 startDate
 targetDate
 body
 bodyHTML
 status
 }
 }
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;webhooks&quot;&gt; Webhook &lt;a href=&quot;#webhooks&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Webhooks&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;プロジェクト ステータスの更新は、新しい&lt;a href=&quot;https://docs.github.com/en/webhooks/webhook-events-and-payloads#projects_v2_status_update&quot;&gt;&lt;code&gt;projects_v2_status_update&lt;/code&gt;&lt;/a&gt; Webhook イベントに含まれるため、新しいプロジェクト ステータスの更新が提供されたときに理解し、通知を受け取ることができます。&lt;/p&gt;
&lt;p&gt;この情報を受け取るには、組織設定ページからこのイベントにサブスクライブする必要があります。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/6b58d44a-83fe-413d-8920-9a4ca166317c&quot; alt=&quot;Webhook イベントの組織設定&quot; /&gt;&lt;/p&gt;
&lt;p&gt;以下は Webhook イベントの例です。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;{
 &quot;action&quot;: &quot;edited&quot;,
 &quot;projects_v2_status_update&quot;: {
 &quot;id&quot;: 32633,
 &quot;node_id&quot;: &quot;PVTSU_lADOBH2n9s4Ajp6VzX95&quot;,
 &quot;project_node_id&quot;: &quot;PVT_kwDOBH2n9s4Ajp6V&quot;,
 &quot;creator&quot;: {
 ...
 },
 &quot;body&quot;: &quot;We&amp;#39;ve kicked off this project and are feeling confident in our rollout plan. More updates and demos to come next week!&quot;,
 &quot;start_date&quot;: &quot;2024-06-24&quot;,
 &quot;target_date&quot;: &quot;2024-08-16&quot;,
 &quot;status&quot;: &quot;ON_TRACK&quot;,
 &quot;created_at&quot;: &quot;2024-06-24T20:27:48Z&quot;,
 &quot;updated_at&quot;: &quot;2024-06-24T20:30:47Z&quot;
 },
 &quot;changes&quot;: {
 &quot;body&quot;: {
 &quot;from&quot;: &quot;We&amp;#39;re still planning this out and are kicking off soon.&quot;,
 &quot;to&quot;: &quot;We&amp;#39;ve kicked off this project and are feeling confident in our rollout plan. More updates and demos to come next week!&quot;
 },
 &quot;status&quot;: {
 &quot;from&quot;: &quot;INACTIVE&quot;,
 &quot;to&quot;: &quot;ON_TRACK&quot;
 },
 &quot;start_date&quot;: {
 &quot;from&quot;: null,
 &quot;to&quot;: &quot;2024-06-24&quot;
 },
 &quot;target_date&quot;: {
 &quot;from&quot;: null,
 &quot;to&quot;: &quot;2024-08-16&quot;
 }
 },
 &quot;organization&quot;: {
 ...
 },
 &quot;sender&quot;: {
 ...
 }
 }
&lt;/code&gt; &lt;/pre&gt;
&lt;h2 id=&quot;using-webhooks-for-project-custom-field-changes&quot;&gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2795.png?v8&quot; alias=&quot;heavy_plus_sign&quot;&gt; ➕&lt;/g-emoji&gt;プロジェクトのカスタムフィールド変更に Webhook を使用する&lt;a href=&quot;#using-webhooks-for-project-custom-field-changes&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2795.png?v8&quot; alias=&quot;heavy_plus_sign&quot;&gt;&amp;#10133;&lt;/g-emoji&gt; Using webhooks for project custom field changes&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;プロジェクト カスタム フィールドの変更は、プロジェクト アイテムのフィールドが編集されるときに&lt;a href=&quot;https://docs.github.com/en/webhooks/webhook-events-and-payloads?actionType=edited#projects_v2_item&quot;&gt;&lt;code&gt;project_v2_item&lt;/code&gt;&lt;/a&gt; webhook イベントに直接含まれるようになり、追加の GraphQL クエリを送信する必要がなくなります。これにより、以前のフィールド値と現在のフィールド値が得られ、プロジェクト フィールドが時間の経過とともにどのように変化するか、特定の値がどのくらいの期間保持されているかを把握できるため、アイテムが&lt;code&gt;Done&lt;/code&gt;ステータスに移行するまでにどのくらいの期間&lt;code&gt;In progress&lt;/code&gt;だったかを把握できます。&lt;/p&gt;
&lt;p&gt;以下は、 &lt;code&gt;changes&lt;/code&gt;パラメーターを使用して、 &lt;code&gt;single select&lt;/code&gt; 、 &lt;code&gt;text&lt;/code&gt; 、 &lt;code&gt;number&lt;/code&gt; 、 &lt;code&gt;iteration&lt;/code&gt; 、および&lt;code&gt;date&lt;/code&gt;プロジェクトのカスタム フィールドの前の値と現在の値を含む Webhook の例です。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;&quot;changes&quot;: {
 &quot;field_value&quot;: {
 &quot;field_node_id&quot;: &quot;PVTSSF_lADOBH2n9s4Aje1Izgb1kEs&quot;,
 &quot;field_type&quot;: &quot;single_select&quot;,
 &quot;field_name&quot;: &quot;Status&quot;,
 &quot;project_number&quot;: 18,
 &quot;from&quot;: {
 &quot;id&quot;: &quot;f75ad846&quot;,
 &quot;name&quot;: &quot;Todo&quot;,
 &quot;color&quot;: &quot;GREEN&quot;,
 &quot;description&quot;: &quot;This item hasn&amp;#39;t been started&quot;
 },
 &quot;to&quot;: {
 &quot;id&quot;: &quot;47fc9ee4&quot;,
 &quot;name&quot;: &quot;In Progress&quot;,
 &quot;color&quot;: &quot;YELLOW&quot;,
 &quot;description&quot;: &quot;This is actively being worked on&quot;
 }
 }
 },
&lt;/code&gt; &lt;/pre&gt;
&lt;h2 id=&quot;bug-fixes-and-improvements&quot;&gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt; ✨&lt;/g-emoji&gt;バグ修正と改善&lt;a href=&quot;#bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt;&amp;#10024;&lt;/g-emoji&gt; Bug fixes and improvements&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ドラフトを課題に変換するための&lt;a href=&quot;https://docs.github.com/en/graphql/reference/mutations#convertprojectv2draftissueitemtoissue&quot;&gt;&lt;code&gt;convertProjectV2DraftIssueItemToIssue&lt;/code&gt;&lt;/a&gt; GraphQL ミューテーションを追加しました&lt;/li&gt;
&lt;li&gt;テーブルレイアウトの列のサイズを変更するときのエラーメッセージを修正しました&lt;/li&gt;
&lt;li&gt;クラシック プロジェクトを新しいプロジェクト エクスペリエンスに移行する際のエラーを修正しました&lt;/li&gt;
&lt;li&gt;プロジェクトのサイド パネルで問題を更新してもプロジェクト ビューに反映されないバグを修正しました。&lt;/li&gt;
&lt;li&gt;テーブル レイアウト セルのドロップダウンからの単一選択フィールドの説明における特殊文字のレンダリングを修正しました。&lt;/li&gt;
&lt;li&gt;プロジェクト チャートのタイトルにスペースを追加できないバグを修正しました&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;%e2%9c%8d%ef%b8%8f-tell-us-what-you-think&quot;&gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/270d.png&quot; alt=&quot;✍&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;あなたが考えていることを私に伝えてください！ &lt;a href=&quot;#%e2%9c%8d%ef%b8%8f-tell-us-what-you-think&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x270d; Tell us what you think!&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/orgs/community/discussions/129854&quot;&gt;コミュニティ ディスカッション&lt;/a&gt;の会話に参加して、フィードバックを共有してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;http://github.com/features/issues&quot;&gt;GitHub Issues&lt;/a&gt;でプロジェクト計画に GitHub を使用する方法を確認し、&lt;a href=&quot;https://github.com/orgs/github/projects/4247/views/7&quot;&gt;ロードマップ&lt;/a&gt;の内容を確認し、&lt;a href=&quot;https://docs.github.com/issues&quot;&gt;ドキュメント&lt;/a&gt;で詳細を確認してください。&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-06-27-github-issues-projects-graphql-and-webhook-support-for-project-status-updates-and-more&quot;&gt;GitHub の問題とプロジェクト – プロジェクトのステータス更新などのための GraphQL と Webhook のサポート!&lt;/a&gt;最初に登場したのは&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;です。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78653</post-id></item><item><title>Copilot Enterprise はプル リクエスト、ディスカッション、ファイルについて知っています – 6 月の更新</title><link>https://github.blog/changelog/2024-06-27-copilot-enterprise-knows-about-pull-requests-discussions-and-files-june-updates</link><dc:creator>Allison</dc:creator><pubDate>Thu, 27 Jun 2024 15:57:40 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-27-copilot-enterprise-knows-about-pull-requests-discussions-and-files-june-updates</guid><description>&lt;p&gt;Copilot Enterprise knows about pull requests, discussions, and files - June Updates&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-27-copilot-enterprise-knows-about-pull-requests-discussions-and-files-june-updates&quot;&gt;Copilot Enterprise knows about pull requests, discussions, and files &amp;#8211; June Updates&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/16601204/c8ab6d3d-8dac-46e4-a528-5a12d42a62db&quot; alt=&quot;CE 6 月の変更履歴&quot; /&gt;&lt;/p&gt;
&lt;p&gt;あと 1 か月で、Copilot Enterprise のエキサイティングなアップデートがまた始まります。詳しく見てみましょう: &lt;/p&gt;
&lt;h3 id=&quot;copilot-chat-in-github-com-can-now-answer-questions-about-your-pull-requests-discussions-and-files&quot;&gt; GitHub.com の Copilot Chat で、プル リクエスト、ディスカッション、ファイルに関する質問に答えられるようになりました。 &lt;a href=&quot;#copilot-chat-in-github-com-can-now-answer-questions-about-your-pull-requests-discussions-and-files&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Copilot Chat in GitHub.com can now answer questions about your pull requests, discussions, and files.&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;プル リクエストの最新情報&lt;/strong&gt;: Copilot は、プル リクエストに関する質問に答え、プル リクエストによって導入された変更の概要を提供します。詳細については、GitHub ドキュメントの「 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/copilot/github-copilot-chat/copilot-chat-in-github/using-github-copilot-chat-in-githubcom#asking-questions-about-a-specific-pull-request&quot;&gt;特定のプル リクエストに関する質問&lt;/a&gt;」を参照してください。&lt;br /&gt;
 –&lt;strong&gt;自分で試してみる&lt;/strong&gt;: GitHub.com のプル リクエストに移動し、Copilot に&lt;code&gt;Tell me about this Pull Request&lt;/code&gt;よう依頼します。 &lt;/p&gt;
&lt;div style=&quot;width: 3034px;&quot; class=&quot;wp-video&quot;&gt;&lt;!--[if lt IE 9]&gt;&lt;script&gt;document.createElement(&apos;video&apos;);&lt;/script&gt;&lt;![endif]--&gt;
&lt;video class=&quot;wp-video-shortcode&quot; id=&quot;video-78640-1&quot; width=&quot;3034&quot; height=&quot;1946&quot; preload=&quot;metadata&quot; controls=&quot;controls&quot;&gt;&lt;source type=&quot;video/mp4&quot; src=&quot;https://github.blog/wp-content/uploads/2024/06/pr_plus_file.mp4#t=0.001&quot; /&gt; &lt;a href=&quot;https://github.blog/wp-content/uploads/2024/06/pr_plus_file.mp4#t=0.001&quot;&gt;https://github.blog/wp-content/uploads/2024/06/pr_plus_file.mp4#t=0.001&lt;/a&gt;&lt;/video&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;ディスカッションをさらに活用する&lt;/strong&gt;Copilot は、ディスカッションやディスカッションのコメントを要約することで、迅速に状況を理解するのに役立ちます。さらに、Copilot は、さまざまな参加者によるディスカッションやコメントのテーマを特定して、コンテキストをシームレスに把握できるようにします。詳細については、GitHub ドキュメントの「 &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/copilot/github-copilot-chat/copilot-chat-in-github/using-github-copilot-chat-in-githubcom#asking-a-question-about-a-specific-issue-or-discussion&quot;&gt;特定の問題またはディスカッションについて質問する&lt;/a&gt;」を参照してください。&lt;br /&gt;
 –&lt;strong&gt;自分で試してみる&lt;/strong&gt;: GitHub.com のディスカッションに移動し、Copilot に&lt;code&gt;Summarize this discussion&lt;/code&gt;依頼します&lt;/p&gt;
&lt;div style=&quot;width: 3034px;&quot; class=&quot;wp-video&quot;&gt;&lt;video class=&quot;wp-video-shortcode&quot; id=&quot;video-78640-2&quot; width=&quot;3034&quot; height=&quot;1946&quot; preload=&quot;metadata&quot; controls=&quot;controls&quot;&gt;&lt;source type=&quot;video/mp4&quot; src=&quot;https://github.blog/wp-content/uploads/2024/06/discussions.mp4#t=0.001&quot; /&gt; &lt;a href=&quot;https://github.blog/wp-content/uploads/2024/06/discussions.mp4#t=0.001&quot;&gt;https://github.blog/wp-content/uploads/2024/06/Discussions.mp4#t=0.001&lt;/a&gt;&lt;/video&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;ファイルについて質問し、最近の変更について知る&lt;/strong&gt;: Copilot は、ファイルについて教えたり、任意のブランチ上のファイルの最新の変更を取得したりできるようになりました。コードベースとその中で何が変更されているかをより深く理解するために、ファイル内で何が変更されたかを Copilot に教えてもらいます。詳細については、GitHub ドキュメントの「 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/copilot/github-copilot-chat/copilot-chat-in-github/using-github-copilot-chat-in-githubcom#currently-available-skills&quot;&gt;ファイル詳細スキル&lt;/a&gt;」を参照してください。&lt;br /&gt;
 –&lt;strong&gt;自分で試してみる&lt;/strong&gt;: GitHub.com 上のファイルに移動し、Copilot に「 &lt;code&gt;What&amp;#39;s changed in this file recently?&lt;/code&gt;と尋ねます。 &lt;/p&gt;
&lt;div style=&quot;width: 3034px;&quot; class=&quot;wp-video&quot;&gt;&lt;video class=&quot;wp-video-shortcode&quot; id=&quot;video-78640-3&quot; width=&quot;3034&quot; height=&quot;1946&quot; preload=&quot;metadata&quot; controls=&quot;controls&quot;&gt;&lt;source type=&quot;video/mp4&quot; src=&quot;https://github.blog/wp-content/uploads/2024/06/file_history.mp4#t=0.001&quot; /&gt; &lt;a href=&quot;https://github.blog/wp-content/uploads/2024/06/file_history.mp4#t=0.001&quot;&gt;https://github.blog/wp-content/uploads/2024/06/file_history.mp4#t=0.001&lt;/a&gt; &lt;/video&gt;&lt;/div&gt;
&lt;h3 id=&quot;copilot-enterprise-features-are-now-available-in-visual-studio-code-and-visual-studio&quot;&gt; Copilot Enterprise の機能が Visual Studio Code と Visual Studio で利用できるようになりました&lt;a href=&quot;#copilot-enterprise-features-are-now-available-in-visual-studio-code-and-visual-studio&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Copilot Enterprise features are now available in Visual Studio Code and Visual Studio&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;今月初めに発表されたように、Copilot Enterprise の機能が&lt;a href=&quot;https://github.blog/changelog/2024-06-14-new-copilot-enterprise-features-in-vs-code-preview/&quot;&gt;Visual Studio Code&lt;/a&gt;と&lt;a href=&quot;https://github.blog/changelog/2024-06-13-new-copilot-enterprise-features-in-visual-studio-preview/&quot;&gt;Visual Studio で&lt;/a&gt;初めて利用できるようになりました。 (Visual Studio の場合は、 &lt;a href=&quot;https://visualstudio.microsoft.com/vs/preview/&quot;&gt;Visual Studio 17.11 Preview 2&lt;/a&gt;以降を実行する必要があります。)&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;Visual Studio Code および Visual Studio で Web のコンテキストとチャットする&lt;/strong&gt;: GitHub Copilot は、Bing を検索して、一般的な知識やコードベース以外の情報を検索できるようになりました。 &lt;code&gt;@GitHub&lt;/code&gt;に言及するだけで、Copilot が Bing をいつ使用するかをインテリジェントに決定します。 Bing 検索は、管理者が有効にした場合にのみ使用できます。詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/copilot/github-copilot-enterprise/overview/enabling-github-copilot-enterprise-features&quot;&gt;「GitHub Copilot Enterprise 機能の有効化」&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;Visual Studio のコードベース全体から回答を取得&lt;/strong&gt;: Copilot Chat では、開いているタブだけでなく、リポジトリ全体を理解して質問に回答できるようになりました。 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/copilot/github-copilot-chat/copilot-chat-in-github/using-github-copilot-chat-in-githubcom#repo-indexing-note&quot;&gt;GitHub.com でリポジトリのインデックスを作成し&lt;/a&gt;、 &lt;code&gt;@GitHub&lt;/code&gt;に言及して質問をしてください。 &lt;code&gt;@GitHub Where is device detection implemented?&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;Visual Studio Code で Copilot ナレッジ ベースにアクセスする&lt;/strong&gt;: &lt;code&gt;@GitHub #kb&lt;/code&gt;と入力し、リストからナレッジ ベースを選択し、質問を入力することで、Copilot チャットの会話から&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/copilot/github-copilot-enterprise/copilot-chat-in-github/managing-copilot-knowledge-bases&quot;&gt;ナレッジ ベースに&lt;/a&gt;アクセスできるようになりました。 Copilot は、ナレッジ ベース内の Markdown ドキュメントを回答のコンテキストとして使用して応答します。&lt;/p&gt;
&lt;p&gt;いつものように、 &lt;a href=&quot;https://github.com/orgs/community/discussions/110314&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションで Copilot Enterprise に関するフィードバックを歓迎します。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-27-copilot-enterprise-knows-about-pull-requests-discussions-and-files-june-updates&quot;&gt;Copilot Enterprise はプル リクエスト、ディスカッション、ファイルについて知っています – 6 月の更新についての&lt;/a&gt;記事が最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78640</post-id></item><item><title>NuGet および Azure のオンデマンド有効性チェックのシークレット スキャン</title><link>https://github.blog/changelog/2024-06-26-secret-scanning-on-demand-validity-checks-for-nuget-and-azure</link><dc:creator>Allison</dc:creator><pubDate>Wed, 26 Jun 2024 22:39:13 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-26-secret-scanning-on-demand-validity-checks-for-nuget-and-azure</guid><description>&lt;p&gt;Secret scanning on demand validity checks for NuGet and Azure&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-26-secret-scanning-on-demand-validity-checks-for-nuget-and-azure&quot;&gt;Secret scanning on demand validity checks for NuGet and Azure&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;本日より、NuGet API キーと&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-patterns#supported-secrets&quot;&gt;サポートされている Azure 接続文字列&lt;/a&gt;の有効性チェックをオンデマンドで実行できるようになりました。これらのチェックも継続的に実行されます。&lt;/p&gt;
&lt;p&gt; GitHub シークレット スキャンを使用すると、 &lt;a href=&quot;https://docs.github.com/en/code-security/secret-scanning/managing-alerts-from-secret-scanning#checking-a-secrets-validity&quot;&gt;パートナーの有効性チェック&lt;/a&gt;でシークレットが&lt;code&gt;active&lt;/code&gt;か&lt;code&gt;inactive&lt;/code&gt;を知ることができます。これらのチェックは、有効性チェック機能を有効にしたリポジトリの&lt;a href=&quot;https://docs.github.com/en/code-security/secret-scanning/secret-scanning-patterns#supported-secrets&quot;&gt;サポートされているプロバイダー&lt;/a&gt;に対して継続的に実行されます。アラートの詳細ページからオンデマンドの有効性チェックを実行することもできます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンでリポジトリを保護する&lt;/a&gt;方法を学ぶか、シークレット スキャンに関する&lt;a href=&quot;https://forms.gle/WPGUckjJrtZhGkQv9&quot;&gt;60 分間のフィードバック セッション&lt;/a&gt;にサインアップして、時間の補償を受けてください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-26-secret-scanning-on-demand-validity-checks-for-nuget-and-azure&quot;&gt;NuGet と Azure のオンデマンド有効性チェックのシークレット スキャンに関する&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78639</post-id></item><item><title>dependabot 自動トリアージ ルールの一般提供が開始されました</title><link>https://github.blog/changelog/2024-06-26-dependabot-auto-triage-rules-are-generally-available</link><dc:creator>Allison</dc:creator><pubDate>Wed, 26 Jun 2024 16:41:22 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-26-dependabot-auto-triage-rules-are-generally-available</guid><description>&lt;p&gt;Dependabot auto-triage rules are generally available&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-26-dependabot-auto-triage-rules-are-generally-available&quot;&gt;Dependabot auto-triage rules are generally available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;自動トリアージ ルールは、大規模なアラートをより適切に管理しながら、アラートとプル リクエストの疲労を軽減するのに役立ちます。&lt;/p&gt;
&lt;p&gt; dependabot の自動トリアージ ルールを使用すると、独自のカスタム ルールを作成して、Dependabot が自動解除でアラートを無視する方法、アラートをスヌーズして再オープンする方法、アラートを修正するためのプル リクエストを生成する方法を制御できるため、心配することなく重要なアラートに集中できます。そうでないアラートについて。&lt;/p&gt;
&lt;p&gt;ルールは次のアラート属性を使用して作成できます。&lt;br /&gt;
 – CVE ID&lt;br /&gt;
 – CWE&lt;br /&gt;
 – 依存関係のスコープ (devDependency または runtime)&lt;br /&gt;
 – 生態系&lt;br /&gt;
– GHSA ID&lt;br /&gt;
 – マニフェスト パス (リポジトリ レベルのルールのみ)&lt;br /&gt;
 - パッケージ名&lt;br /&gt;
– パッチの入手可能性&lt;br /&gt;
- 重大度&lt;/p&gt;
&lt;p&gt;この機能の詳細と使用方法については、&lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-auto-triage-rules&quot;&gt;ドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-26-dependabot-auto-triage-rules-are-generally-available&quot;&gt;「Dependabot の自動トリアージ ルールが一般提供されました」&lt;/a&gt;という記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78638</post-id></item><item><title>グローバルナビゲーションの最適化</title><link>https://github.blog/changelog/2024-06-26-global-navigation-optimizations</link><dc:creator>Allison</dc:creator><pubDate>Wed, 26 Jun 2024 10:11:08 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-26-global-navigation-optimizations</guid><description>&lt;p&gt;Global Navigation Optimizations&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-26-global-navigation-optimizations&quot;&gt;Global Navigation Optimizations&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/9e335510-ea82-413c-a93d-66c17d19bde7&quot; alt=&quot;グローバル ナビゲーションの右側のパネルにある新しいアカウント スイッチャーを示すスクリーンショット&quot; /&gt;&lt;/p&gt;
&lt;p&gt; GitHub のグローバル ナビゲーションの改善:&lt;br /&gt;
 – グローバル ナビゲーションの一部を最適化して読み込みを最大 25% 高速化し、全体的なエクスペリエンスを向上させました。&lt;br /&gt;
 – アカウント間の切り替えがよりシームレスかつ効率的になりました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-26-global-navigation-optimizations&quot;&gt;Global Navigation Optimizations&lt;/a&gt;という投稿は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78630</post-id></item><item><title>アーティファクト証明書の一般提供が開始されました</title><link>https://github.blog/changelog/2024-06-25-artifact-attestations-is-generally-available</link><dc:creator>Allison</dc:creator><pubDate>Tue, 25 Jun 2024 16:08:55 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-25-artifact-attestations-is-generally-available</guid><description>&lt;p&gt;Artifact Attestations is generally available&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-25-artifact-attestations-is-generally-available&quot;&gt;Artifact Attestations is generally available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;h2 id=&quot;github-artifact-attestations-is-generally-available&quot;&gt;GitHub Artifact Attestations の一般提供が開始されました&lt;a href=&quot;#github-artifact-attestations-is-generally-available&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;GitHub Artifact Attestations is generally available&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; GitHub Artifact Attestations の一般提供を発表できることを嬉しく思います。アーティファクト証明書を使用すると、署名付き証明書を作成して検証することで、GitHub Actions 内に構築されたアーティファクトの整合性を保証できます。このリリースでは、これらのアーティファクトを Kubernetes クラスターにデプロイする前に簡単に検証できるようになりました。 &lt;a href=&quot;https://www.sigstore.dev/&quot;&gt;Sigstore&lt;/a&gt;を利用した Artifact Attestations は、アーティファクトとそのビルド プロセスの間に偽造不可能なリンクを作成することで、ソフトウェアのサプライ チェーンを保護するのに役立ちます。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
 &lt;em&gt;「過去 9 か月間、Trail of Bits は GitHub と緊密に連携して、 &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew を&lt;/a&gt;Artifact Attestations の&lt;a href=&quot;https://blog.trailofbits.com/2024/05/14/a-peek-into-build-provenance-for-homebrew/&quot;&gt;最も初期の公的採用企業&lt;/a&gt;の 1 つとしてきました。ソフトウェア、特にオープンソース ソフトウェアはこれまで以上に複雑で相互接続されており、GitHub の新しい Artifact Attestations 機能は、複雑で不透明なソフトウェア サプライ チェーンの問題に対処するための大きな必要な一歩であると強く信じています。」&lt;/em&gt; – William Woodruff 氏、Trail of Bits エンジニアリング ディレクター
&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;
&lt;em&gt;「Artifact Attestations を使用することで、当初は完了までに数か月かかる予定だったプロジェクトを 1 週間以内に完了できました。」&lt;/em&gt; – Elastic 社ソフトウェア エンジニアリング ディレクター、Mike Place 氏
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;GitHub Actions ワークフローに来歴を追加するのは簡単です。アーティファクトへのパスを指定して新しい&lt;a href=&quot;https://github.com/actions/attest-build-provenance/&quot;&gt;&lt;code&gt;attest-build-provenance&lt;/code&gt;アクション&lt;/a&gt;を呼び出すだけです。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-yml&quot;&gt;permissions:
 id-token: write
 contents: read
 attestations: write

 #
 # (build your artifact)
 #

 - name: Generate artifact attestation
 uses: actions/attest-build-provenance@v1
 with:
 subject-path: &amp;#39;PATH/TO/ARTIFACT&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;次に、 &lt;a href=&quot;https://cli.github.com/manual/gh_attestation_verify&quot;&gt;CLI ツール&lt;/a&gt;を使用してそれを確認します。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-sh&quot;&gt;gh attestation verify PATH/TO/ARTIFACT -o myorganization
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;enhance-your-sdlcs-security-with-a-kubernetes-admission-controller&quot;&gt; Kubernetes アドミッション コントローラーで SDLC のセキュリティを強化する&lt;a href=&quot;#enhance-your-sdlcs-security-with-a-kubernetes-admission-controller&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Enhance your SDLC&amp;#8217;s security with a Kubernetes admission controller&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一般提供開始に伴い、Kubernetes クラスター内で直接証明書を検証できる&lt;a href=&quot;https://docs.github.com/en/actions/security-guides/enforcing-artifact-attestations-with-a-kubernetes-admission-controller&quot;&gt;Kubernetes アドミッション コントローラーを構築する新しい方法&lt;/a&gt;もリリースします。これは、適切に証明されたアーティファクトのみをデプロイできることを意味し、ソフトウェア開発ライフサイクル (SDLC) にセキュリティとコンプライアンスの追加レイヤーを追加します。 Artifact Attestation を GitHub Actions ワークフローに統合することで、開発および展開プロセスのセキュリティが強化され、サプライ チェーンの攻撃や不正な変更から保護されます。&lt;/p&gt;
&lt;p&gt; GitHub Artifact Attestations のアドミッション コントローラーのセットアップには、Sigstore Policy Controller のデプロイ、 &lt;code&gt;TrustRoot&lt;/code&gt;と&lt;code&gt;ClusterImagePolicy&lt;/code&gt;クラスターへの追加、およびそれらのポリシーの名前空間ごとの適用が含まれます。 &lt;a href=&quot;https://github.com/github/artifact-attestations-helm-charts/&quot;&gt;Helm チャート&lt;/a&gt;を使用して、独自のアドミッション コントローラーを迅速にデプロイします。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/actions/security-guides/enforcing-artifact-attestations-with-a-kubernetes-admission-controller&quot;&gt;Kubernetes アドミッション コントローラーの詳細については、こちらをご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;get-started&quot;&gt;始めましょう&lt;a href=&quot;#get-started&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Get Started&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;新しい機能の使用を開始するには、 &lt;a href=&quot;https://docs.github.com/en/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds&quot;&gt;ドキュメント&lt;/a&gt;を確認し、アーティファクト証明書をワークフローに統合するためのステップバイステップ ガイドについては、以下のビデオをご覧ください。この機能はパブリック リポジトリとプライベート リポジトリの両方をサポートしており、プロジェクトのセキュリティをこれまでより簡単に保護できます。 &lt;/p&gt;
&lt;div class=&quot;mod-vh position-relative&quot; style=&quot;height: 0; padding-bottom: calc((9 / 16)*100%);&quot;&gt;
&lt;iframe loading=&quot;lazy&quot; class=&quot;position-absolute top-0 left-0 width-full height-full&quot; src=&quot;https://www.youtube.com/embed/zTIHb-9c868?version=3&amp;#038;rel=1&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;fs=1&amp;#038;hl=en-US&amp;#038;autohide=2&amp;#038;wmode=transparent&quot; title=&quot;YouTubeビデオプレーヤー&quot; allow=&quot;accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;今すぐ GitHub Artifact Attestations をワークフローに統合し、SDLC に有意義なセキュリティを追加してください。 &lt;a href=&quot;https://github.com/orgs/community/discussions/129761&quot;&gt;GitHub コミュニティのディスカッションに参加し&lt;/a&gt;、フィードバックを共有してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-25-artifact-attestations-is-generally-available&quot;&gt;Artifact Attestations が一般公開されましたという&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78626</post-id></item><item><title>マルチディレクトリ キー (ディレクトリ) とワイルドカード / グロブ (*) のサポートによる簡素化された dependabot.yml 構成</title><link>https://github.blog/changelog/2024-06-25-simplified-dependabot-yml-configuration-with-multi-directory-key-directories-and-wildcard-glob-support</link><dc:creator>Allison</dc:creator><pubDate>Tue, 25 Jun 2024 14:45:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-25-simplified-dependabot-yml-configuration-with-multi-directory-key-directories-and-wildcard-glob-support</guid><description>&lt;p&gt;Simplified dependabot.yml configuration with multi-directory key (directories) and wildcard / glob (*) support&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-25-simplified-dependabot-yml-configuration-with-multi-directory-key-directories-and-wildcard-glob-support&quot;&gt;Simplified dependabot.yml configuration with multi-directory key (directories) and wildcard / glob (*) support&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;dependabot のバージョンを更新するには、開発者が&lt;code&gt;dependabot.yml&lt;/code&gt;ファイルを構成してチェックインする必要があります。以前は、管理者にとって、リポジトリごとのカスタマイズを行わずにすべてのリポジトリで機能する&lt;code&gt;dependabot.yml&lt;/code&gt;を構成するのは困難でした。この変更により、 &lt;code&gt;directories&lt;/code&gt;キーを使用して依存関係マニフェストの複数のディレクトリを指定できるようになりました。ディレクトリはワイルドカードまたはグロビングを使用して構成して、ターゲティングを容易にすることもできます。これにより、構成の作成プロセスが簡素化され、動作をカスタマイズしたい開発者にとってより柔軟な対応が可能になります。&lt;/p&gt;
&lt;p&gt;詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file#directories&quot;&gt;ディレクトリ キーの dependabot.yml 構成ドキュメントを&lt;/a&gt;参照してください。&lt;!-- note this link will not work until GA day when docs have been merged. --&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-25-simplified-dependabot-yml-configuration-with-multi-directory-key-directories-and-wildcard-glob-support&quot;&gt;マルチディレクトリ キー (ディレクトリ) とワイルドカード / グロブ (*) サポートによる簡素化された dependabot.yml 構成の&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に登場しました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78612</post-id></item><item><title>GitHub Actions: arm64 ランナー向けに Ubuntu 24.04 イメージが利用可能になりました</title><link>https://github.blog/changelog/2024-06-24-github-actions-ubuntu-24-04-image-now-available-for-arm64-runners</link><dc:creator>Allison</dc:creator><pubDate>Mon, 24 Jun 2024 16:08:08 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-24-github-actions-ubuntu-24-04-image-now-available-for-arm64-runners</guid><description>&lt;p&gt;GitHub Actions: Ubuntu 24.04 image now available for arm64 runners&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-24-github-actions-ubuntu-24-04-image-now-available-for-arm64-runners&quot;&gt;GitHub Actions: Ubuntu 24.04 image now available for arm64 runners&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;開発者は、現在&lt;a href=&quot;https://github.blog/2024-06-03-arm64-on-github-actions-powering-faster-more-efficient-build-systems/&quot;&gt;パブリック ベータ版&lt;/a&gt;である GitHub でホストされている arm64 ランナー上で Ubuntu 24.04 を使用してアクション ワークフローを実行できるようになりました。&lt;br /&gt;
 Ubuntu 24.04 の使用を開始するには、組織/企業で arm64 ランナーを作成し、「Ubuntu 24.04 by Arm Limited」パートナー イメージを選択します。次に、そのランナー名と一致するように、GitHub Actions ワークフロー ファイル内の&lt;code&gt;runs-on&lt;/code&gt;構文を更新します。 arm64 でホストされるランナーのセットアップ方法の詳細については、 &lt;a href=&quot;https://docs.github.com/en/actions/using-github-hosted-runners/about-larger-runners/managing-larger-runners&quot;&gt;ドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;この新しいイメージは Arm によって提供され、GitHub によって管理されません。 Ubuntu 24.04 の使用時にワークフローの問題を発見した場合、またはイメージにインストールされているソフトウェアに関するフィードバックがある場合は、 &lt;a href=&quot;https://github.com/actions/partner-runner-images&quot;&gt;partner-runner-images リポジトリ&lt;/a&gt;にフィードバックを提供できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-24-github-actions-ubuntu-24-04-image-now-available-for-arm64-runners&quot;&gt;GitHub Actions: arm64 ランナー向けに Ubuntu 24.04 イメージが利用可能になったという投稿は、&lt;/a&gt; &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78603</post-id></item><item><title>Copilot Extensions の紹介: 始めるために知っておくべきことすべて</title><link>https://github.blog/changelog/2024-06-21-introducing-copilot-extensions-everything-you-need-to-know-to-get-started</link><dc:creator>Allison</dc:creator><pubDate>Fri, 21 Jun 2024 21:05:28 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-21-introducing-copilot-extensions-everything-you-need-to-know-to-get-started</guid><description>&lt;p&gt; Introducing Copilot Extensions: everything you need to know to get started&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-21-introducing-copilot-extensions-everything-you-need-to-know-to-get-started&quot;&gt;Introducing Copilot Extensions: everything you need to know to get started&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;h3 id=&quot;introducing-copilot-extensions-everything-you-need-to-know-to-get-started&quot;&gt;Copilot Extensions の紹介: 始めるために知っておくべきことすべて&lt;a href=&quot;#introducing-copilot-extensions-everything-you-need-to-know-to-get-started&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Introducing Copilot Extensions: everything you need to know to get started&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/features/preview/copilot-partner-program&quot;&gt;Copilot パートナー プログラム (CPP)&lt;/a&gt;内の Copilot Extensions の新しいガイドをパートナー ページに公開しました。現在、拡張機能を構築するには、CPP に参加する必要があります。&lt;a href=&quot;https://partner.github.com/2024/06/18/copilot-extensions.html&quot;&gt;ここをクリック&lt;/a&gt;して記事全文を読み、プログラムの詳細をご覧ください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-21-introducing-copilot-extensions-everything-you-need-to-know-to-get-started&quot;&gt;「Copilot Extensions の紹介: 開始するために知っておくべきことすべて」という&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78602</post-id></item></channel></rss>