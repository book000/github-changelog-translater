<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>Changelogs Archive - The GitHub Blog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Mon, 12 Feb 2024 22:09:08 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.4.3</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Changelogs Archive - The GitHub Blog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>シークレット スキャンにより、有効性チェックのための Webhook サポートが追加されました</title><link>https://github.blog/changelog/2024-02-12-secret-scanning-adds-webhook-support-for-validity-checks</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 12 Feb 2024 22:09:08 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-12-secret-scanning-adds-webhook-support-for-validity-checks</guid><description>&lt;p&gt;Secret scanning adds webhook support for validity checks&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-12-secret-scanning-adds-webhook-support-for-validity-checks&quot;&gt;Secret scanning adds webhook support for validity checks&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/webhooks/webhook-events-and-payloads?actionType=validated#secret_scanning_alert&quot;&gt;&lt;code&gt;secret_scanning_alert&lt;/code&gt; Webhook は、&lt;/a&gt;シークレット スキャン アラートに関連するアクティビティのために送信されます。シークレット スキャン Webhook で有効性チェックがサポートされるようになったので、有効性ステータスの変更を追跡できるようになりました。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;secret_scanning_alert&lt;/code&gt; Webhook への変更:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最新の有効性チェックに応じて、 &lt;code&gt;active&lt;/code&gt; 、 &lt;code&gt;inactive&lt;/code&gt; 、または&lt;code&gt;unknown&lt;/code&gt;いずれかになる新しい&lt;code&gt;validity&lt;/code&gt;プロパティ。&lt;/li&gt;
&lt;li&gt;新しいアクション タイプ&lt;code&gt;validated&lt;/code&gt; 。シークレットの有効性ステータスが変更されたときにトリガーされます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注: この機能をオプトインするには、リポジトリまたは組織レベルで&lt;strong&gt;有効性チェックを有効にする必要があります&lt;/strong&gt;。これは、 &lt;code&gt;Code security and analysis&lt;/code&gt;設定ページのシークレット スキャン設定から、「関連するパートナーにシークレットを送信することでシークレットが有効かどうかを自動的に検証する」オプションを選択することで実行できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-patterns#high-confidence-patterns&quot;&gt;サポートされているシークレットの種類&lt;/a&gt;や&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/webhooks/webhook-events-and-payloads?actionType=validated#secret_scanning_alert&quot;&gt;シークレット スキャン Webhook&lt;/a&gt;の詳細については、こちらをご覧ください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-02-12-secret-scanning-adds-webhook-support-for-validity-checks&quot;&gt;「シークレット スキャンによる有効性チェックのための Webhook サポートの追加」の&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76588</post-id></item><item><title>強化されたコードスペース接続</title><link>https://github.blog/changelog/2024-02-12-enhanced-codespaces-connection</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 12 Feb 2024 20:27:54 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-12-enhanced-codespaces-connection</guid><description>&lt;p&gt;Enhanced Codespaces Connection&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-12-enhanced-codespaces-connection&quot;&gt;Enhanced Codespaces Connection&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;Codespaces 接続インフラストラクチャへの重要なアップグレードを発表できることを嬉しく思います。私たちのチームは、主要な接続機能とポート転送機能の両方のセキュリティ、信頼性、および全体的なパフォーマンスの強化に取り組んできました。&lt;/p&gt;
&lt;h3 id=&quot;whats-changing&quot;&gt;何が変わっているのか&lt;a href=&quot;#whats-changing&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What’s Changing&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;これらの機能強化をサポートするには、 &lt;code&gt;*.visualstudio.com&lt;/code&gt;をファイアウォール ルールのホワイトリストに追加する必要があります。これは、Codespaces でのシームレスで安全なエクスペリエンスを確保するための重要なステップです。&lt;/p&gt;
&lt;h3 id=&quot;release-plan&quot;&gt;リリース計画&lt;a href=&quot;#release-plan&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Release Plan&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本日、github.com の&lt;a href=&quot;https://docs.github.com/en/get-started/using-github/exploring-early-access-releases-with-feature-preview#exploring-beta-releases-with-feature-preview&quot;&gt;機能プレビュー&lt;/a&gt;セクションを通じて、この新しい接続システムをオプトインできるようにします。この機能フラグは 2 週間オプトイン フラグとなり、これらの変更を独自のファイアウォールに対してテストできるようになります。&lt;/p&gt;
&lt;p&gt; 2 週間以内に、これらの変更をデフォルトとして有効にする予定です。ユーザーは、同じ機能フラグの下で、この新しい接続システムの使用を 30 日間オプトアウトできます。さらに時間が必要なお客様は、 &lt;a href=&quot;https://support.github.com/request&quot;&gt;GitHub サポート&lt;/a&gt;を通じて追加時間をリクエストできます。&lt;/p&gt;
&lt;p&gt;さらに 30 日後、全員を新しい接続システムに移行します。&lt;/p&gt;
&lt;h3 id=&quot;your-action-needed&quot;&gt;あなたの行動が必要です&lt;a href=&quot;#your-action-needed&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Your Action Needed&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;code&gt;*.visualstudio.com&lt;/code&gt;がファイアウォール ルールの許可リストに登録されていることを確認してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/&quot;&gt;github.com&lt;/a&gt;の機能フラグを有効にして、これらの変更を自分でテストし、これらのドメインがファイアウォール ルールにすぐに追加されて、コードスペースの中断のないアクセスと最適な機能が維持されるようにします。&lt;/p&gt;
&lt;p&gt;問題が発生した場合は、 &lt;a href=&quot;https://docs.github.com/en/codespaces/troubleshooting/troubleshooting-your-connection-to-github-codespaces&quot;&gt;ファイアウォールのトラブルシューティング ガイド&lt;/a&gt;をお読みください。&lt;/p&gt;
&lt;p&gt; Codespaces のエクスペリエンスを向上し続けるため、ご協力とご理解に感謝いたします。ご質問がある場合やサポートが必要な場合は、当社のサポートチームがお手伝いいたします。&lt;/p&gt;
&lt;p&gt; Codespaces コミュニティの貴重なメンバーになっていただきありがとうございます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2024-02-12-enhanced-codespaces-connection&quot;&gt;拡張された Codespaces 接続の&lt;/a&gt;投稿は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76577</post-id></item><item><title>GitHub の問題とプロジェクト – 制限のないプロジェクト プライベート ベータ版</title><link>https://github.blog/changelog/2024-02-12-github-issues-projects-projects-without-limits-private-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 12 Feb 2024 18:17:24 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-12-github-issues-projects-projects-without-limits-private-beta</guid><description>&lt;p&gt;GitHub Issues &amp;#38; Projects – Projects without Limits Private Beta&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-12-github-issues-projects-projects-without-limits-private-beta&quot;&gt;GitHub Issues &amp;amp; Projects – Projects without Limits Private Beta&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub プロジェクトを初めて導入したとき、プロジェクトを迅速に保ち、アクティブな作業のみの追跡を奨励するために、プロジェクトあたり 1,200 アイテムの制限を設定しました。長年にわたる皆様からのフィードバックは非常に貴重であり、成長し大規模なプロジェクトには 1,200 アイテムでは不十分な場合があるという声をはっきりと聞きました。そのため、本日、プロジェクトに無制限の発行制限を可能にする&lt;a href=&quot;https://github.com/github/roadmap/issues/776&quot;&gt;Projects without Limits&lt;/a&gt;のプライベート ベータ版を発表できることを嬉しく思います。&lt;/p&gt;
&lt;p&gt;この機能はまだ開発中ですが、プライベート ベータ版では現在、テーブル、ボード、ロードマップのレイアウトがサポートされています。スライスバイ、スイムレーン、モバイルサポート、プロジェクト API、インサイトなど、他の人気機能の今後のサポートにもご期待ください。&lt;/p&gt;
&lt;p&gt;あなたがプロジェクト管理者で、サポートされている機能のみを使用しているときにプロジェクトがアイテム制限に近づいている場合、このバナーがプロジェクト上に表示されます。 &lt;/p&gt;
&lt;p&gt;&lt;img fetchpriority=&quot;high&quot; decoding=&quot;async&quot; class=&quot;alignnone size-full wp-image-76572 width-fit&quot; src=&quot;https://github.blog/wp-content/uploads/2024/02/PWL_changelog.png?resize=1024%2C142&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;142&quot; srcset=&quot;https://github.blog/wp-content/uploads/2024/02/PWL_changelog.png?resize=1024%2C142?w=2234 2234w, https://github.blog/wp-content/uploads/2024/02/PWL_changelog.png?resize=1024%2C142?w=300 300w, https://github.blog/wp-content/uploads/2024/02/PWL_changelog.png?resize=1024%2C142?w=768 768w, https://github.blog/wp-content/uploads/2024/02/PWL_changelog.png?resize=1024%2C142?w=1024 1024w, https://github.blog/wp-content/uploads/2024/02/PWL_changelog.png?resize=1024%2C142?w=1536 1536w, https://github.blog/wp-content/uploads/2024/02/PWL_changelog.png?resize=1024%2C142?w=2048 2048w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;プライベート ベータの待機リストに参加するには、 &lt;kbd&gt;「待機リストに参加」&lt;/kbd&gt;ボタンをクリックします。スペースが利用可能な場合、プロジェクトにはベータ版へのアクセスが許可されます。&lt;/p&gt;
&lt;p&gt;質問やフィードバックについては、&lt;a href=&quot;https://github.com/orgs/community/discussions/106785&quot;&gt;コミュニティ ディスカッション&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-02-12-github-issues-projects-projects-without-limits-private-beta&quot;&gt;GitHub の問題とプロジェクト – 制限のないプロジェクト プライベート ベータ版の&lt;/a&gt;投稿は、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76570</post-id></item><item><title>VS Code Copilot Chat 2024 年 1 月 (バージョン 0.12)</title><link>https://github.blog/changelog/2024-02-12-vs-code-copilot-chat-january-2024-version-0-12</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 12 Feb 2024 17:16:12 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-12-vs-code-copilot-chat-january-2024-version-0-12</guid><description>&lt;p&gt;VS Code Copilot Chat January 2024 (version 0.12)&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-12-vs-code-copilot-chat-january-2024-version-0-12&quot;&gt;VS Code Copilot Chat January 2024 (version 0.12)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;h1 id=&quot;copilot-enhancements-in-visual-studio-code&quot;&gt;Visual Studio Code のコパイロットの機能強化&lt;a href=&quot;#copilot-enhancements-in-visual-studio-code&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Copilot enhancements in Visual Studio Code&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt; Visual Studio Code の Copilot Chat 拡張機能にいくつかの機能を導入しました。これらの更新プログラムは、Visual Studio Code 1.86 および最新の Copilot Chat 拡張機能 0.12 で利用可能であり、より合理化されたインタラクティブなコーディング エクスペリエンスを提供することを目的としています。 Copilot に提供するコンテキストをより詳細に制御できる新しいコンテキスト変数から、拡張された音声制御機能まで、これらの更新は Copilot との対話を改善するように設計されています。これらの新機能を詳しく見てみましょう。&lt;/p&gt;
&lt;h2 id=&quot;context-variables&quot;&gt;コンテキスト変数&lt;a href=&quot;#context-variables&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Context variables&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;コンテキスト変数を使用すると、# 記号を使用してチャット内の質問に追加のコンテキストを提供できます。 &lt;code&gt;#file&lt;/code&gt;と&lt;code&gt;#editor&lt;/code&gt; 2 つの新しいコンテキスト変数を導入して、コンテキストを指定するための制御を強化しました。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;#file&lt;/code&gt;変数を使用すると、チャット プロンプトでワークスペースから特定のファイルを参照できます。これにより、作業しているファイルに関するコンテキストが提供され、Copilot Chat からの回答がコードとより関連性のあるものになります。 「#file:package.json の改善を提案できますか?」のような質問をすることができます。または「#file:devcontainer.json に拡張子を追加するにはどうすればよいですか?」 &lt;code&gt;#file&lt;/code&gt;変数を使用すると、Copilot からより的を絞った正確な応答を得ることができます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/2180038/5ed97733-a83c-4788-a81e-abaaabcfc121&quot; alt=&quot;画像&quot; /&gt;&lt;/p&gt;
&lt;p&gt; &lt;code&gt;#editor&lt;/code&gt;コンテキスト変数を使用すると、アクティブなエディターの表示コードを Copilot Chat へのプロンプトに含めるかどうかを制御できます。以前は、エディターでテキストを選択しなかった場合、この情報は自動的に含まれていました。表示されているコードをコンテキストに明示的に追加するか、より一般的な質問のために省略するかを選択できるようになりました。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/2180038/3506f4f9-2f53-4f80-a32e-5097d0776148&quot; alt=&quot;画像&quot; /&gt;&lt;/p&gt;
&lt;p&gt; &lt;code&gt;#selection&lt;/code&gt;コンテキスト変数により、エディターで選択した特定のコードに Copilot の提案を集中させることがすでに可能になりました。 &lt;code&gt;#file&lt;/code&gt; 、 &lt;code&gt;#editor&lt;/code&gt; 、および&lt;code&gt;#selection&lt;/code&gt;変数を組み合わせることで、Copilot Chat に提供するコンテキストを完全に制御でき、最も関連性の高い役立つ回答を確実に受け取ることができます。&lt;/p&gt;
&lt;h2 id=&quot;inline-chat&quot;&gt;インラインチャット&lt;a href=&quot;#inline-chat&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Inline chat&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;また、Copilot コード アクションや更新されたライブ モードなど、Copilot インライン チャット エクスペリエンスの生産性を高めるいくつかの機能も追加しました。&lt;/p&gt;
&lt;p&gt;コードを作成して反復しているときに、エディターの特定の行のコード アクション (電球) を通じて Copilot を呼び出すことができるようになりました。この機能により、コードを改善するために Copilot に直接的かつ対象を絞ったアクセスが可能になります。コードにエラーがある場合、&lt;em&gt;スパークル&lt;/em&gt;コード アクションを使用して、Copilot にエラーを説明したり、修正を提案したりできます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/code.visualstudio.com/assets/updates/1_86/inline-chat-opened-from-sparkle.gif?ssl=1&quot; alt=&quot;画像&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;更新されたインライン チャット ライブ モードを使用すると、推奨されたコード変更をエディター内で確認して評価できるようになりました。さらに、インライン差分エディターにドリルスルーして、提案された変更を元のコードと比較するオプションもあります。&lt;/p&gt;
&lt;h2 id=&quot;responsible-ai&quot;&gt;責任あるAI &lt;a href=&quot;#responsible-ai&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Responsible AI&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;私たちは、特にソース コードに関しては、AI の責任ある使用を重視しています。 Copilot によって生成されたコードを保存する前にユーザーに確認を求める新しい設定を追加しました。これにより、ユーザーは Copilot によって生成されたコードを制御し、保存する前にコードを確認できるようになります。&lt;/p&gt;
&lt;p&gt;この設定&lt;code&gt;inlineChat.acceptedOrDiscardBeforeSave&lt;/code&gt;は、デフォルトで有効になっています。この設定が有効な場合、ファイルの保存は、ユーザーが保留中のインライン チャット セッションを受け入れるか破棄するまで待機します。これは自動保存が有効になっている場合にも適用され、インライン チャットが終了するまで一時的に無効になります。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/code.visualstudio.com/assets/updates/1_86/inline-chat-save-consent.png?ssl=1&quot; alt=&quot;画像&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;enhancing-voice-interactions&quot;&gt;音声インタラクションの強化&lt;a href=&quot;#enhancing-voice-interactions&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Enhancing voice interactions&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;音声対話を開始するための柔軟性とオプションを提供することで、VS Code の音声対話をさらに強化しました。&lt;/p&gt;
&lt;p&gt; 「Hey Code」音声コマンドを使用して、Copilot Chat との音声セッションを開始できるようになりました。この音声コマンドでチャット ビューを開くか、エディターのインライン チャット、クイック チャットを開くか、またはフォーカスの位置に基づいて動的に選択するかを選択できます。&lt;/p&gt;
&lt;p&gt;この音声コマンドを有効にするには、 &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat&quot;&gt;GitHub Copilot Chat&lt;/a&gt;および&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-speech&quot;&gt;VS Code Speech&lt;/a&gt;拡張機能を必ずインストールしてください。インストールしたら、 &lt;code&gt;accessibility.voice.keywordActivation&lt;/code&gt;設定で「Hey Code」音声コマンドを有効にすることができます。 &lt;/p&gt;
&lt;p&gt;&lt;video controls src=&quot;https://code.visualstudio.com/assets/updates/1_86/inline-chat-hold-speak.mp4&quot; width=&quot;100%&quot; title=&quot;ビデオ&quot;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;さらに、「押し続けて話す」モードを使用すると、チャットの音声入力を高速化できます。インライン チャットのキーバインドを押し続けると、音声録音が自動的に開始されます。キーを放すとすぐに、リクエストが Copilot に送信されます。 &lt;/p&gt;
&lt;p&gt;&lt;video controls src=&quot;https://code.visualstudio.com/assets/updates/1_86/hey-code.mp4&quot; width=&quot;100%&quot; title=&quot;ビデオ&quot;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;これらの主な機能に加えて、他の&lt;a href=&quot;https://code.visualstudio.com/updates/v1_86&quot;&gt;エキサイティングな新しいプレビュー機能&lt;/a&gt;を探索することもできます。&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-02-12-vs-code-copilot-chat-january-2024-version-0-12&quot;&gt;VS Code Copilot Chat January 2024 (version 0.12)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76564</post-id></item><item><title>GitHub サポートでの Copilot (GA)</title><link>https://github.blog/changelog/2024-02-09-copilot-in-github-support-ga</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 09 Feb 2024 17:42:56 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-09-copilot-in-github-support-ga</guid><description>&lt;p&gt;Copilot in GitHub Support (GA)&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-09-copilot-in-github-support-ga&quot;&gt;Copilot in GitHub Support (GA)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub サポートで Copilot の GA リリースを発表できることを嬉しく思います。これは、GitHub 関連の質問に対する答えをより迅速に見つける方法です。 GitHub Support の Copilot は、公式&lt;a href=&quot;https://docs.github.com/en/&quot;&gt;GitHub ドキュメント&lt;/a&gt;に基づいて質問に答える AI を活用したアシスタントです。&lt;br /&gt;
サポート チケットを作成することなく、基本的な質問のいくつかに対する回答をすぐに得ることができます。&lt;/p&gt;
&lt;p&gt;このツールは、GitHub をすべての開発者にとってコラボレーション、革新、優れたソフトウェアの出荷に最適な場所にするための継続的な取り組みの一環です。 GitHub サポートの Copilot は、お客様のエクスペリエンスと生産性を向上させると信じています。&lt;/p&gt;
&lt;p&gt;皆様からのご意見をお待ちしており、フィードバックから学ぶことができます。今すぐ&lt;a href=&quot;https://support.github.com/contact&quot;&gt;GitHub サポートで Copilot を&lt;/a&gt;お試しください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-02-09-copilot-in-github-support-ga&quot;&gt;GitHub サポート (GA) の Copilot の&lt;/a&gt;投稿は、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76537</post-id></item><item><title>シークレット スキャンにより、Stripe、Telegram、SendGrid などの有効性チェックが追加されます</title><link>https://github.blog/changelog/2024-02-06-secret-scanning-adds-validity-checks-for-stripe-telegram-sendgrid-and-more</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 06 Feb 2024 22:28:45 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-06-secret-scanning-adds-validity-checks-for-stripe-telegram-sendgrid-and-more</guid><description>&lt;p&gt;Secret scanning adds validity checks for Stripe, Telegram, SendGrid, and more&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-06-secret-scanning-adds-validity-checks-for-stripe-telegram-sendgrid-and-more&quot;&gt;Secret scanning adds validity checks for Stripe, Telegram, SendGrid, and more&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;シークレット スキャンにより、有効性チェックのサポートがいくつかの追加のトークン タイプに拡張されます。&lt;/p&gt;
&lt;p&gt;有効性チェックは、漏洩した認証情報が&lt;code&gt;active&lt;/code&gt;あり、依然として悪用される可能性があるかどうかを示します。 &lt;a href=&quot;https://github.blog/changelog/2023-04-28-secret-scanning-now-supports-validation-checks-for-supported-partner-patterns/&quot;&gt;以前に特定のリポジトリの検証チェックを有効にしていた&lt;/a&gt;場合、GitHub はサポートされているトークン タイプのアラートの有効性を自動的に検証します。以前の変更ログで発表されたトークン タイプに加えて、次のトークン タイプの有効性チェックが表示されるようになります。&lt;/p&gt;
&lt;div class=&quot;content-table-wrap&quot;&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;プロバイダー&lt;/th&gt;
&lt;th&gt;トークン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ドロップボックス&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dropbox_short_lived_access_token&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;概念&lt;/td&gt;
&lt;td&gt;&lt;code&gt;notion_integration_token&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; OpenAI&lt;/td&gt;
&lt;td&gt; &lt;code&gt;openai_api_key&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; OpenAI&lt;/td&gt;
&lt;td&gt; &lt;code&gt;openai_api_key_v2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;送信グリッド&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sendgrid_api_key&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ストライプ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stripe_api_key&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ストライプ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stripe_test_secret_key&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;電報&lt;/td&gt;
&lt;td&gt;&lt;code&gt;telegram_bot_token&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;有効性チェックは、Enterprise Cloud 上の GitHub Advanced Security を使用してリポジトリで利用できます。 「コードのセキュリティと分析」設定ページから「関連するパートナーに送信することでシークレットが有効であるかどうかを自動的に検証する」オプションをチェックすることで、組織レベルとリポジトリ レベルの両方でこの機能を有効にできます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャン&lt;/a&gt;や&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-patterns#supported-secrets&quot;&gt;有効性チェックでサポートされているパターン&lt;/a&gt;の詳細については、こちらをご覧ください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-02-06-secret-scanning-adds-validity-checks-for-stripe-telegram-sendgrid-and-more&quot;&gt;シークレット スキャンの投稿により、Stripe、Telegram、SendGrid などの有効性チェックが&lt;/a&gt;追加されました first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; 。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76511</post-id></item><item><title>CodeQL でサポートされる言語が含まれる前に、リポジトリでコード スキャンを有効にできるようになりました</title><link>https://github.blog/changelog/2024-02-05-code-scanning-can-now-be-enabled-on-repositories-before-they-contain-codeql-supported-languages</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 05 Feb 2024 13:54:29 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-05-code-scanning-can-now-be-enabled-on-repositories-before-they-contain-codeql-supported-languages</guid><description>&lt;p&gt;Code scanning can now be enabled on repositories before they contain CodeQL supported languages&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-05-code-scanning-can-now-be-enabled-on-repositories-before-they-contain-codeql-supported-languages&quot;&gt;Code scanning can now be enabled on repositories before they contain CodeQL supported languages&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/&quot;&gt;現在 CodeQL でサポートされている言語&lt;/a&gt;で記述されたコードがリポジトリに含まれていない場合でも、リポジトリでコード スキャンを有効にできるようになりました。デフォルトのセットアップでは、サポートされている言語がデフォルトのブランチで検出されると、最初のスキャンが自動的にトリガーされます。これは、ユーザーが空のリポジトリなどでデフォルト設定を使用してコード スキャンを有効にできるようになり、将来リポジトリ内の言語が変更されてサポートされる言語が含まれるようになったときに、コード スキャンが自動的に保護されることを確信できることを意味します。&lt;/p&gt;
&lt;p&gt;これは組織レベルからも有効になるため、CodeQL でサポートされている言語を持たないリポジトリでコード スキャンを一括有効にすることができます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/19343236/8fbd57aa-50e1-429d-ad8a-6527117ec47a&quot; alt=&quot;サポートされている言語のないリポジトリで有効になります&quot; /&gt;&lt;/p&gt;
&lt;p&gt;この変更は現在 GitHub.com に公開されており、GitHub Enterprise Server 3.13 で利用可能になります。詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/enabling-code-scanning/configuring-default-setup-for-code-scanning&quot;&gt;「コード スキャンのデフォルト設定について」を参照してください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-02-05-code-scanning-can-now-be-enabled-on-repositories-before-they-contain-codeql-supported-languages&quot;&gt;CodeQL でサポートされている言語が含まれる前に、リポジトリでコード スキャンを有効にできるようになりました&lt;/a&gt;。 最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に登場しました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76487</post-id></item><item><title>GitHub Enterprise のサポート チケットの優先順位</title><link>https://github.blog/changelog/2024-02-04-support-ticket-priority-for-github-enterprise</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 05 Feb 2024 07:00:34 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-04-support-ticket-priority-for-github-enterprise</guid><description>&lt;p&gt;Support ticket priority for GitHub Enterprise&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-04-support-ticket-priority-for-github-enterprise&quot;&gt;Support ticket priority for GitHub Enterprise&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub Enterprise 用に作成されたサポート チケットには、状況と問題の影響に基づいて&lt;a href=&quot;https://docs.github.com/support/learning-about-github-support/about-ticket-priority&quot;&gt;優先度が&lt;/a&gt;割り当てられます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/support/contacting-github-support/creating-a-support-ticket&quot;&gt;サポート資格を持つ Enterprise メンバーは、&lt;/a&gt; GitHub サポートに連絡するときにサポート チケットの初期優先順位を提案できました。サポート リクエストが状況と影響に応じて順番に処理されるようにするために、GitHub サポートはすべてのサポート チケットの初期優先順位を設定します。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-02-04-support-ticket-priority-for-github-enterprise&quot;&gt;GitHub Enterprise のサポート チケットの優先順位に関する&lt;/a&gt;記事は、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76486</post-id></item><item><title>Gradle スターター ワークフローが推移的な依存関係を自動的に送信するようになりました</title><link>https://github.blog/changelog/2024-02-01-gradle-starter-workflows-now-automatically-submit-transitive-dependencies</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 01 Feb 2024 23:48:48 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-01-gradle-starter-workflows-now-automatically-submit-transitive-dependencies</guid><description>&lt;p&gt;Gradle starter workflows now automatically submit transitive dependencies&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-01-gradle-starter-workflows-now-automatically-submit-transitive-dependencies&quot;&gt;Gradle starter workflows now automatically submit transitive dependencies&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/actions/learn-github-actions/using-starter-workflows&quot;&gt;スターター ワークフロー&lt;/a&gt;を使用して、Gradle を使用する Java プロジェクトのビルドおよびリリース ステップを準備している場合、これらのプロジェクトには、より包括的な依存関係グラフ情報が GitHub に含まれるようになります。 Gradle スターター ワークフローが更新され、推移的な依存関係が GitHub に自動的に送信されるようになり、依存関係グラフ データとこれらのアプリの dependabot 更新の品質が向上しました。&lt;/p&gt;
&lt;p&gt;これらのスターター ワークフローで使用されるアクションの詳細については、GitHub Marketplace で&lt;a href=&quot;https://github.com/marketplace/actions/build-with-gradle&quot;&gt;「Build with Gradle」&lt;/a&gt;アクションを確認してください。これらの更新を行ってくれた&lt;a href=&quot;https://gradle.org/&quot;&gt;Gradle&lt;/a&gt;に感謝します!&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/announcements&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-02-01-gradle-starter-workflows-now-automatically-submit-transitive-dependencies&quot;&gt;Gradle スターター ワークフロー以降の推移的な依存関係が自動的に送信されるようになった&lt;/a&gt;記事は&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76477</post-id></item><item><title>Visual Studio の GitHub Copilot の新機能を使用して、コードをより速く、より適切に作成できます。</title><link>https://github.blog/changelog/2024-01-30-code-faster-and-better-with-github-copilots-new-features-in-visual-studio</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 30 Jan 2024 22:06:00 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-01-30-code-faster-and-better-with-github-copilots-new-features-in-visual-studio</guid><description>&lt;p&gt;Code faster and better with GitHub Copilot’s new features in Visual Studio&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-01-30-code-faster-and-better-with-github-copilots-new-features-in-visual-studio&quot;&gt;Code faster and better with GitHub Copilot’s new features in Visual Studio&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;最新の Visual Studio Copilot Chat 拡張機能に 2 つの新しい強力な機能が導入されました。それは、Copilot に特定のタスクを実行するように指示できるスラッシュ コマンド (/) と、Copilot がフォーカスするファイルを指定できるコンテキスト変数 (#) です。答えてください。これらの機能は&lt;a href=&quot;https://visualstudio.microsoft.com/downloads/&quot;&gt;、Visual Studio 2022 バージョン 17.8 以降と&lt;/a&gt;互換性のある最新の &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.VSGitHubCopilot&quot;&gt;チャット拡張機能&lt;/a&gt;で利用できます。&lt;/p&gt;
&lt;h2 id=&quot;slash-commands&quot;&gt;スラッシュコマンド&lt;a href=&quot;#slash-commands&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Slash Commands&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;スラッシュ コマンドは、説明、ドキュメント、テスト作成、コードに関連するその他のさまざまな形のサポートなど、対象を絞った支援を受けるためにチャットで使用できる特別なコマンドです。たとえば、次のように使用できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; /doc ドキュメントのコメントを追加します&lt;/li&gt;
&lt;li&gt;/explain コードを説明します&lt;/li&gt;
&lt;li&gt;/fix 選択したコードの問題の修正を提案します&lt;/li&gt;
&lt;li&gt;/generate で質問に答えるコードを生成します&lt;/li&gt;
&lt;li&gt;/help : Copilot Chat に関するヘルプが表示されます&lt;/li&gt;
&lt;li&gt;/optimize は、選択したコードの実行時間を分析して改善します。&lt;/li&gt;
&lt;li&gt; /tests 選択したコードの単体テストを作成します&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.blog/wp-content/uploads/2024/01/1-1.png&quot; alt=&quot;VS コードのスラッシュ コマンド&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;context-variables&quot;&gt;コンテキスト変数&lt;a href=&quot;#context-variables&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Context Variables&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;コンテキスト変数機能を使用すると、# 記号を使用してソリューションから質問にファイルを追加できます。この方法でファイルを参照すると、Copilot がファイルのコンテンツにアクセスし、それについてより的を絞った回答を提供できるようになります。たとえば、「#file:&amp;#39;Main.cs&amp;#39; ファイルはどのように機能しますか?」と尋ねることができます。または「#file:&amp;#39;Calculator.cs&amp;#39; ファイルの目的は何ですか?」 Copilot Chat から関連する回答を得ることができます。 1 つの質問に複数のファイルを追加できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.blog/wp-content/uploads/2024/01/2-2.png&quot; alt=&quot;VS コードのコンテキスト変数&quot; /&gt;&lt;/p&gt;
&lt;p&gt;これらの主な機能に加えて、他のエキサイティングな新しい&lt;a href=&quot;https://devblogs.microsoft.com/visualstudio/copilot-chat-slash-commands-and-context-variables/&quot;&gt;プレビュー機能&lt;/a&gt;も探索できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/copilot&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-01-30-code-faster-and-better-with-github-copilots-new-features-in-visual-studio&quot;&gt;Visual Studio の GitHub Copilot の新機能を使用してコードをより速く、より良くするという&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76456</post-id></item></channel></rss>