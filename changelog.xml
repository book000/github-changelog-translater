<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>Changelogs Archive - The GitHub Blog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Tue, 31 Oct 2023 19:54:40 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.3.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Changelogs Archive - The GitHub Blog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>リリース作成のためのリアクティブな 2FA 要件の有効化</title><link>https://github.blog/changelog/2023-10-31-enabling-reactive-2fa-requirements-for-release-creation</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 31 Oct 2023 19:54:40 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-10-31-enabling-reactive-2fa-requirements-for-release-creation</guid><description>&lt;p&gt;Enabling reactive 2FA requirements for release creation&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-31-enabling-reactive-2fa-requirements-for-release-creation&quot;&gt;Enabling reactive 2FA requirements for release creation&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.blog/2023-03-09-raising-the-bar-for-software-security-github-2fa-begins-march-13/&quot;&gt;必須の 2FA プログラム&lt;/a&gt;に参加していないユーザーは、最初の&lt;a href=&quot;https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository&quot;&gt;リリース&lt;/a&gt;の作成から 24 時間以内にプログラムに追加されるようになります。 8 月に、リリースを作成したほとんどの GitHub.com ユーザーを含むように 2FA 要件を拡張しました。これらのグループは 2FA 登録を完了しましたが、その後、追加の開発者が最初のリリースを作成しました。これらは数日以内に 2FA プログラムに追加される予定で、リリースを作成するユーザーは時間の経過とともに増加します。&lt;/p&gt;
&lt;p&gt;企業または組織の管理者は、企業または組織の&lt;a href=&quot;https://github.blog/changelog/2023-07-31-2fa-requirement-status-on-the-people-pages/&quot;&gt;[ユーザー] ページ&lt;/a&gt;にアクセスして、ユーザーの現在の 2FA 要件について詳しく知ることができます。&lt;/p&gt;
&lt;p&gt; 2FA プログラムの詳細については、 &lt;a href=&quot;https://github.blog/2023-03-09-raising-the-bar-for-software-security-github-2fa-begins-march-13/&quot;&gt;2023 年 5 月のブログ投稿&lt;/a&gt;&lt;a href=&quot;https://github.blog/2023-03-09-raising-the-bar-for-software-security-github-2fa-begins-march-13/&quot;&gt;https://github.blog/2023-03-09-raise-the-bar-for-software-security-github-2fa-begins-march-13/&lt;/a&gt;をご覧ください。 、および&lt;a href=&quot;https://docs.github.com/en/authentication/securing-your-account-with-two-factor-authentication-2fa/about-mandatory-two-factor-authentication&quot;&gt;「必須の 2FA プログラムについて」ドキュメントも参照してください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;この投稿&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-31-enabling-reactive-2fa-requirements-for-release-creation&quot;&gt;「リリース作成のためのリアクティブ 2FA 要件の有効化」は、&lt;/a&gt;最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">75179</post-id></item><item><title>GitHub での Copilot サポート (ベータ版)</title><link>https://github.blog/changelog/2023-10-31-copilot-in-github-support-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 31 Oct 2023 17:43:53 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-10-31-auto-draft</guid><description>&lt;p&gt;We are excited to announce the beta release of Copilot in GitHub Support, a faster way to find answers to your GitHub related questions! In August, we launched the Alpha to a limited number of randomly selected GitHub Enterprise Cloud customers. We have made lots of improvements to the experience since and are excited to [&amp;#8230;]&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-31-copilot-in-github-support-beta&quot;&gt;Copilot in GitHub Support (Beta)&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub サポートで Copilot のベータ リリースを発表できることを嬉しく思います。これは、GitHub 関連の質問に対する答えをより迅速に見つける方法です。 8 月に、ランダムに選択した限られた数の GitHub Enterprise Cloud 顧客に対してアルファ版をリリースしました。それ以来、エクスペリエンスに多くの改善を加えてきました。より多くのお客様を新しいエクスペリエンスにお迎えできることを楽しみにしています。 GitHub サポートの Copilot は、以前にトレーニングされた&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.10&quot;&gt;GitHub Enterprise Cloud ドキュメントに加えて、最新の GitHub Enterprise Server&lt;/a&gt;ドキュメントでもトレーニングされるようになりました。&lt;/p&gt;
&lt;p&gt;当初は、無作為に選ばれた限られた数の GitHub Enterprise 顧客に Copilot エクスペリエンスを提供します。今後数か月間にわたって、このエクスペリエンスをより多くの視聴者に提供し続けたいと考えています。&lt;/p&gt;
&lt;p&gt;ベータ期間中、GitHub は提供された回答を検討し、参加している顧客からのフィードバックを収集して精度を向上させます。&lt;/p&gt;
&lt;p&gt; GitHub サポートの Copilot は、GitHub をすべての開発者にとってコラボレーション、革新、優れたソフトウェアの出荷に最適な場所にするための継続的な取り組みの一環です。 GitHub サポートの Copilot は、お客様のエクスペリエンスと生産性を向上させると信じています。&lt;/p&gt;
&lt;p&gt;皆様からのご意見をお待ちしており、フィードバックから学ぶことができます。&lt;/p&gt;
&lt;p&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-31-copilot-in-github-support-beta&quot;&gt;GitHub サポートのコパイロット (ベータ版) の&lt;/a&gt;投稿は、 &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">75152</post-id></item><item><title>コメント ボックスの一貫性が向上し、アクセスしやすくなりました</title><link>https://github.blog/changelog/2023-10-31-the-comment-box-becomes-more-consistent-and-accessible</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 31 Oct 2023 17:11:56 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-10-31-the-comment-box-becomes-more-consistent-and-accessible</guid><description>&lt;p&gt;The Comment Box Becomes More Consistent and Accessible&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-31-the-comment-box-becomes-more-consistent-and-accessible&quot;&gt;The Comment Box Becomes More Consistent and Accessible&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub の問題、ディスカッション、プル リクエストで使用されるコメント ボックスの大幅なアップデートを発表できることを嬉しく思います。これは、対話とコラボレーションの方法を改良し、強化することを目的としています。このリリースは、GitHub をより直観的で一貫性があり、プラットフォーム全体でアクセスしやすいものにして、優れたユーザー エクスペリエンスを提供するという当社の継続的な取り組みの証です。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;//github.com/github/release-assets/assets/3369400/c4972040-6dd5-492d-916b-314cfec2a920&quot; alt=&quot;新しいコメント ボックスのスクリーンショット&quot;&gt;&lt;/p&gt;
&lt;p&gt;更新されたコメント ボックスは、既存の GitHub 環境とシームレスに統合されるように設計されており、すべてのユーザーにとって使い慣れた、かつ改善されたエクスペリエンスを保証します。ハイライトと改善点は次のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;強化されたユーザー エクスペリエンス:&lt;/strong&gt;新しく改良されたコメント ボックスは、さまざまなデバイスの幅広いユーザーに高度なエクスペリエンスをもたらします。この更新により、応答性が強化され、マークアップが合理化され、キーボードとスクリーン リーダーのユーザーにより適切に対応できるようになりました。これにより、問題、ディスカッション、プル リクエスト全体にわたって均一でスムーズなユーザー エクスペリエンスが保証され、シームレスなコミュニケーションとコラボレーションが促進されます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一貫性と親しみやすさ:&lt;/strong&gt;新しいコメント ボックスの設計哲学は明確でした。「親しみやすさを保ち、より良くする」ということです。オリジナルと非常に似た更新バージョンを開発し、さまざまな画面サイズでのアクセシビリティ、一貫性、使いやすさを向上させました。移行はスムーズで、ワークフローが中断されることはありません。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;アクセシビリティへの取り組み:&lt;/strong&gt;このアップデートは、GitHub を誰にとってもアクセスしやすくするという継続的な取り組みに貢献します。コメント ボックスは、アクセシビリティへの取り組みとより密接に連携するようになり、問題、プル リクエスト、ディスカッションなどの機能のエクスペリエンスが向上しました。 GitHub をより包括的にする方法について詳しくは、&lt;a href=&quot;https://accessibility.github.com&quot;&gt;アクセシビリティへの取り組み&lt;/a&gt;をご覧ください。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新しいコメント ボックスを体験できることを楽しみにしています。また、GitHub を引き続き改善していくための&lt;a href=&quot;https://github.com/orgs/community/discussions/73066&quot;&gt;フィードバック&lt;/a&gt;も歓迎します。&lt;/p&gt;
&lt;p&gt; The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-31-the-comment-box-becomes-more-consistent-and-accessible&quot;&gt;コメント ボックスの一貫性とアクセス性が向上&lt;/a&gt;first appeared on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">75153</post-id></item><item><title>GPU ランナーを使用して GitHub Actions で ML ワークロードを実行する</title><link>https://github.blog/changelog/2023-10-31-run-your-ml-workloads-on-github-actions-with-gpu-runners</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 31 Oct 2023 16:36:49 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-10-31-run-your-ml-workloads-on-github-actions-with-gpu-runners</guid><description>&lt;p&gt;Run your ML workloads on GitHub Actions with GPU runners&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-31-run-your-ml-workloads-on-github-actions-with-gpu-runners&quot;&gt;Run your ML workloads on GitHub Actions with GPU runners&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub は、GitHub Actions 用の GPU ホスト ランナーを導入し、ML モデルを扱うチームが構築、テスト、デプロイできる単一のプラットフォームを提供できるようにします。&lt;/p&gt;
&lt;h2 id=&quot;gpu-accelerated-builds&quot; id=&quot;gpu-accelerated-builds&quot; &gt; GPU アクセラレーションされたビルド&lt;a href=&quot;#gpu-accelerated-builds&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;GPU accelerated Builds&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; GitHub を使用すると、アプリケーションの一部として GPU で高速化された ML モデルを使用するチームが、サービスをテストしてデプロイするための DevOps プラットフォームとしてアクションを完全に採用できるようになります。これらの新しいランナーにより、大規模言語モデル (LLM) などのモデルを扱うチームが CI/CD プロセスの一部としてこれらをより効率的に実行できるようになり、チームがアクションで ML コンポーネントを含む完全なアプリケーション テストを実行できるようになります。&lt;/p&gt;
&lt;p&gt;開発者やデータ サイエンティストが GitHub Actions を気に入っていることはわかっています。データ サイエンティストは、「単独で作業する」ことから ML Ops のモデルに移行しており、これがチームのより広範な DevOps 実践にどのように反映されるかを理解しようとしています。&lt;/p&gt;
&lt;p&gt;これらのランナーは 11 月にプライベート ベータ版に入る予定です。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;興味がある？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;プライベート ベータの待機リストに参加するには&lt;a href=&quot;https://resources.github.com/devops/accelerate-your-cicd-with-arm-and-gpu-runners-in-github-actions/&quot;&gt;、ここをクリック&lt;/a&gt;してください。&lt;/p&gt;
&lt;p&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-31-run-your-ml-workloads-on-github-actions-with-gpu-runners&quot;&gt;「GPU ランナーを使用して GitHub Actions で ML ワークロードを実行する」という&lt;/a&gt;投稿は、最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">75140</post-id></item><item><title>Onfido は GitHub シークレット スキャン パートナーになりました</title><link>https://github.blog/changelog/2023-10-31-onfido-is-now-a-github-secret-scanning-partner</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 31 Oct 2023 15:08:36 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-10-31-onfido-is-now-a-github-secret-scanning-partner</guid><description>&lt;p&gt;Onfido is now a GitHub secret scanning partner&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-31-onfido-is-now-a-github-secret-scanning-partner&quot;&gt;Onfido is now a GitHub secret scanning partner&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub シークレット スキャンは、トークンや秘密キーなどの既知のタイプのシークレットをリポジトリで検索することでユーザーを保護します。これらの秘密を特定してフラグを立てることで、スキャンはデータ漏洩や不正行為の防止に役立ちます。&lt;/p&gt;
&lt;p&gt;私たちは&lt;a href=&quot;https://onfido.com/&quot;&gt;Onfido&lt;/a&gt;と提携してトークンをスキャンし、パブリック リポジトリ内の相互ユーザーの安全を確保しました。 Onfido トークンを使用すると、開発者は Onfido の API を操作して、安全で信頼性の高い本人確認ソリューションをアプリケーションやサービスに統合できるため、ユーザーのオンボーディング プロセスを強化し、不正行為から保護することができます。 GitHub は、パブリック リポジトリで見つかった公開されたトークンを Onfido に転送し、Onfido は漏洩したトークンについて顧客に通知します。 &lt;a href=&quot;https://documentation.onfido.com/#api-token-rotation&quot;&gt;Onfido API トークンの詳細については、こちらをご覧ください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt; GitHub Advanced Security の顧客は、プライベート リポジトリ内の Onfido トークンをスキャンしてブロックすることもできます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/github/administering-a-repository/about-secret-scanning&quot;&gt;シークレットスキャンについて詳しく見る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/developers/overview/secret-scanning/&quot;&gt;シークレットスキャンに関して GitHub と提携する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-31-onfido-is-now-a-github-secret-scanning-partner&quot;&gt;Onfido は GitHub シークレット スキャン パートナーになり&lt;/a&gt;ました 最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">75139</post-id></item><item><title>GitHub Actions で Arm ベースのホスト ランナーを使用して CI/CD を高速化する</title><link>https://github.blog/changelog/2023-10-30-accelerate-your-ci-cd-with-arm-based-hosted-runners-in-github-actions</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 30 Oct 2023 18:52:28 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-10-30-accelerate-your-ci-cd-with-arm-based-hosted-runners-in-github-actions</guid><description>&lt;p&gt;Accelerate your CI/CD with Arm-based hosted runners in GitHub Actions&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-30-accelerate-your-ci-cd-with-arm-based-hosted-runners-in-github-actions&quot;&gt;Accelerate your CI/CD with Arm-based hosted runners in GitHub Actions&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;Arm ベースのホスト ランナーが GitHub Actions に登場します。&lt;/p&gt;
&lt;h2 id=&quot;unlock-the-power-of-arm-in-actions&quot; id=&quot;unlock-the-power-of-arm-in-actions&quot; &gt; Arm in Actions の力を解き放つ&lt;a href=&quot;#unlock-the-power-of-arm-in-actions&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Unlock the power of Arm in Actions&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; Arm® アーキテクチャのパワーと効率を活用することで、GitHub は、GitHub でのソフトウェア開発を加速する新しいソリューションを提供します。これらの新機能により、GitHub ユーザーは組み込みエッジ、IoT、クラウド インフラストラクチャにわたる Arm アーキテクチャ上でシフトレフト ソフトウェア開発を行えるようになり、すべてのユーザーに大幅なパワー、パフォーマンス、持続可能性の向上を提供します。開発者は、GitHub によってホストされている Arm ハードウェアを利用して、Arm のアーキテクチャが使用されているどこにでもリリース アセットを構築およびデプロイできるようになりました。&lt;/p&gt;
&lt;p&gt;これらのランナーは GitHub Actions にシームレスに統合されており、Arm ベースの Ampere® Altra® プロセッサーを搭載しています。これらのランナーは、構築するための基本的な開発ツールのセットを含む基本イメージがプリロードされており、非常に多用途であり、自動車、IoT、産業などの主要市場のあらゆる組み込みソフトウェア プロジェクトを処理できます。その利点は組み込みエッジにとどまりません。非組み込み、クラウドネイティブ、およびその間のあらゆるものは、二酸化炭素排出量を削減し、既存の予算内でより多くのことを達成することで恩恵を受けることができます。&lt;/p&gt;
&lt;p&gt;これらのランナーは 2024 年 1 月にプライベート ベータ版に参加する予定です。&lt;/p&gt;
&lt;p&gt; 「Arm ベースの GitHub でホストされるランナーを使用すると、ソフトウェア開発者は、クラウドからエッジまで効率的な Arm アーキテクチャを最大限に活用しながら、より迅速に作業を進めることができます」と、Arm インフラストラクチャ部門ソフトウェア エコシステム開発ディレクターの Bhumik Patel 氏は述べています。 「GitHub とのパートナーシップにより、開発者は Arm ベースのソフトウェア開発ワークフローを最適化し、GitHub のユビキタス展開機能を活用して、どこに展開してもより効率的にコードを配信できるようになり、同時にコストと市場投入までの時間を削減できます。」&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;興味がある？&lt;/strong&gt;&lt;br /&gt;
プライベート ベータの待機リストに参加するには&lt;a href=&quot;https://resources.github.com/devops/accelerate-your-cicd-with-arm-and-gpu-runners-in-github-actions/&quot;&gt;、ここをクリック&lt;/a&gt;してください。&lt;/p&gt;
&lt;p&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-30-accelerate-your-ci-cd-with-arm-based-hosted-runners-in-github-actions&quot;&gt;GitHub Actions で Arm ベースのホスト ランナーを使用して CI/CD を高速化するという&lt;/a&gt;投稿は&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">75128</post-id></item><item><title>GitHub Advanced Security の課金 API と CSV のダウンロードには、アクティブなコミッターの電子メール アドレスが含まれるようになりました</title><link>https://github.blog/changelog/2023-10-30-github-advanced-security-billing-api-and-csv-download-now-includes-active-committer-email-addresses</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 30 Oct 2023 13:58:29 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-10-30-github-advanced-security-billing-api-and-csv-download-now-includes-active-committer-email-addresses</guid><description>&lt;p&gt;GitHub Advanced Security billing API and CSV download now includes active committer email addresses&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-30-github-advanced-security-billing-api-and-csv-download-now-includes-active-committer-email-addresses&quot;&gt;GitHub Advanced Security billing API and CSV download now includes active committer email addresses&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub Advanced Security の課金 REST API と CSV のダウンロードには、アクティブなコミッターの電子メール アドレスが含まれるようになりました。これにより、ビジネス全体での Advanced Security ライセンスの使用状況を把握するための情報が提供されます。 GitHub Advanced Security 課金 REST API からの応答の例を次に示します。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; &quot;advanced_security_committers_breakdown&quot;: [
 {
 &quot;user_login&quot;: &quot;octokitten&quot;,
 &quot;last_pushed_date&quot;: &quot;2023-10-26&quot;,
 &quot;last_pushed_email&quot;: &quot;octokitten@email.com&quot;
 }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; GHAS 請求 API の詳細については&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.10/rest/enterprise-admin/billing&quot;&gt;、こちらを&lt;/a&gt;ご覧ください。また、GHAS 請求 CSV のダウンロードは&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/billing/managing-billing-for-github-advanced-security/viewing-your-github-advanced-security-usage#downloading-github-advanced-security-license-usage-information&quot;&gt;、こちらを&lt;/a&gt;ご覧ください。&lt;/p&gt;
&lt;p&gt;これは現在 GitHub.com で入手可能で、GitHub Enterprise Server 3.12 に出荷される予定です。&lt;/p&gt;
&lt;p&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-30-github-advanced-security-billing-api-and-csv-download-now-includes-active-committer-email-addresses&quot;&gt;GitHub Advanced Security の請求 API と CSV のダウンロードにアクティブなコミッターの電子メール アドレスが含まれるようになったという投稿&lt;/a&gt;最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">75120</post-id></item><item><title>REST APIを使用してシークレットスキャントークンの有効性ステータスを取得する</title><link>https://github.blog/changelog/2023-10-27-retrieve-the-validity-status-of-secret-scanning-tokens-with-the-rest-api</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 27 Oct 2023 18:46:59 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-10-27-retrieve-the-validity-status-of-secret-scanning-tokens-with-the-rest-api</guid><description>&lt;p&gt;Retrieve the validity status of secret scanning tokens with the REST API&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-27-retrieve-the-validity-status-of-secret-scanning-tokens-with-the-rest-api&quot;&gt;Retrieve the validity status of secret scanning tokens with the REST API&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub Advanced Security ユーザーは、REST API を使用して、シークレット スキャン トークンの有効性ステータスを取得し、特定の有効性ステータスのすべてのトークンを取得できるようになりました。 API は、最後の有効性チェックの時点でのトークンのステータスを返します。有効なステータスは、 &lt;code&gt;active&lt;/code&gt; 、 &lt;code&gt;inactive&lt;/code&gt; 、または&lt;code&gt;unknown&lt;/code&gt;です。企業、組織、またはリポジトリに対して&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-security-and-analysis-settings-for-your-repository#allowing-validity-checks-for-partner-patterns-in-a-repository&quot;&gt;有効性チェックを&lt;/a&gt;有効にする必要があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレットスキャンについて詳しく見る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/rest/secret-scanning/secret-scanning?apiVersion=2022-11-28#about-secret-scanning&quot;&gt;REST API ドキュメントを参照する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-27-retrieve-the-validity-status-of-secret-scanning-tokens-with-the-rest-api&quot;&gt;「REST API を使用してシークレット スキャン トークンの有効性ステータスを取得する」という&lt;/a&gt;投稿は、最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">74963</post-id></item><item><title>ルールセットを使用したワークフローの要求で、pull_request_target トリガーがサポートされるようになりました</title><link>https://github.blog/changelog/2023-10-26-requiring-workflows-with-rulesets-now-supports-the-pull_request_target-trigger</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 26 Oct 2023 19:28:32 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-10-26-requiring-workflows-with-rulesets-now-supports-the-pull_request_target-trigger</guid><description>&lt;p&gt;Requiring workflows with rulesets now supports the pull_request_target trigger&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-26-requiring-workflows-with-rulesets-now-supports-the-pull_request_target-trigger&quot;&gt;Requiring workflows with rulesets now supports the pull_request_target trigger&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;本日より、アクション ワークフローで、ワークフローの正常な実行を必要とするリポジトリ ルールセットに対して&lt;code&gt;pull_request_target&lt;/code&gt;トリガーがサポートされるようになりました。これは&lt;code&gt;pull_request&lt;/code&gt;と&lt;code&gt;merge_group&lt;/code&gt;に追加されたもので、 &lt;code&gt;pull_request_target&lt;/code&gt;リポジトリ ルールセットでサポートされる 3 番目のワークフロー トリガーになります。&lt;/p&gt;
&lt;p&gt;コードをリポジトリにマージする前にワークフローの正常な実行を必要とするリポジトリ ルールを使用して組織がポリシーを設定する方法について詳しくは、最近の&lt;a href=&quot;https://github.blog/2023-10-11-enforcing-code-reliability-by-requiring-workflows-with-github-repository-rules/&quot;&gt;一般提供に関する発表&lt;/a&gt;をお読みください。&lt;/p&gt;
&lt;p&gt;詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets&quot;&gt;リポジトリ ルールセットのドキュメントを&lt;/a&gt;ご覧ください。&lt;a href=&quot;https://github.com/orgs/community/discussions/69595&quot;&gt;コミュニティ ディスカッション&lt;/a&gt;に質問したり、フィードバックを残したりすることを忘れないでください。&lt;/p&gt;
&lt;p&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-26-requiring-workflows-with-rulesets-now-supports-the-pull_request_target-trigger&quot;&gt;「ルールセットを使用したワークフローの要求が pull_request_target トリガーをサポートするようになりました」という&lt;/a&gt;投稿が最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に登場しました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">74950</post-id></item><item><title>セキュリティ更新とアラートのための、Dependabot のユーザー定義ルール。組織向けの自動トリアージ ルールとプリセットの適用 (パブリック ベータ版)</title><link>https://github.blog/changelog/2023-10-26-dependabot-user-defined-rules-for-security-updates-and-alerts-enforcement-of-auto-triage-rules-and-presets-for-organizations-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 26 Oct 2023 18:39:03 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-10-26-dependabot-user-defined-rules-for-security-updates-and-alerts-enforcement-of-auto-triage-rules-and-presets-for-organizations-public-beta</guid><description>&lt;p&gt;Dependabot user-defined rules for security updates and alerts; enforcement of auto-triage rules and presets for organizations (public beta)&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-26-dependabot-user-defined-rules-for-security-updates-and-alerts-enforcement-of-auto-triage-rules-and-presets-for-organizations-public-beta&quot;&gt;Dependabot user-defined rules for security updates and alerts; enforcement of auto-triage rules and presets for organizations (public beta)&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;strong&gt;自動トリアージ ルールは、大規模なアラートをより適切に管理しながら、アラートとプル リクエストの疲労を大幅に軽減するのに役立つ強力なツールです。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;whats-changing&quot; id=&quot;whats-changing&quot; &gt;何が変わっているのでしょうか？ &lt;a href=&quot;#whats-changing&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What&amp;#039;s changing?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本日より、独自のルールを定義して、組織および個々のリポジトリ全体での dependabot の動作を制御および強制できるようになりました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;すべてのアラートを対象とするのではなく、どのアラートがプル リクエストを受信して​​解決するかを定義できるようになりました。&lt;/li&gt;
&lt;li&gt;個々のリポジトリに加えて、組織全体でこれらの dependabot セキュリティ更新ルールを有効にして強制することができます。&lt;/li&gt;
&lt;li&gt; GitHub のデフォルト ルールセットを組織全体に適用する方法を有効化、無効化、または強制することができます。&lt;/li&gt;
&lt;li&gt;また、組織全体でカスタムの自動解除 (アラート無視とスヌーズ) ルールを有効にして適用できるようになりました。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/5788563/278144837-229c4ced-ad14-433e-9f26-c9dc326522df.png?ssl=1&quot; alt=&quot;dependabot の自動トリアージ ルールのリスト&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;自動トリアージ ルールは、アラート ターゲティング基準、これらのアラートに対してdependabot に自動的に実行させたい動作、および組織全体でルールを有効または適用する方法によって定義されます。&lt;/p&gt;
&lt;p&gt;アラートは、アドバイザリ、依存関係、およびその使用方法に関連するメタデータに基づいてターゲットを設定できます。このパブリック ベータ版で、組織レベルで現在サポートされている属性は、 &lt;code&gt;severity&lt;/code&gt; 、 &lt;code&gt;scope&lt;/code&gt; 、 &lt;code&gt;package-name&lt;/code&gt; 、 &lt;code&gt;cwe&lt;/code&gt; 、および&lt;code&gt;ecosystem&lt;/code&gt;です。リポジトリ レベルでは、特定の&lt;code&gt;manifest&lt;/code&gt;ファイルをターゲットにすることもできます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/5788563/278144561-15fda8a0-0924-4769-b6f0-12e70f36af3d.png?ssl=1&quot; alt=&quot;スタック型の dependabot 自動トリアージ ルールセットを作成する&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;カスタム ルールに一致する既存または将来のアラートに対して、Dependabot は選択された動作をそれに応じて実行します。誤検知を事前にフィルターで除外したり、パッチがリリースされるまでアラートをスヌーズしたり、Dependabot のセキュリティ アップデートを開くアラートを選択したり、将来および現在のアラートにルールが適用されるため、既存のアラートを一括管理したりできます。&lt;/p&gt;
&lt;p&gt;この機能はオープン ソース (すべてのパブリック リポジトリ) では無料で、GitHub Advanced Security を通じてプライベート リポジトリでも使用できます。&lt;/p&gt;
&lt;h3 id=&quot;frequently-asked-questions&quot; id=&quot;frequently-asked-questions&quot; &gt;よくある質問&lt;a href=&quot;#frequently-asked-questions&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Frequently asked questions&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;why-is-github-making-this-change&quot; id=&quot;why-is-github-making-this-change&quot; &gt; GitHub がこの変更を行うのはなぜですか? &lt;a href=&quot;#why-is-github-making-this-change&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Why is GitHub making this change?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; GitHub では、アラート疲労と誤検知に関する長期にわたる問題に責任を持って対処する方法について深く考えてきました。到達可能性や依存関係の範囲などの 1 つの基準に基づいてインデックスを過剰に作成するのではなく、責任を持って設計されたソリューションは、複雑でコンテキストに応じた豊富なアラート メタデータのセットを検出して推論できる必要があると考えています。&lt;/p&gt;
&lt;p&gt;そのため、私たちは今後、柔軟で強力なアラート ルール エンジンを搭載した一連の船舶をリリースする予定です。私たちの最初の出荷であるDependabotプリセットは、 &lt;a href=&quot;-02-dependabot-alerts-now-automatically-dismiss-false-positives-for-npm-public-beta/&quot;&gt;GitHubが厳選した脆弱性パターンを備えたルールエンジンを活用し&lt;/a&gt;、数百万のリポジトリが誤検知アラートをフィルタリングするのに役立ちました。今日のシップでは、組織レベルとリポジトリ レベルでルール エンジンが公開されているため、カスタム ルールを作成して適用することもできます。&lt;/p&gt;
&lt;h4 id=&quot;how-do-i-create-a-rule&quot; id=&quot;how-do-i-create-a-rule&quot; &gt;ルールを作成するにはどうすればよいですか? &lt;a href=&quot;#how-do-i-create-a-rule&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How do I create a rule?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;管理者とセキュリティ マネージャーは、組織またはリポジトリの設定ページから、 &lt;code&gt;Code security and analysis&lt;/code&gt;設定に移動できます。 &lt;code&gt;Dependabot&lt;/code&gt;で、 &lt;code&gt;Dependabot rules&lt;/code&gt;を選択して、独自のカスタム ルールを追加または変更するか、GitHub プリセットを変更します。 &lt;/p&gt;
&lt;h4 id=&quot;how-do-i-enforce-rules-for-my-organization&quot; id=&quot;how-do-i-enforce-rules-for-my-organization&quot; &gt;組織にルールを適用するにはどうすればよいですか? &lt;a href=&quot;#how-do-i-enforce-rules-for-my-organization&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How do I enforce rules for my organization?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/5788563/278144560-1451f8c1-67cc-4c43-a701-46855f08c9a8.png?ssl=1&quot; alt=&quot;dependabot 自動トリアージ ルールを強制する&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;組織レベルでは、ルールを次の状態で設定できます。&lt;/p&gt;
&lt;div class=&quot;content-table-wrap&quot;&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;州&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Enabled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;このルールは、組織内のすべての対象リポジトリにわたって有効になります。これはデフォルトでオンになります (新しいリポジトリが含まれます)。個々のリポジトリはルールを無効にすることを選択できます。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;code&gt;Enforced&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;このルールは、組織内のすべての対象リポジトリにわたって有効になります。これはデフォルトでオンになります (新しいリポジトリが含まれます)。個々のリポジトリはこの設定をオーバーライドできません。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;code&gt;Disabled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;このルールは無効になり、組織全体で非表示になります。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;リポジトリ レベルでは、ルールが適用されない場合、ルールを&lt;code&gt;enabled&lt;/code&gt;または&lt;code&gt;disabled&lt;/code&gt;に設定できます。&lt;/p&gt;
&lt;h4 id=&quot;which-criteria-are-supported&quot; id=&quot;which-criteria-are-supported&quot; &gt;どの基準がサポートされていますか? &lt;a href=&quot;#which-criteria-are-supported&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Which criteria are supported?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;ルールは次の属性にわたって作成できます。&lt;/p&gt;
&lt;div class=&quot;content-table-wrap&quot;&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;severity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt; CVSS 基本スコアに基づくアラートの重大度。値は&lt;code&gt;low&lt;/code&gt; 、 &lt;code&gt;medium&lt;/code&gt; 、 &lt;code&gt;high&lt;/code&gt; 、および&lt;code&gt;critical&lt;/code&gt; 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;code&gt;scope&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;依存関係の範囲: &lt;code&gt;development&lt;/code&gt; (devDependency) または&lt;code&gt;runtime&lt;/code&gt; (運用)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;code&gt;package-name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;パッケージ。パッケージ名ごとにリストされます。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;code&gt;cwe&lt;/code&gt;&lt;/td&gt;
&lt;td&gt; CWE、CWE ID 別にリストされます。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;code&gt;ecosystem&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;エコシステム。エコシステム名ごとにリストされます。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;code&gt;manifest&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マニフェスト ファイル。マニフェスト パスごとにリストされます。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;注: &lt;code&gt;manifest&lt;/code&gt;はリポジトリ レベルでのみ使用できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/5788563/278144562-f66539ea-5c8e-401c-bdcb-b56b587ed521.png?ssl=1&quot; alt=&quot;属性に基づいてアラートをターゲットにする&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;how-do-i-control-how-dependabot-automatically-generates-pull-requests-for-alerts&quot; id=&quot;how-do-i-control-how-dependabot-automatically-generates-pull-requests-for-alerts&quot; &gt; dependabot がアラートのプル リクエストを自動的に生成する方法を制御するにはどうすればよいですか? &lt;a href=&quot;#how-do-i-control-how-dependabot-automatically-generates-pull-requests-for-alerts&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How do I control how Dependabot automatically generates pull requests for alerts?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;アラート基準 (上記) を使用して、Dependabot がどのアラートを解決するためにプル リクエストを開こうとするかを示すことができます。 dependabot の更新で自動トリアージ ルールを使用するには、リポジトリの&lt;code&gt;Code security and analysis&lt;/code&gt;設定からすべてのオープン アラートを解決するために、常にプル リクエストをオープンするための dependabot のオプションを&lt;em&gt;無効にする&lt;/em&gt;必要があります。 &lt;/p&gt;
&lt;h4 id=&quot;how-do-i-control-how-dependabot-automatically-closes-or-reopens-alerts&quot; id=&quot;how-do-i-control-how-dependabot-automatically-closes-or-reopens-alerts&quot; &gt; dependabot がアラートを自動的に閉じるか再度開くかを制御するにはどうすればよいですか? &lt;a href=&quot;#how-do-i-control-how-dependabot-automatically-closes-or-reopens-alerts&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How do I control how Dependabot automatically closes or reopens alerts?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; dependabot のプル リクエスト ルールと同様に、Dependabot が誤検知をフィルターで除外する方法 (無期限に無視) やアラートをスヌーズする方法 (パッチが適用されるまで無視) を制御できます。&lt;/p&gt;
&lt;h4 id=&quot;how-many-custom-rules-can-i-create&quot; id=&quot;how-many-custom-rules-can-i-create&quot; &gt;カスタム ルールはいくつ作成できますか? &lt;a href=&quot;#how-many-custom-rules-can-i-create&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How many custom rules can I create?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;パブリック ベータの時点では、組織ごとに 20 個のルール、各リポジトリごとに 10 個のルールを作成できます。もっと欲しい？&lt;a href=&quot;https://github.com/orgs/community/discussions/54290&quot;&gt;お知らせください&lt;/a&gt;！&lt;/p&gt;
&lt;h4 id=&quot;how-will-this-activity-be-reported&quot; id=&quot;how-will-this-activity-be-reported&quot; &gt;この活動はどのように報告されるのでしょうか? &lt;a href=&quot;#how-will-this-activity-be-reported&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How will this activity be reported?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;自動終了アクティビティは、Webhook、REST、GraphQL、Dependabot アラートの監査ログに表示されます。アラートは通知や新しいプル リクエストなしで無視され、特別なタイムライン イベントとして表示されます。これらのアラートが閉じられても、 &lt;code&gt;resolution:auto-dismissed&lt;/code&gt;フィルターを使用して自動消去されたアラートを引き続き確認できます。&lt;/p&gt;
&lt;h4 id=&quot;who-can-create-and-modify-rules&quot; id=&quot;who-can-create-and-modify-rules&quot; &gt;ルールを作成および変更できるのは誰ですか? &lt;a href=&quot;#who-can-create-and-modify-rules&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Who can create and modify rules?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;自動優先順位付けルールは、オープンソース リポジトリでは無料です。パブリック リポジトリの dependabot アラートを有効にできる人は誰でも、そのリポジトリのカスタム ルールを作成できます。 GitHub Advanced Security の顧客は、プライベート リポジトリ全体および組織レベルでカスタム ルールを作成および管理できます。 &lt;/p&gt;
&lt;h4 id=&quot;how-do-i-reopen-an-automatically-dismissed-alert&quot; id=&quot;how-do-i-reopen-an-automatically-dismissed-alert&quot; &gt;自動的に閉じられたアラートを再度開くにはどうすればよいですか? &lt;a href=&quot;#how-do-i-reopen-an-automatically-dismissed-alert&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How do I reopen an automatically dismissed alert?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;手動で消去したアラートと同様に、自動消去したアラートは、アラート リスト ビューまたは詳細ページから再度開くことができます。この特定のアラートは、(他の自動消去ルールによって) 再度自動消去されません。 &lt;/p&gt;
&lt;h4 id=&quot;what-happens-if-alert-metadata-changes-or-advisory-information-is-withdrawn&quot; id=&quot;what-happens-if-alert-metadata-changes-or-advisory-information-is-withdrawn&quot; &gt;アラートのメタデータが変更されたり、勧告情報が撤回されたりした場合はどうなりますか? &lt;a href=&quot;#what-happens-if-alert-metadata-changes-or-advisory-information-is-withdrawn&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What happens if alert metadata changes or advisory information is withdrawn?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; dependabot は、自動終了ロジックを無効にするメタデータへの変更を認識し、即座に対応します。たとえば、依存関係の範囲を変更し、アラートが自動終了の基準を満たさなくなった場合、アラートは自動的に再度開きます。&lt;/p&gt;
&lt;h4 id=&quot;how-do-i-learn-more&quot; id=&quot;how-do-i-learn-more&quot; &gt;さらに詳しく学ぶにはどうすればよいですか? &lt;a href=&quot;#how-do-i-learn-more&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How do I learn more?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-alerts/using-alert-rules-to-prioritize-dependabot-alerts&quot;&gt;自動トリアージ機能について&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/rest/dependabot/alerts&quot;&gt;dependabot アラート REST API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/graphql/reference/objects#repositoryvulnerabilityalert&quot;&gt;依存ボット アラート GraphQL API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot_alert&quot;&gt;dependabot アラート Webhook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;how-do-i-provide-feedback&quot; id=&quot;how-do-i-provide-feedback&quot; &gt;フィードバックを提供するにはどうすればよいですか? &lt;a href=&quot;#how-do-i-provide-feedback&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How do I provide feedback?&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/orgs/community/discussions/54290&quot;&gt;フィードバックをお寄せいただき&lt;/a&gt;、ご意見をお聞かせください。私たちは耳を傾けています。&lt;/p&gt;
&lt;p&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-10-26-dependabot-user-defined-rules-for-security-updates-and-alerts-enforcement-of-auto-triage-rules-and-presets-for-organizations-public-beta&quot;&gt;セキュリティ更新とアラートのためのポスト依存ボットのユーザー定義ルール。組織に対する自動トリアージ ルールとプリセットの適用 (パブリック ベータ版) は、&lt;/a&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に登場しました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">74947</post-id></item></channel></rss>