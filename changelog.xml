<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Tue, 27 Aug 2024 21:33:32 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.6.1</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>GitHub Copilot のカスタム モデルが限定公開ベータ版になりました</title><link>https://github.blog/changelog/2024-08-27-custom-models-for-github-copilot-are-now-in-limited-public-beta</link><dc:creator>Allison</dc:creator><pubDate>Tue, 27 Aug 2024 21:27:06 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-27-custom-models-for-github-copilot-are-now-in-limited-public-beta</guid><description>&lt;p&gt;Custom models for GitHub Copilot are now in Limited Public Beta&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-27-custom-models-for-github-copilot-are-now-in-limited-public-beta&quot;&gt;Custom models for GitHub Copilot are now in Limited Public Beta&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub Copilot のカスタム モデルが、Copilot Enterprise の限定パブリック ベータで利用できるようになりました。この新機能により、Copilot を微調整して、組織固有のコーディング手法をより深く理解し、それに合わせて、プロジェクト全体にわたるコード提案の関連性と正確性を向上させることができます。&lt;/p&gt;
&lt;h3 id=&quot;what-are-custom-models&quot;&gt;カスタムモデルとは何ですか? &lt;a href=&quot;#what-are-custom-models&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What are custom models?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;カスタム モデルは、組織のコードベースを使用して微調整された大規模言語モデル (LLM) です。独自のライブラリ、特殊な言語、内部コーディング パターンに基づいてモデルをトレーニングすることにより、Copilot は、よりコンテキストを認識し、組織のニーズに合わせたコード提案を提供します。&lt;/p&gt;
&lt;p&gt;このベータ版では、GitHub リポジトリを使用してカスタム モデルを作成できます。オプションで、開発者の Copilot プロンプトと応答からのコード スニペットとテレメトリの収集を有効にして、モデルをさらに微調整することもできます。このプロセスにより、Copilot の提案がコーディングの実践と密接に一致し、提案がより関連性があり正確なものになります。その結果、開発チームはコードレビュー、デバッグ、手動コード調整に費やす時間が短縮され、最終的にチームの生産性が向上し、より一貫したコード品質が保証されます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.blog/wp-content/uploads/2024/08/361007775-b7d83949-f827-4f76-84bd-c30a83273044.png&quot; alt=&quot;カスタムモデルトレーニング構成&quot; /&gt;&lt;/p&gt;
&lt;p&gt;重要なのは、あなたのデータは完全にあなたのもののままです。他の顧客のモデルをトレーニングするために使用されることはなく、カスタム モデルは非公開に保たれるため、完全な制御、セキュリティ、プライバシーが確保されます。&lt;/p&gt;
&lt;h3 id=&quot;when-to-use-custom-models&quot;&gt;カスタム モデルを使用する場合&lt;a href=&quot;#when-to-use-custom-models&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;When to Use Custom Models&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;カスタム モデルを使用すると、Copilot の提案を特定のニーズにより適合させることができ、Copilot が提案したコードが開発者に受け入れられる率が高くなります。次のシナリオではカスタム モデルの使用を検討してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ライブラリと API の使用を強化する:&lt;/strong&gt;組織がパブリック データセットで十分に表現されていないカスタム ライブラリや API に大きく依存している場合、カスタム モデルはこれらを優先して提案できるため、開発者が内部標準に準拠しやすくなります。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特殊な言語のサポートを改善する:&lt;/strong&gt;チームがあまり一般的ではない言語や独自の言語を使用している場合、カスタム モデルを使用することで Copilot をより効率的にすることができます。微調整により、Copilot はこれらの言語をより深く理解できるようになり、摩擦が軽減され、生産性が向上します。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;進化するコードベースに適応する:&lt;/strong&gt;コードベースが変化しても、カスタム モデルをいつ、どのくらいの頻度で再トレーニングするかを完全に制御できます。定期的に再トレーニングすることで、Copilot が最新のコーディング パターンに確実に対応できるようになり、関連性のある正確な提案を提供し続けることができます。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;how-to-get-started&quot;&gt;始め方&lt;a href=&quot;#how-to-get-started&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How to Get Started&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ベータ版にサインアップ:&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/github-copilot/fine_tuning_waitlist_signup/join&quot;&gt;ここでサインアップして&lt;/a&gt;限定パブリック ベータに参加し、組織が Copilot Enterprise プランに参加していることを確認してください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;リポジトリを準備します。&lt;/strong&gt;&lt;br /&gt;
組織のコーディング標準を最もよく反映するリポジトリを選択してください。微調整を最大限に活用するには、独自のライブラリ、特殊な言語、または主要な内部フレームワークを備えたものを含めます。企業に複数の GitHub 組織がある場合、このベータ期間中のトレーニングに使用できるのは 1 つの組織とそのリポジトリのみであることに注意してください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;テレメトリ収集を有効にする:&lt;/strong&gt;&lt;br /&gt;
モデルをさらにカスタマイズするには、開発者のプロンプトとコパイロットの提案に関連するコード スニペットとテレメトリのコレクションを有効にすることを検討してください。このデータは安全に収集され、さらなる微調整に使用され、チームにとっての Copilot の出力の精度と関連性が向上します。データはカスタム モデルを強化するためにのみ使用され、他のユーザーと共有されることはありません。当社のデータ処理慣行の詳細については、&lt;a href=&quot;https://resources.github.com/copilot-trust-center/&quot;&gt;トラスト &amp; セキュリティ センター&lt;/a&gt;にアクセスするか、GitHub の&lt;a href=&quot;https://github.com/customer-terms/github-data-protection-agreement&quot;&gt;データ保護契約&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;トレーニングと使用法:&lt;/strong&gt;&lt;br /&gt;
セットアップ後、カスタム モデルは選択したリポジトリを使用してトレーニングされます。準備が完了すると、開発者の IDE はカスタム モデルの使用を自動的に開始し、すべてのインライン コード補完に通知します。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;モニタリングと品質評価:&lt;/strong&gt;&lt;br /&gt;
カスタム モデルを定期的に再トレーニングして、新しいコードや進化する実践に合わせて調整します。 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/rest/copilot/copilot-usage?apiVersion=2022-11-28&quot;&gt;Copilot 使用状況メトリック API を&lt;/a&gt;使用して、提案受け入れ率などのメトリックを追跡し、どれだけ改善されているかを確認します。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;additional-resources&quot;&gt;追加リソース&lt;a href=&quot;#additional-resources&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Additional Resources&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/github-copilot/fine_tuning_waitlist_signup/join&quot;&gt;カスタム モデルの待機リストに参加してください&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;カスタム モデルの詳細については、 &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/copilot/managing-copilot/managing-github-copilot-in-your-organization/customizing-copilot-for-your-organization/creating-a-custom-model-for-github-copilot&quot;&gt;ドキュメント&lt;/a&gt;を参照してください。&lt;/li&gt;
&lt;li&gt;ご質問またはご提案はありますか?&lt;a href=&quot;https://github.com/orgs/community/discussions/136434&quot;&gt;コミュニティディスカッション&lt;/a&gt;の会話に参加してください。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-08-27-custom-models-for-github-copilot-are-now-in-limited-public-beta&quot;&gt;GitHub Copilot のカスタム モデルは限定公開ベータ版になりました&lt;/a&gt;最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79595</post-id></item><item><title>シークレット スキャンにより、プッシュ保護バイパスのブランチ パスとファイル パスが表示されます。</title><link>https://github.blog/changelog/2024-08-26-secret-scanning-displays-branch-and-file-paths-for-push-protection-bypasses</link><dc:creator>Allison</dc:creator><pubDate>Mon, 26 Aug 2024 20:42:03 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-26-secret-scanning-displays-branch-and-file-paths-for-push-protection-bypasses</guid><description>&lt;p&gt;Secret scanning displays branch and file paths for push protection bypasses&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-26-secret-scanning-displays-branch-and-file-paths-for-push-protection-bypasses&quot;&gt;Secret scanning displays branch and file paths for push protection bypasses&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/using-advanced-secret-scanning-and-push-protection-features/delegated-bypass-for-push-protection/about-delegated-bypass-for-push-protection&quot;&gt;プッシュ保護バイパス&lt;/a&gt;要求では、シークレットのファイル パスとブランチ情報が表示されるようになりました。この改善により、プッシュ保護のバイパスを要求したシークレットをより効果的に優先順位付けすることができます。ブランチ情報は、単一のブランチへのプッシュでのみ使用できます。&lt;/p&gt;
&lt;p&gt;シークレット スキャン プッシュ保護の委任バイパスにより、組織やリポジトリは、シークレットを含むコミットをプッシュできるユーザーを制御できます。開発者は、ブロックされたシークレットをプッシュするために、承認されたユーザーに承認を要求できます。&lt;/p&gt;
&lt;h4 id=&quot;learn-more&quot;&gt;もっと詳しく知る&lt;a href=&quot;#learn-more&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Learn more&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンを使用してリポジトリを保護する&lt;/a&gt;方法について詳しくは、こちらをご覧ください。 &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;GitHub コミュニティのディスカッション&lt;/a&gt;に参加するか、 &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSeQ8KzKQDvh7AD2vuTlqsPWkSo-IHh5XJUXdE6YmmLe8F98Kg/viewform?usp=sf_link&quot;&gt;60 分間のフィードバック セッション&lt;/a&gt;にサインアップして、ご意見をお聞かせください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-08-26-secret-scanning-displays-branch-and-file-paths-for-push-protection-bypasses&quot;&gt;「シークレット スキャンでプッシュ保護バイパスのブランチとファイル パスが表示される」という&lt;/a&gt;記事が最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に登場しました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79592</post-id></item><item><title>クライアント ID がアプリ API 応答に含まれるようになりました</title><link>https://github.blog/changelog/2024-08-23-client-ids-are-now-included-in-app-api-responses</link><dc:creator>Allison</dc:creator><pubDate>Fri, 23 Aug 2024 22:12:53 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-23-client-ids-are-now-included-in-app-api-responses</guid><description>&lt;p&gt;Client IDs are now included in App API responses&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-23-client-ids-are-now-included-in-app-api-responses&quot;&gt;Client IDs are now included in App API responses&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;code&gt;client_id&lt;/code&gt;フィールドは、GitHub アプリを記述するすべての API 応答に含まれるようになりました。クライアント ID はグローバルに一意であるのに対し、アプリケーション ID と名前は一意ではないため、クライアント ID をアプリの主要な識別子として使用するように移行しています。&lt;/p&gt;
&lt;p&gt;歴史的に、GitHub は API でアプリケーションを識別するために&lt;code&gt;app_name&lt;/code&gt; (別名 slug) または&lt;code&gt;app_id&lt;/code&gt; (データベース ID) を使用してきました。ただし、アプリ名は不変ではなく、アプリ ID はグローバルに十分に一意ではありません。名前やデータベース ID ではなく、アプリケーションの&lt;code&gt;client_id&lt;/code&gt;をプライマリ識別子として使用できるように、すべてのアプリ関連 API を段階的に移行しています。これは、インストールに使用される&lt;a href=&quot;https://github.blog/changelog/2024-05-01-github-apps-can-now-use-the-client-id-to-fetch-installation-tokens/&quot;&gt;JWT を作成するためのクライアント ID の使用をサポートする&lt;/a&gt;変更で最初に見られました。トークン。&lt;/p&gt;
&lt;p&gt;この変更は、企業内のアプリケーションをプログラムで管理できる&lt;a href=&quot;https://github.com/github/roadmap/issues/963&quot;&gt;今後の機能&lt;/a&gt;に備えるために行われています。この追加データにより、関心のあるアプリケーションのクライアント ID を見つけやすくなります。&lt;/p&gt;
&lt;p&gt;アプリケーション情報を取得する方法の詳細については、 &lt;a href=&quot;https://docs.github.com/en/rest/apps/apps?apiVersion=2022-11-28#get-an-app&quot;&gt;REST API ドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2024-08-23-client-ids-are-now-included-in-app-api-responses&quot;&gt;「クライアント ID がアプリ API 応答に含まれるようになりました」&lt;/a&gt;という投稿は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79588</post-id></item><item><title>推奨されるセキュリティ構成にシークレット スキャンの非プロバイダー パターンが含まれる</title><link>https://github.blog/changelog/2024-08-23-secret-scanning-non-provider-patterns-inclusion-in-recommended-security-configuration</link><dc:creator>Allison</dc:creator><pubDate>Fri, 23 Aug 2024 21:05:32 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-23-secret-scanning-non-provider-patterns-inclusion-in-recommended-security-configuration</guid><description>&lt;p&gt;Secret scanning non-provider patterns inclusion in recommended security configuration&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-23-secret-scanning-non-provider-patterns-inclusion-in-recommended-security-configuration&quot;&gt;Secret scanning non-provider patterns inclusion in recommended security configuration&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;現在、シークレット スキャン&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#non-provider-patterns&quot;&gt;の非プロバイダー パターン&lt;/a&gt;が GitHub 推奨のセキュリティ構成に含まれています。非プロバイダー パターンも、以前にアタッチされた推奨構成を持つリポジトリに対して自動的に有効になります。&lt;/p&gt;
&lt;p&gt;シークレット スキャン&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#non-provider-patterns&quot;&gt;の非プロバイダー パターンは&lt;/a&gt;、HTTP 認証ヘッダー、接続文字列、秘密キーなど、特定のトークン発行者に関連付けられたパターン以外のシークレットを発見するのに役立つ汎用検出器です。&lt;/p&gt;
&lt;h4 id=&quot;learn-more&quot;&gt;もっと詳しく知る&lt;a href=&quot;#learn-more&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Learn more&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンを使用してリポジトリを保護する&lt;/a&gt;方法について詳しくは、こちらをご覧ください。 &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;GitHub コミュニティのディスカッション&lt;/a&gt;に参加するか、 &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSeQ8KzKQDvh7AD2vuTlqsPWkSo-IHh5XJUXdE6YmmLe8F98Kg/viewform?usp=sf_link&quot;&gt;60 分間のフィードバック セッション&lt;/a&gt;にサインアップして、ご意見をお聞かせください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-08-23-secret-scanning-non-provider-patterns-inclusion-in-recommended-security-configuration&quot;&gt;推奨されるセキュリティ構成にシークレット スキャンの非プロバイダー パターンを含めるという&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79576</post-id></item><item><title>シークレット スキャンにより、プロバイダー以外のパターンが重複排除されるようになりました</title><link>https://github.blog/changelog/2024-08-22-secret-scanning-non-provider-pattern-deduplication</link><dc:creator>Allison</dc:creator><pubDate>Thu, 22 Aug 2024 15:47:56 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-22-secret-scanning-non-provider-pattern-deduplication</guid><description>&lt;p&gt;Secret scanning non-provider pattern deduplication&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-22-secret-scanning-non-provider-pattern-deduplication&quot;&gt;Secret scanning now deduplicates non-provider patterns&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;シークレット漏洩のトリアージと修復をより効果的に行うために、GitHub シークレット スキャンでは、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#high-confidence-patterns&quot;&gt;プロバイダー パターン&lt;/a&gt;に対して&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#non-provider-patterns&quot;&gt;非プロバイダー パターン&lt;/a&gt;(汎用パターン) の重複が排除されるようになりました。&lt;/p&gt;
&lt;p&gt;シークレット スキャン&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#non-provider-patterns&quot;&gt;の非プロバイダー パターンは&lt;/a&gt;、HTTP 認証ヘッダー、接続文字列、秘密キーなど、特定のトークン発行者に関連付けられたパターン以外のシークレットを発見するのに役立つ汎用検出機能です。&lt;/p&gt;
&lt;p&gt;注: &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/using-advanced-secret-scanning-and-push-protection-features/custom-patterns/defining-custom-patterns-for-secret-scanning&quot;&gt;カスタム パターンを削除するとそれらのアラートも削除されるため、カスタム パターン&lt;/a&gt;は重複排除されません。 GitHub で定義された検出器との重複を避けるためにカスタム パターンを調整することをお勧めします。&lt;/p&gt;
&lt;h4 id=&quot;learn-more&quot;&gt;もっと詳しく知る&lt;a href=&quot;#learn-more&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Learn more&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンを使用してリポジトリを保護する&lt;/a&gt;方法について詳しくは、こちらをご覧ください。 &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;GitHub コミュニティのディスカッション&lt;/a&gt;に参加するか、 &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSeQ8KzKQDvh7AD2vuTlqsPWkSo-IHh5XJUXdE6YmmLe8F98Kg/viewform?usp=sf_link&quot;&gt;60 分間のフィードバック セッション&lt;/a&gt;にサインアップして、ご意見をお聞かせください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-08-22-secret-scanning-non-provider-pattern-deduplication&quot;&gt;「シークレット スキャンで非プロバイダー パターンの重複を排除する」&lt;/a&gt;という投稿が最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に登場しました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79564</post-id></item><item><title>シークレット スキャンの非プロバイダー パターンがセキュリティ構成に含まれています</title><link>https://github.blog/changelog/2024-08-20-secret-scanning-non-provider-patterns-are-included-in-security-configurations</link><dc:creator>Allison</dc:creator><pubDate>Tue, 20 Aug 2024 20:37:58 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-20-secret-scanning-non-provider-patterns-are-included-in-security-configurations</guid><description>&lt;p&gt;Secret scanning non-provider patterns are included in security configurations&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-20-secret-scanning-non-provider-patterns-are-included-in-security-configurations&quot;&gt;Secret scanning non-provider patterns are included in security configurations&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;組織レベルのセキュリティ構成を通じて&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#non-provider-patterns&quot;&gt;、非プロバイダー パターン&lt;/a&gt;(汎用パターン) を有効にできるようになりました。&lt;/p&gt;
&lt;p&gt;非プロバイダー パターンは、2024 年 8 月 23 日に&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/securing-your-organization/enabling-security-features-in-your-organization/applying-the-github-recommended-security-configuration-in-your-organization&quot;&gt;GitHub 推奨のセキュリティ構成&lt;/a&gt;にも含まれるようになります。その時点で、非プロバイダー パターンは、推奨構成がアタッチされているリポジトリに対して自動的に有効になります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンを使用してリポジトリを保護する&lt;/a&gt;方法について詳しくは、こちらをご覧ください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;GitHub コミュニティのディスカッション&lt;/a&gt;に参加するか、 &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSeQ8KzKQDvh7AD2vuTlqsPWkSo-IHh5XJUXdE6YmmLe8F98Kg/viewform?usp=sf_link&quot;&gt;60 分間のフィードバック セッション&lt;/a&gt;にサインアップして、ご意見をお聞かせください。&lt;/p&gt;
&lt;p&gt;投稿「 &lt;a href=&quot;https://github.blog/changelog/2024-08-20-secret-scanning-non-provider-patterns-are-included-in-security-configurations&quot;&gt;シークレット スキャンの非プロバイダー パターンはセキュリティ構成に含まれています」&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79534</post-id></item><item><title>Anthropic は GitHub シークレット スキャン パートナーになりました</title><link>https://github.blog/changelog/2024-08-20-anthropic-is-now-a-github-secret-scanning-partner</link><dc:creator>Allison</dc:creator><pubDate>Tue, 20 Aug 2024 18:43:21 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-20-anthropic-is-now-a-github-secret-scanning-partner</guid><description>&lt;p&gt;Anthropic is now a GitHub secret scanning partner&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-20-anthropic-is-now-a-github-secret-scanning-partner&quot;&gt;Anthropic is now a GitHub secret scanning partner&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://www.anthropic.com/&quot;&gt;Anthropic&lt;/a&gt;ユーザーの場合、GitHub シークレット スキャンで Anthropic トークンがスキャンされ、パブリック リポジトリのセキュリティが確保されるようになりました。 Anthropic トークンを使用すると、ユーザーは Anthropic API を通じて Claude にアクセスできるようになります。 GitHub は、パブリック リポジトリで見つかった公開されたトークンを Anthropic に転送し、Anthropic は侵害されたトークンを取り消し、影響を受けるユーザーに通知します。 &lt;a href=&quot;https://docs.anthropic.com/en/api/getting-started&quot;&gt;Anthropic トークンについて詳しくは、こちらをご覧ください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt; GitHub シークレット スキャンは、トークンや秘密キーなどの既知のタイプのシークレットをリポジトリで検索することでユーザーを保護します。これらの秘密を特定してフラグを立てることで、スキャンはデータ漏洩や不正行為の防止に役立ちます。&lt;/p&gt;
&lt;p&gt; GitHub Advanced Security の顧客は、プライベート リポジトリ内の Anthropic トークンをスキャンしてブロックすることもできます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/github/administering-a-repository/about-secret-scanning&quot;&gt;シークレットスキャンについて詳しく見る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/developers/overview/secret-scanning/&quot;&gt;シークレットスキャンに関して GitHub と提携する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-20-anthropic-is-now-a-github-secret-scanning-partner&quot;&gt;Anthropic は GitHub シークレット スキャン パートナーになりまし&lt;/a&gt;た appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; 。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79531</post-id></item><item><title>GitHub Actions ランナーの今後の非推奨と重大な変更に関するお知らせ</title><link>https://github.blog/changelog/2024-08-19-notice-of-upcoming-deprecations-and-breaking-changes-in-github-actions-runners</link><dc:creator>Allison</dc:creator><pubDate>Mon, 19 Aug 2024 17:15:39 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-19-notice-of-upcoming-deprecations-and-breaking-changes-in-github-actions-runners</guid><description>&lt;p&gt;Notice of upcoming deprecations and breaking changes in GitHub Actions runners&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-19-notice-of-upcoming-deprecations-and-breaking-changes-in-github-actions-runners&quot;&gt;Notice of upcoming deprecations and breaking changes in GitHub Actions runners&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub Actions では、今後 6 か月間でランナーとサービスに次の非推奨と重大な変更が加えられます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;アーティファクトのアップロード GitHub アクションで隠しファイルをデフォルトで除外する&lt;/strong&gt;&lt;br /&gt;
2024 年 9 月 2 日以降、v3 および v4 の&lt;code&gt;upload-artifact&lt;/code&gt;アクションのデフォルトのアップロードの一部として隠しファイルとフォルダーが含まれなくなります。これにより、資格情報が誤ってアーティファクトにアップロードされるリスクが軽減されます。これらのファイルをアップロードし続ける必要があるお客様は、新しいオプション「include-hidden-files」を使用してアップロードを続けることができます。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;Ubuntu 20 &amp; Ubuntu 22 arm64 イメージ&lt;/strong&gt;&lt;br /&gt;
2024 年 9 月 3 日、Arm64 でホストされるランナーの Ubuntu 22/20 基本イメージは広く使用されておらず、新しい Arm 所有のイメージを使用することで顧客へのサービスが向上するため、これらのベース イメージを非推奨とします。その時点で、arm64 上の Ubuntu 22 または 20 の基本イメージを使用するすべてのワークフローが失敗し始めます。ランナーが使用しているイメージを変更するには、ランナーを削除し、同じ名前でランナーを再作成することで、失敗を防ぐことができます。 Arm が提供するパートナー イメージを使用することをお勧めします。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Arm Limited の Ubuntu 24.04&lt;/li&gt;
&lt;li&gt; Arm Limited の Ubuntu 22.04&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ランナーでの .NET6 の非推奨&lt;/strong&gt;&lt;br /&gt;
2024 年 10 月に、アクション ランナーの Node20 への移行と同時に、アクション ランナーの .NET6 を非推奨にし、.NET8 に移行します。これは、.NET6 が 2024 年 11 月にサポート終了となるためです。サポートされていないバイナリに依存するオペレーティング システムをまだ使用しているお客様は、この変更の前にアップグレードする必要があります。 .NET6 のサポートが終了すると、次のオペレーティング システムは今後サポートされなくなります。&lt;br /&gt;
 – Debian 10&lt;br /&gt;
 – macOS 11.0&lt;br /&gt;
 – macOS 10.15&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-03-07-github-actions-all-actions-will-run-on-node20-instead-of-node16-by-default/&quot;&gt;Node16 の削除に関して変更ログ&lt;/a&gt;ですでにサポート対象外としてマークされているものと同様です。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;macOS12ランナーイメージ&lt;/strong&gt;&lt;br /&gt;
私たちは macOS 12 ランナー イメージの非推奨プロセスを開始しています。これにより、今後の&lt;a href=&quot;https://github.com/github/roadmap/issues/986&quot;&gt;macOS 15 のリリース&lt;/a&gt;に先立ってフリート容量のバランスをとることができます。このイメージは、2024 年 12 月 3 日までに完全に廃止されます。「macos-14」、「macos-13」、または「macos-latest」を使用するようにワークフローを更新することをお勧めします。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;サポートされていない macOS ラベル&lt;/strong&gt;&lt;br /&gt;
2024 年 12 月 3 日、少数のワークフローに使用されている古いラベルの一部を廃止します。次のランナー ラベルは、その時点から機能しなくなります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; macos-11.0&lt;/li&gt;
&lt;li&gt; macos-12-xl&lt;/li&gt;
&lt;li&gt; macos-13-xl&lt;/li&gt;
&lt;li&gt; macos-13-xl-arm64&lt;/li&gt;
&lt;li&gt; macos-最新-xl&lt;/li&gt;
&lt;li&gt; Macos-最新-xl-arm64&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この投稿&lt;a href=&quot;https://github.blog/changelog/2024-08-19-notice-of-upcoming-deprecations-and-breaking-changes-in-github-actions-runners&quot;&gt;「GitHub Actions ランナーの今後の非推奨と重大な変更に関するお知らせ」は、&lt;/a&gt;最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79506</post-id></item><item><title>CodeQL プル リクエスト アラートの防止と自動修正に関する洞察</title><link>https://github.blog/changelog/2024-08-19-prevention-and-autofix-insights-for-codeql-pull-request-alerts</link><dc:creator>Allison</dc:creator><pubDate>Mon, 19 Aug 2024 16:24:57 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-19-prevention-and-autofix-insights-for-codeql-pull-request-alerts</guid><description>&lt;p&gt;Prevention and autofix insights for CodeQL pull request alerts&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-19-prevention-and-autofix-insights-for-codeql-pull-request-alerts&quot;&gt;Prevention and autofix insights for CodeQL pull request alerts&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;新しい CodeQL プル リクエスト アラート レポートを使用して、CodeQL プル リクエスト アラートの防止メトリクスを追跡できるようになりました。組織レベルとエンタープライズ レベルの両方で利用できます。これらの洞察により、セキュリティ リスクがデフォルトのブランチに到達する前にプロアクティブに特定し、軽減することができます。 &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img decoding=&quot;async&quot; width=&quot;600&quot; alt=&quot;エンタープライズレベルの CodeQL プル リクエスト アラート レポート&quot; src=&quot;https://github.com/user-attachments/assets/dec97197-b70e-4abd-aef9-46e443864801&quot;&gt;
&lt;/p&gt;
&lt;p&gt;このレポートを使用すると、コードが機能ブランチからデフォルト ブランチに移動する際の CodeQL プル リクエスト アラートのメトリクスを履歴的に追跡できます。以下についての洞察を得る:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;未解決およびマージされたアラート:&lt;/strong&gt;どのようなセキュリティ脆弱性がデフォルト ブランチに影響を及ぼしたかを理解します。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;修正 (自動修正および手動):&lt;/strong&gt;マージ前にどのアラートに対処したかを追跡します。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;無視されたアラート:&lt;/strong&gt;どのアラートが誤検知またはリスクが受け入れられたとみなされたかを確認します。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さらに、CodeQL ルール、自動修正ステータス、リポジトリごとにメトリクスを分析します。&lt;/p&gt;
&lt;p&gt;過去のデータは 2024 年 5 月 1 日から利用可能になります。&lt;/p&gt;
&lt;p&gt;これらのレポートにアクセスするには、GitHub.com の右上隅にあるプロフィール写真をクリックし、表示する組織または企業を選択します。組織の場合は、 &lt;strong&gt;[セキュリティ]&lt;/strong&gt;タブに移動し、サイドバーで&lt;strong&gt;CodeQL プル リクエスト アラート&lt;/strong&gt;を見つけます。エンタープライズの場合は、サイドバーで&lt;strong&gt;「Code Security」&lt;/strong&gt;をクリックし、 &lt;strong&gt;「CodeQL プル リクエスト アラート」&lt;/strong&gt;を選択します。&lt;/p&gt;
&lt;p&gt;これらのレポートは現在 GitHub Enterprise Cloud で一般提供されており、GitHub Enterprise Server 3.15 でも利用できるようになる予定です。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/security-overview/about-security-overview&quot;&gt;セキュリティの概要について詳しく知り&lt;/a&gt;、 &lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-08-19-prevention-and-autofix-insights-for-codeql-pull-request-alerts&quot;&gt;CodeQL プル リクエスト アラートの予防と自動修正の洞察に関する&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79503</post-id></item><item><title>コンテンツ除外ベータ版が非 Git ファイルをサポートするようになりました</title><link>https://github.blog/changelog/2024-08-19-content-exclusion-beta-now-supports-non-git-files</link><dc:creator>Allison</dc:creator><pubDate>Mon, 19 Aug 2024 15:44:12 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-19-content-exclusion-beta-now-supports-non-git-files</guid><description>&lt;p&gt;Content Exclusion beta now supports non-Git files&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-19-content-exclusion-beta-now-supports-non-git-files&quot;&gt;Content Exclusion beta now supports non-Git files&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;Git ファイルだけでなく、Git 以外のファイルも Copilot によるアクセスから除外できるようになりました。この更新により、Copilot がアクセスできるコンテンツをより詳細に制御できるようになり、ファイルが Git リポジトリの一部であるかどうかに関係なく、組織の所有者が除外対象としてマークしたファイルには Copilot がアクセスしないようになります。&lt;/p&gt;
&lt;h4 id=&quot;how-to-exclude-non-git-files&quot;&gt;非 Git ファイルを除外する方法&lt;a href=&quot;#how-to-exclude-non-git-files&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How to exclude non-Git files&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;ワイルドカードの範囲が拡張され、Git リポジトリ内と外部の両方のファイルが含まれるようになり、Git 以外のファイルの除外がサポートされました。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以前&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Git リポジトリ内のファイルにのみ適用されるワイルドカード ルール。例えば：&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;&quot;*&quot;:
 - /test1 # =&amp;gt; Blocks from the root of all git repositories: `/test1`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;今&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ワイルドカード ルールは、Git リポジトリ内のファイルおよびファイルシステム ルートに適用されます。例えば：&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;&quot;*&quot;:
 - /test1 # =&amp;gt; Blocks from the root of all git repositories AND the filesystem root: `/test1`, `/test1`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注: コンテンツ除外ベータ版に対するこれらの変更は、VS Code 拡張機能と JetBrains Copilot 拡張機能の両方の最新バージョンに適用され、それぞれのコード補完とチャット機能がカバーされます。&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-08-19-content-exclusion-beta-now-supports-non-git-files&quot;&gt;コンテンツ除外ベータ版は非 Git ファイルをサポートするようになりまし&lt;/a&gt;た appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; 。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79499</post-id></item></channel></rss>