<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>Changelogs Archive - The GitHub Blog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Thu, 17 Aug 2023 21:00:50 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.3</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Changelogs Archive - The GitHub Blog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>dependabot のセマンティック バージョン レベルごとにグループ化されたバージョン更新</title><link>https://github.blog/changelog/2023-08-17-grouped-version-updates-by-semantic-version-level-for-dependabot</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 17 Aug 2023 21:00:50 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-08-17-grouped-version-updates-by-semantic-version-level-for-dependabot</guid><description>&lt;p&gt;Grouped version updates by semantic version level for Dependabot&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-17-grouped-version-updates-by-semantic-version-level-for-dependabot&quot;&gt;Grouped version updates by semantic version level for Dependabot&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2023-06-30-grouped-version-updates-for-dependabot-public-beta/&quot;&gt;dependabot のグループ化されたバージョン更新&lt;/a&gt;(現在パブリック ベータ版) を使用している場合、プル リクエストをセマンティック バージョン更新レベルごとにグループ化できるようになりました。この追加は、更新によって重大な変更が導入されるリスクを軽減するように設計されています。&lt;br /&gt;
この新しい機能を使用するには、以下に示すように、グループ ルールに新しい&lt;code&gt;update-types&lt;/code&gt;キーを追加します。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;groups:
 angular:
 patterns:
 - &quot;@angular*&quot;
 update-types:
 - &quot;minor&quot;
 - &quot;patch&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; &lt;code&gt;update-types&lt;/code&gt;キーは、 &lt;code&gt;major.minor.patch&lt;/code&gt;の SemVer 構造に従って、値「major」、「minor」、「patch」を受け入れます。&lt;/p&gt;
&lt;p&gt;この新しいキーは、 &lt;code&gt;patterns&lt;/code&gt; 、 &lt;code&gt;dependency-type&lt;/code&gt; 、 &lt;code&gt;exclude-patterns&lt;/code&gt;の既存のグループ化パラメーターと連携して機能し、Dependabot が作成するグループ化されたプル リクエストを微調整できるようになります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file#groups&quot;&gt;グループ化された dependabot バージョン更新の構成の詳細については、こちらをご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-17-grouped-version-updates-by-semantic-version-level-for-dependabot&quot;&gt;「Dependabot のセマンティック バージョン レベルによるグループ化されたバージョン更新」という&lt;/a&gt;記事は、最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73755</post-id></item><item><title>非推奨 – dependabot のアップデートにより Python 3.6 および 3.7 のサポートが終了</title><link>https://github.blog/changelog/2023-08-17-deprecation-dependabot-updates-drop-support-for-python-3-6-and-3-7</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 17 Aug 2023 17:31:10 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-08-17-deprecation-dependabot-updates-drop-support-for-python-3-6-and-3-7</guid><description>&lt;p&gt;Deprecation - Dependabot updates drop support for Python 3.6 and 3.7&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-17-deprecation-dependabot-updates-drop-support-for-python-3-6-and-3-7&quot;&gt;Deprecation &amp;#8211; Dependabot updates drop support for Python 3.6 and 3.7&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;2023 年 8 月 17 日の時点で、Dependabot アップデートは Python 3.6 または 3.7 をサポートしなくなり、サポートが終了しました。コードでこれらのバージョンが使用されている場合、Dependabot はリポジトリでプル リクエストを開くことができなくなり、エラーがログに記録されます。コードが安全で、Dependabot が引き続き実行できるようにするには、少なくとも Python 3.8 に更新してください。&lt;/p&gt;
&lt;p&gt;この変更は、Dependabot プル リクエストにのみ影響します。既知の脆弱性のある依存関係については、Dependabot アラートを引き続き受け取ります。このアラートを解決するには、影響を受けるパッケージを手動でアップグレードします。&lt;/p&gt;
&lt;p&gt;サポートされているバージョンの詳細については&lt;a href=&quot;https://devguide.python.org/versions/&quot;&gt;、Python の公式リリース サイクル&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/about-dependabot-version-updates#supported-repositories-and-ecosystems&quot;&gt;dependabot でサポートされているパッケージ マネージャーの詳細については、こちらをご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;投稿&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-17-deprecation-dependabot-updates-drop-support-for-python-3-6-and-3-7&quot;&gt;「非推奨 – dependabot アップデートによる Python 3.6 および 3.7 のサポートの終了」は、&lt;/a&gt;最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73737</post-id></item><item><title>REST API 経由でリポジトリのプライベート脆弱性レポートを有効または無効にする</title><link>https://github.blog/changelog/2023-08-16-enable-or-disable-private-vulnerability-reporting-on-repositories-via-rest-api</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 16 Aug 2023 21:21:37 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-08-16-enable-or-disable-private-vulnerability-reporting-on-repositories-via-rest-api</guid><description>&lt;p&gt;Enable or disable private vulnerability reporting on repositories via REST API&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-16-enable-or-disable-private-vulnerability-reporting-on-repositories-via-rest-api&quot;&gt;Enable or disable private vulnerability reporting on repositories via REST API&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;リポジトリ管理者またはセキュリティ マネージャー ロールのメンバーは、REST API 経由でリポジトリのプライベート脆弱性レポートを&lt;a href=&quot;https://docs.github.com/en/rest/repos/repos#enable-private-vulnerability-reporting-for-a-repository&quot;&gt;有効&lt;/a&gt;または&lt;a href=&quot;https://docs.github.com/en/rest/repos/repos#disable-private-vulnerability-reporting-for-a-repository&quot;&gt;無効に&lt;/a&gt;できるようになりました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability#privately-reporting-a-security-vulnerability&quot;&gt;プライベート脆弱性レポート&lt;/a&gt;の詳細については、こちらをご覧ください。&lt;/p&gt;
&lt;p&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-16-enable-or-disable-private-vulnerability-reporting-on-repositories-via-rest-api&quot;&gt;REST API 経由でリポジトリのプライベート脆弱性レポートを有効または無効にするという投稿は、&lt;/a&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73727</post-id></item><item><title>シークレット スキャンにより、無料パブリック リポジトリの課題内のシークレットが検出されます</title><link>https://github.blog/changelog/2023-08-16-secret-scanning-detects-secrets-in-issues-for-free-public-repositories</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 16 Aug 2023 19:51:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-08-16-secret-scanning-detects-secrets-in-issues-for-free-public-repositories</guid><description>&lt;p&gt;Secret scanning detects secrets in issues for free public repositories&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-16-secret-scanning-detects-secrets-in-issues-for-free-public-repositories&quot;&gt;Secret scanning detects secrets in issues for free public repositories&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;無料のパブリック リポジトリでシークレット スキャンを有効にしているユーザーは、問題のタイトル、説明、またはコメント (履歴リビジョンを含む) で公開された潜在的なシークレットに関するアラートを受け取るようになります。アラートは UI または&lt;a href=&quot;https://docs.github.com/en/rest/secret-scanning?apiVersion=2022-11-28&quot;&gt;REST API&lt;/a&gt;内で表示できます。&lt;/p&gt;
&lt;p&gt;新しい問題は今日からスキャンされ、既存の問題は今後数週間にわたってスキャンされます。すべてのパブリック リポジトリは、2023 年 9 月 1 日までに完全にスキャンされる予定です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンを使用してリポジトリを保護する方法を学びます&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/developers/overview/secret-scanning/&quot;&gt;シークレットスキャンに関して GitHub と提携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;フィードバックはありましたか?&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;コード セキュリティ コミュニティ&lt;/a&gt;でディスカッションを開く&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-16-secret-scanning-detects-secrets-in-issues-for-free-public-repositories&quot;&gt;「シークレット スキャンで無料パブリック リポジトリの問題のシークレットを検出する」&lt;/a&gt;という記事は、最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73726</post-id></item><item><title>GitHub デスクトップ コミュニティに「コミットのチェックアウト」と「ダブルクリックして外部エディタを開く」が追加されました</title><link>https://github.blog/changelog/2023-08-16-github-desktop-community-adds-check-out-a-commit-and-double-click-to-open-external-editor</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 16 Aug 2023 14:28:45 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-08-16-auto-draft</guid><description>&lt;p&gt;In 3.2.8, GitHub Desktop is shipping two great community contributions of highly requested features &amp;#8212; &amp;#8220;Check Out a Commit&amp;#8221; and &amp;#8220;Double Click to Open in Your External Editor&amp;#8221;. Alongside that, we have a nice addition to the clone dialog where you can quickly see if a repository has been archived, as well as many accessibility [&amp;#8230;]&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-16-github-desktop-community-adds-check-out-a-commit-and-double-click-to-open-external-editor&quot;&gt;GitHub Desktop community adds &amp;#8220;Check Out a Commit&amp;#8221; and &amp;#8220;Double click to Open External Editor&amp;#8221;&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;3.2.8 では、GitHub Desktop は、「コミットのチェックアウト」と「ダブルクリックして外部エディタで開く」という、リクエストの多かった機能に関する 2 つの優れたコミュニティ貢献機能を提供します。&lt;br /&gt;
それに加えて、リポジトリがアーカイブされているかどうかをすぐに確認できるクローン ダイアログへの優れた追加機能や、多くのアクセシビリティの機能強化が行われています。&lt;/p&gt;
&lt;h3 id=&quot;check-out-a-commit&quot;&gt;コミットをチェックアウトする&lt;a href=&quot;#check-out-a-commit&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Check Out a Commit&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/kitswas&quot;&gt;@kitswas&lt;/a&gt;には、要望の多かった機能である履歴タブからコミットをチェックアウトする機能を追加してくれたことに感謝します。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/2180038/261034257-0e9f860a-981f-45aa-835f-d4c258f642f0.gif?ssl=1&quot; alt=&quot;新しいコンテキスト メニュー オプションを使用してタグのコミットをチェックアウトすることを示します&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;double-click-to-open-in-your-external-editor&quot;&gt;ダブルクリックして外部エディタで開きます&lt;a href=&quot;#double-click-to-open-in-your-external-editor&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Double Click to Open in Your External Editor&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;また、ファイルをダブルクリックして外部エディター (履歴ビューまたは変更ビューにあるかどうか) で開くことができるという、要望の多かったもう 1 つの機能の追加についても&lt;a href=&quot;https://github.com/digitalmaster&quot;&gt;@digitalmaster&lt;/a&gt;に感謝したいと思います。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/2180038/261034386-a86e7fb2-f427-410e-8406-dac344975dc8.gif?ssl=1&quot; alt=&quot;履歴ビューでダブルクリックしてファイルを開くことを示します&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;quickly-identify-archived-repositories-when-cloning&quot;&gt;クローン作成時にアーカイブされたリポジトリを迅速に識別&lt;a href=&quot;#quickly-identify-archived-repositories-when-cloning&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Quickly Identify Archived Repositories when Cloning&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;このリリースのもう 1 つの優れた追加点は、クローン作成ダイアログ内のどのリポジトリがアーカイブされてお​​り、クローン作成に適さない可能性が高いかを一目で判断できることです。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/75402236/261010271-501a06f2-0ff8-4d7d-b7aa-ec60a36779d8.png?ssl=1&quot; alt=&quot;アーカイブ タグが追加された 1 つのリポジトリを含むクローン ダイアログ&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;accessibility&quot;&gt;アクセシビリティ&lt;a href=&quot;#accessibility&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Accessibility&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; GitHub Desktop は&lt;a href=&quot;https://accessibility.github.com/&quot;&gt;、すべての開発者の拠点となるという GitHub の使命を&lt;/a&gt;サポートするために、アクセシビリティの向上に積極的に取り組んでいます。&lt;/p&gt;
&lt;p&gt;したがって、次のようになります。&lt;br /&gt;
 – diff オプション ボタンに&lt;code&gt;aria-label&lt;/code&gt;および&lt;code&gt;aria-expanded&lt;/code&gt;属性を追加 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17062&quot;&gt;#17062&lt;/a&gt;&lt;br /&gt;
 – リスト スクリーン リーダーを更新した後に見つかったプル リクエストの数が発表されました – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17031&quot;&gt;#17031&lt;/a&gt;&lt;br /&gt;
 – キーボード ショートカットを使用して履歴ビュー項目のコンテキスト メニューを開く機能 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17035&quot;&gt;#17035&lt;/a&gt;&lt;br /&gt;
 – 「リポジトリのクローン作成」ダイアログ リストをキーボードでナビゲートする機能 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/16977&quot;&gt;#16977&lt;/a&gt;&lt;br /&gt;
 – コンテンツをスキップしないために、最初のキーボード フォーカスを受け取るダイアログ内のチェックボックス – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17014&quot;&gt;#17014&lt;/a&gt;&lt;br /&gt;
 – スクリーン リーダーによって通知されるプル、プッシュ、フェッチ ボタンの進行状況 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/16985&quot;&gt;#16985&lt;/a&gt;&lt;br /&gt;
 – スクリーン リーダーによって一貫して通知されるインライン エラー – &lt;a href=&quot;https://github.com/desktop/desktop/issues/16850&quot;&gt;#16850&lt;/a&gt;&lt;br /&gt;
 – リポジトリおよびブランチ リストのスクリーン リーダーによってグループのタイトルと位置が正しくアナウンスされるようになりました – &lt;a href=&quot;https://github.com/desktop/desktop/issues/16968&quot;&gt;#16968&lt;/a&gt;&lt;br /&gt;
 – スクリーン リーダー ユーザー向けの「プル、プッシュ、フェッチ」ドロップダウン ボタンに&lt;code&gt;aria-label&lt;/code&gt;属性を追加 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/16839&quot;&gt;#16839&lt;/a&gt;&lt;br /&gt;
 – スクリーン リーダーによってアナウンスされるように、ダイアログ エラー バナーにアラートの aria の役割を適用 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/16809&quot;&gt;#16809&lt;/a&gt;&lt;br /&gt;
 – 履歴ビューのファイルステータスが改善され、キーボードとスクリーンリーダーにアクセスできるようになりました – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17192&quot;&gt;#17192&lt;/a&gt;&lt;br /&gt;
 – キーボード経由でファイルリストのコンテキストメニューを開く機能 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17143&quot;&gt;#17143&lt;/a&gt;&lt;br /&gt;
 – macOS Ventura でのダイアログのタイトルと説明の発表 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17148&quot;&gt;#17148&lt;/a&gt;&lt;br /&gt;
 – 「スタッシュの上書き」、「スタッシュの破棄」、「タグの削除」、および「ブランチの削除」の確認ダイアログをアラート ダイアログとしてアナウンス – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17197&quot;&gt;#17197&lt;/a&gt; 、 &lt;a href=&quot;https://github.com/desktop/desktop/issues/17166&quot;&gt;#17166&lt;/a&gt; 、 &lt;a href=&quot;https://github.com/desktop/desktop/issues/17210&quot;&gt;#17210&lt;/a&gt;&lt;br /&gt;
 – テキストとリンクのコントラストの改善 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17092&quot;&gt;#17092&lt;/a&gt;&lt;br /&gt;
 – スクリーン リーダーによって通知されるブランチ ドロップダウンのタブ パネル – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17172&quot;&gt;#17172&lt;/a&gt;&lt;br /&gt;
 – &lt;code&gt;aria-describedby&lt;/code&gt;介してボタンに関連付けられたスタッシュ復元ボタンの説明 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17204&quot;&gt;#17204&lt;/a&gt;&lt;br /&gt;
 – 発見しやすさを向上させるために、入力の前に配置された名前変更ブランチダイアログの警告 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17164&quot;&gt;#17164&lt;/a&gt;&lt;br /&gt;
 – 「新しいリポジトリの作成」ダイアログのエラーと警告はスクリーン リーダーで通知されます – &lt;a href=&quot;https://github.com/desktop/desktop/issues/16993&quot;&gt;#16993&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;other-great-fixes&quot;&gt;その他の素晴らしい修正&lt;a href=&quot;#other-great-fixes&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Other Great Fixes&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;部分クローン/フェッチ用のリモートが認識されます。ありがとう&lt;a href=&quot;https://github.com/mkafrin&quot;&gt;@mkafrin&lt;/a&gt; ! – &lt;a href=&quot;https://github.com/desktop/desktop/issues/16284&quot;&gt;#16284&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非標準のユーザー名を使用したリポジトリの関連付けが修正されました – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17024&quot;&gt;#17024&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プラットフォームの規則に従って、macOS では「環境設定」の名前が「設定」に変更されました – &lt;a href=&quot;https://github.com/desktop/desktop/issues/16907&quot;&gt;#16907&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;外部エディター オプションとして Zed Preview を追加 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17097&quot;&gt;#17097&lt;/a&gt; 。ありがとう&lt;a href=&quot;https://github.com/filiptronicek&quot;&gt;@filiptronicek&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; Windows の外部エディター オプションとして Pulsar コード エディターを追加 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17120&quot;&gt;#17120&lt;/a&gt; 。ありがとう&lt;a href=&quot;https://github.com/confused-Techie&quot;&gt;@confused-Techie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; Windows 用 VSCodium Insider の検出を修正 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/17078&quot;&gt;#17078&lt;/a&gt; 。ありがとう&lt;a href=&quot;https://github.com/voidei&quot;&gt;@voidei&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コミットされていない変更が存在する場合、隠した変更の「復元」ボタンは無効になりません。 – &lt;a href=&quot;https://github.com/desktop/desktop/issues/12994&quot;&gt;#12994&lt;/a&gt; 。ありがとう&lt;a href=&quot;https://github.com/samuelko123&quot;&gt;@samuelko123&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自動更新は段階的にロールアウトされます。または、&lt;a href=&quot;https://desktop.github.com&quot;&gt;ここから最新の GitHub デスクトップをダウンロードできます。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-16-github-desktop-community-adds-check-out-a-commit-and-double-click-to-open-external-editor&quot;&gt;GitHub デスクトップ コミュニティに「コミットのチェックアウト」と「ダブルクリックして外部エディタを開く」を&lt;/a&gt;追加した投稿 最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73722</post-id></item><item><title>GitHub Mobile で複数の GitHub アカウントでログインします</title><link>https://github.blog/changelog/2023-08-15-log-in-with-multiple-github-accounts-on-github-mobile</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 15 Aug 2023 16:27:51 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-08-15-log-in-with-multiple-github-accounts-on-github-mobile</guid><description>&lt;p&gt;Log in with multiple GitHub accounts on GitHub Mobile&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-15-log-in-with-multiple-github-accounts-on-github-mobile&quot;&gt;Log in with multiple GitHub accounts on GitHub Mobile&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; width=&quot;1200&quot; alt=&quot;GitHub モバイルでの複数アカウントのサポートを告知するバナー。アカウント スイッチャー内に複数のアバターが表示されます。&quot; src=&quot;https://github.com/github/release-assets/assets/1051453/79fe0e92-c9c6-4909-935b-79fee5229bfe&quot;&gt;&lt;/p&gt;
&lt;p&gt; GitHub Mobile 内で複数の GitHub アカウントのサポートが導入されました。仕事用アカウントと個人用アカウントでログインすると、プロジェクトがどこで行われていても常に連絡を取ることができます。&lt;/p&gt;
&lt;p&gt; GitHub Mobile に複数のアカウントを追加するには、[プロファイル] &gt; [設定] &gt; [アカウント] に移動するか、[プロファイル] タブを長押ししてアカウント スイッチャーにアクセスします。各アカウントの未読通知の数を確認したり、別のアカウントに切り替えたり、アカウントにサインインまたはサインアウトしたりできます。&lt;/p&gt;
&lt;p&gt;重要な作業に集中できるよう、適切な量のコンテキストを含む各アカウントのプッシュ通知を受け取ります。各アカウント間でデータを分離し、プライベート コンテンツを表示するときに適切なアカウントがアクティブになるようにします。&lt;/p&gt;
&lt;p&gt;今すぐ&lt;a href=&quot;https://apps.apple.com/us/app/github/id1477376905&quot;&gt;Apple App Store&lt;/a&gt;または&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.github.android&quot;&gt;Google Play ストア&lt;/a&gt;から GitHub Mobile をダウンロードまたは更新して開始してください。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/mobile&quot;&gt;GitHub Mobile について詳しく学び&lt;/a&gt;、改善に役立てるために&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/mobile&quot;&gt;フィードバックを共有してください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;この投稿&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-15-log-in-with-multiple-github-accounts-on-github-mobile&quot;&gt;GitHub Mobile で複数の GitHub アカウントを使用してログインする&lt;/a&gt;最初に登場したのは&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;です。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73708</post-id></item><item><title>カスタム CodeQL クエリを作成するための新しいデータフロー API</title><link>https://github.blog/changelog/2023-08-14-new-dataflow-api-for-writing-custom-codeql-queries</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 14 Aug 2023 08:34:25 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-08-14-new-dataflow-api-for-writing-custom-codeql-queries</guid><description>&lt;p&gt;New dataflow API for writing custom CodeQL queries&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-14-new-dataflow-api-for-writing-custom-codeql-queries&quot;&gt;New dataflow API for writing custom CodeQL queries&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;データフロー分析を利用するカスタム CodeQL クエリを作成するユーザー向けに、新しい API をリリースしました。新しい API では柔軟性が向上し、古い API にありがちな落とし穴を防ぐ改善が加えられ、クエリ評価のパフォーマンスが 5% 向上します。個人的な興味のために&lt;a href=&quot;https://codeql.github.com/docs/writing-codeql-queries/&quot;&gt;CodeQL クエリを作成して&lt;/a&gt;いる場合でも、&lt;a href=&quot;https://securitylab.github.com/bounties/&quot;&gt;世界のコードのセキュリティを保護するために報奨金プログラムに参加している場合&lt;/a&gt;でも、この投稿は古い API から新しい API への移行に役立ちます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;この API の変更は、独自のカスタム CodeQL クエリを作成するユーザーにのみ関係します。 GitHub の&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/built-in-codeql-query-suites&quot;&gt;標準 CodeQL クエリ スイートを&lt;/a&gt;使用するコード スキャン ユーザーは、変更を加える必要はありません。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;新しいデータフロー API の導入により、古い API は非推奨になります。古い API は 2024 年 12 月まで引き続き機能します。 CodeQL CLI は、2023 年 12 月に非推奨の警告を発し始める予定です。&lt;/p&gt;
&lt;p&gt; CodeQL クエリを古い API から新しい API に更新する方法を示すために、間もなく非推奨になる API を使用する次のクエリの例を考えてみましょう。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-ql&quot;&gt;class SensitiveLoggerConfiguration extends TaintTracking::Configuration {
 SensitiveLoggerConfiguration() { this = &quot;SensitiveLoggerConfiguration&quot; } // 6: characteristic predicate with dummy string value (see below)

 override predicate isSource(DataFlow::Node source) { source.asExpr() instanceof CredentialExpr }

 override predicate isSink(DataFlow::Node sink) { sinkNode(sink, &quot;log-injection&quot;) }

 override predicate isSanitizer(DataFlow::Node sanitizer) {
 sanitizer.asExpr() instanceof LiveLiteral or
 sanitizer.getType() instanceof PrimitiveType or
 sanitizer.getType() instanceof BoxedType or
 sanitizer.getType() instanceof NumberType or
 sanitizer.getType() instanceof TypeType
 }

 override predicate isSanitizerIn(DataFlow::Node node) { this.isSource(node) }
 }

 import DataFlow::PathGraph

 from SensitiveLoggerConfiguration cfg, DataFlow::PathNode source, DataFlow::PathNode sink
 where cfg.hasFlowPath(source, sink)
 select sink.getNode(), source, sink, &quot;This $@ is written to a log file.&quot;,
 source.getNode(),
 &quot;potentially sensitive information&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;クエリを新しい API に変換するには:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; &lt;code&gt;class&lt;/code&gt;の代わりに&lt;code&gt;module&lt;/code&gt;使用します。 CodeQL &lt;code&gt;module&lt;/code&gt;何も&lt;code&gt;extend&lt;/code&gt;せず、代わりに署名&lt;code&gt;implements&lt;/code&gt; 。データ フローとテイントの両方の追跡構成の場合、これは&lt;code&gt;DataFlow::ConfigSig&lt;/code&gt;または&lt;code&gt;FlowState&lt;/code&gt;が必要な場合は&lt;code&gt;DataFlow::StateConfigSig&lt;/code&gt;です。&lt;/li&gt;
&lt;li&gt;以前は、 &lt;code&gt;DataFlow::Configuration&lt;/code&gt;または&lt;code&gt;TaintTracking::Configuration&lt;/code&gt;を拡張することで、データ フローとテイント トラッキングのどちらかを選択していました。代わりに、共有署名の実装&lt;span class=&quot;x x-first&quot;&gt;を使用して&lt;code&gt;&lt;span class=&quot;pl-c1 x&quot;&gt;DataFlow::Global&lt;..&gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;または&lt;/span&gt;&lt;span class=&quot;pl-s x&quot;&gt;&lt;span class=&quot;x x-first&quot;&gt;&lt;code&gt;&lt;span class=&quot;pl-c1 x&quot;&gt;TaintTracking::Global&lt;..&gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;パラメーター化モジュールをインスタンス化することで、データまたはテイント フローを定義します。ここで、データ フローとテイント フローのどちらを選択するかが決まります。汚染追跡が行われます。&lt;/li&gt;
&lt;li&gt;モジュールを定義しているため、述語は何も&lt;code&gt;override&lt;/code&gt;なくなりました。&lt;/li&gt;
&lt;li&gt;サニタイザーとバリアの概念は&lt;code&gt;isBarrier&lt;/code&gt;に統合され、汚染追跡とデータ フロー構成の両方に適用されます。 &lt;code&gt;isSanitizer&lt;/code&gt;の代わりに&lt;code&gt;isBarrier&lt;/code&gt;使用し、 &lt;code&gt;isSanitizerIn&lt;/code&gt;の代わりに&lt;code&gt;isBarrierIn&lt;/code&gt;使用する必要があります。&lt;/li&gt;
&lt;li&gt;同様に、テイント追跡述語&lt;code&gt;isAdditionalTaintStep&lt;/code&gt;の代わりに、 &lt;code&gt;isAdditionalFlowStep&lt;/code&gt;を使用します。&lt;/li&gt;
&lt;li&gt;ダミー文字列値を含む特性述語は必要なくなりました。&lt;/li&gt;
&lt;li&gt;汎用の&lt;code&gt;DataFlow::PathGraph&lt;/code&gt;使用しないでください。代わりに、 &lt;code&gt;PathGraph&lt;/code&gt;使用しているモジュールから直接インポートされます。たとえば、以下のクエリ例の更新バージョンの&lt;code&gt;SensitiveLoggerFlow::PathGraph&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;上記と同様に、 &lt;code&gt;DataFlow&lt;/code&gt;からではなく、結果のモジュールから&lt;code&gt;PathNode&lt;/code&gt;型を使用します。&lt;/li&gt;
&lt;li&gt;構成クラスがなくなったので、 &lt;code&gt;from&lt;/code&gt;句と&lt;code&gt;where&lt;/code&gt;句でモジュールを直接使用します。たとえば、構成オブジェクト&lt;code&gt;cfg&lt;/code&gt;から&lt;code&gt;cfg.hasFlowPath&lt;/code&gt;または&lt;code&gt;cfg.hasFlow&lt;/code&gt;を使用する代わりに、作業しているモジュールからの&lt;code&gt;flowPath&lt;/code&gt;または&lt;code&gt;flow&lt;/code&gt;を使用します。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上記の変更をすべて考慮すると、更新されたクエリは次のようになります。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-ql&quot;&gt;module SensitiveLoggerConfig implements DataFlow::ConfigSig { // 1: module always implements DataFlow::ConfigSig or DataFlow::StateConfigSig
 predicate isSource(DataFlow::Node source) { source.asExpr() instanceof CredentialExpr } // 3: no need to specify &amp;#39;override&amp;#39;
 predicate isSink(DataFlow::Node sink) { sinkNode(sink, &quot;log-injection&quot;) }

 predicate isBarrier(DataFlow::Node sanitizer) { // 4: &amp;#39;isBarrier&amp;#39; replaces &amp;#39;isSanitizer&amp;#39;
 sanitizer.asExpr() instanceof LiveLiteral or
 sanitizer.getType() instanceof PrimitiveType or
 sanitizer.getType() instanceof BoxedType or
 sanitizer.getType() instanceof NumberType or
 sanitizer.getType() instanceof TypeType
 }

 predicate isBarrierIn(DataFlow::Node node) { isSource(node) } // 4: isBarrierIn instead of isSanitizerIn

 }

 module SensitiveLoggerFlow = TaintTracking::Global ; // 2: TaintTracking selected

 import SensitiveLoggerFlow::PathGraph // 7: the PathGraph specific to the module you are using

 from SensitiveLoggerFlow::PathNode source, SensitiveLoggerFlow::PathNode sink // 8 &amp; 9: using the module directly
 where SensitiveLoggerFlow::flowPath(source, sink) // 9: using the flowPath from the module
 select sink.getNode(), source, sink, &quot;This $@ is written to a log file.&quot;, source.getNode(),
 &quot;potentially sensitive information&quot;&lt;/code&gt;&lt;SensitiveLoggerConfig&gt; &lt;code class=&quot;language-ql&quot;&gt;module SensitiveLoggerConfig implements DataFlow::ConfigSig { // 1: module always implements DataFlow::ConfigSig or DataFlow::StateConfigSig
 predicate isSource(DataFlow::Node source) { source.asExpr() instanceof CredentialExpr } // 3: no need to specify &amp;#39;override&amp;#39;
 predicate isSink(DataFlow::Node sink) { sinkNode(sink, &quot;log-injection&quot;) }

 predicate isBarrier(DataFlow::Node sanitizer) { // 4: &amp;#39;isBarrier&amp;#39; replaces &amp;#39;isSanitizer&amp;#39;
 sanitizer.asExpr() instanceof LiveLiteral or
 sanitizer.getType() instanceof PrimitiveType or
 sanitizer.getType() instanceof BoxedType or
 sanitizer.getType() instanceof NumberType or
 sanitizer.getType() instanceof TypeType
 }

 predicate isBarrierIn(DataFlow::Node node) { isSource(node) } // 4: isBarrierIn instead of isSanitizerIn

 }

 module SensitiveLoggerFlow = TaintTracking::Global ; // 2: TaintTracking selected

 import SensitiveLoggerFlow::PathGraph // 7: the PathGraph specific to the module you are using

 from SensitiveLoggerFlow::PathNode source, SensitiveLoggerFlow::PathNode sink // 8 &amp; 9: using the module directly
 where SensitiveLoggerFlow::flowPath(source, sink) // 9: using the flowPath from the module
 select sink.getNode(), source, sink, &quot;This $@ is written to a log file.&quot;, source.getNode(),
 &quot;potentially sensitive information&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;この例では取り上げていませんが、フロー状態が必要な場合は&lt;code&gt;DataFlow::StateConfigSig&lt;/code&gt;署名を実装することもできます。次に、そのシグネチャの実装を使用して&lt;code&gt;DataFlow::GlobalWithState&lt;/code&gt;または&lt;code&gt;TaintTracking::GlobalWithState&lt;/code&gt;をインスタンス化します。 flow-state に特有のもう 1 つの変更は、 &lt;code&gt;DataFlow::FlowState&lt;/code&gt;使用する代わりに、 &lt;code&gt;FlowState class&lt;/code&gt;モジュールのメンバーとして定義するようになったことです。これは、状態として&lt;code&gt;string&lt;/code&gt;以外の型 (整数、ブール値など) を使用する場合に便利です。この実装の例は&lt;a href=&quot;https://github.com/github/codeql/blob/5b0d4ce7cb19527691a2e0df84a6004849a4a3bc/java/ql/lib/semmle/code/java/security/ArbitraryApkInstallationQuery.qll#L85&quot;&gt;ここに&lt;/a&gt;あります。&lt;/p&gt;
&lt;p&gt;この機能は CodeQL バージョン&lt;code&gt;2.13.0&lt;/code&gt;で利用できます。独自のカスタム CodeQL クエリの作成を開始したい場合は、 &lt;a href=&quot;https://codeql.github.com/docs/codeql-for-visual-studio-code/setting-up-codeql-in-visual-studio-code/#configuring-access-to-the-codeql-cli&quot;&gt;次の手順に従って CodeQL CLI と VS Code 拡張機能の使用を開始してください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-14-new-dataflow-api-for-writing-custom-codeql-queries&quot;&gt;カスタム CodeQL クエリを作成するための新しいデータフロー API という&lt;/a&gt;投稿は、最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73669</post-id></item><item><title>GitHub Copilot 8 月 10 日の更新</title><link>https://github.blog/changelog/2023-08-11-github-copilot-august-10th-update</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 11 Aug 2023 21:19:02 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-08-11-auto-draft</guid><description>&lt;p&gt;Today&amp;#039;s update brings the ability to set an allowlist for languages within the IntelliJ extension, quickly switch to an annual GitHub Copilot for Individuals plan, and the private preview of code referencing. Select languages setting within IntelliJ The previous disabledLanguages configuration is replaced with a new, more flexible languageAllowList configuration. This change allows enabling or [&amp;#8230;]&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-11-github-copilot-august-10th-update&quot;&gt;GitHub Copilot August 10th Update&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;本日のアップデートにより、IntelliJ 拡張機能内で言語のホワイトリストを設定し、年間 GitHub Copilot for Individuals プランにすぐに切り替える機能と、コード参照のプライベート プレビューが可能になります。 &lt;/p&gt;
&lt;h2 id=&quot;select-languages-setting-within-intellij&quot; id=&quot;select-languages-setting-within-intellij&quot; &gt; IntelliJ 内で言語設定を選択します&lt;a href=&quot;#select-languages-setting-within-intellij&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Select languages setting within IntelliJ&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以前の&lt;code&gt;disabledLanguages&lt;/code&gt;設定は、新しい、より柔軟な&lt;code&gt;languageAllowList&lt;/code&gt;設定に置き換えられます。この変更により、 &lt;code&gt;*&lt;/code&gt;ワイルドカードを使用してすべての言語を一度に有効または無効にすることができます。&lt;/p&gt;
&lt;h3 id=&quot;github-copilot-xml-location&quot; id=&quot;github-copilot-xml-location&quot; &gt; github-copilot.xml の場所&lt;a href=&quot;#github-copilot-xml-location&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;github-copilot.xml location&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;code&gt;github-copilot.xml&lt;/code&gt;ファイルは次の場所にあります。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;~ &lt;span class=&quot;hljs-regexp&quot;&gt;/Library/&lt;/span&gt; Application Support &lt;span class=&quot;hljs-regexp&quot;&gt;/JetBrains/&lt;/span&gt; &lt;span class=&quot;hljs-regexp&quot;&gt;/options/gi&lt;/span&gt; thub-copilot.xml
&lt;/code&gt;&lt;IDE+VERSION&gt; &lt;code&gt;~ &lt;span class=&quot;hljs-regexp&quot;&gt;/Library/&lt;/span&gt; Application Support &lt;span class=&quot;hljs-regexp&quot;&gt;/JetBrains/&lt;/span&gt; &lt;span class=&quot;hljs-regexp&quot;&gt;/options/gi&lt;/span&gt; thub-copilot.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;たとえば、 &lt;code&gt;IntelliJ&lt;/code&gt;バージョン&lt;code&gt;2022.3&lt;/code&gt;の&lt;code&gt;github-copilot.xml&lt;/code&gt;へのパスは次のとおりです。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;~ &lt;span class=&quot;hljs-regexp&quot;&gt;/Library/&lt;/span&gt; Application Support &lt;span class=&quot;hljs-regexp&quot;&gt;/JetBrains/&lt;/span&gt; IntelliJIdea2022. &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;hljs-regexp&quot;&gt;/options/gi&lt;/span&gt; thub-copilot.xml
&lt;/code&gt; &lt;/pre&gt;
&lt;h3 id=&quot;github-copilot-xml-for-enabling-all-languages-default-behavior-&quot; id=&quot;github-copilot-xml-for-enabling-all-languages-default-behavior-&quot; &gt;すべての言語を有効にするための github-copilot.xml (デフォルトの動作) &lt;a href=&quot;#github-copilot-xml-for-enabling-all-languages-default-behavior-&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;github-copilot.xml for enabling all languages (default behavior)&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;構成にワイルドカードも含まれている場合、個別の言語のオーバーライドを指定できるようになりました。 &lt;/p&gt;
&lt;h3 id=&quot;github-copilot-xml-for-disabling-all-languages-except-for-kotlin-and-java&quot; id=&quot;github-copilot-xml-for-disabling-all-languages-except-for-kotlin-and-java&quot; &gt; Kotlin と Java を除くすべての言語を無効にする github-copilot.xml &lt;a href=&quot;#github-copilot-xml-for-disabling-all-languages-except-for-kotlin-and-java&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;github-copilot.xml for disabling all languages except for Kotlin and Java&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;kotlin&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;kotlin&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;kotlin&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;kotlin&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;kotlin&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新しい非表示の&lt;code&gt;languageAllowListReadOnly&lt;/code&gt;構成プロパティが追加され、UI で&lt;code&gt;languageAllowList&lt;/code&gt;を読み取り専用にします。 &lt;/p&gt;
&lt;h3 id=&quot;github-copilot-xml-for-making-the-ui-setting-readonly-and-enabling-all-languages&quot; id=&quot;github-copilot-xml-for-making-the-ui-setting-readonly-and-enabling-all-languages&quot; &gt; github-copilot.xml : UI 設定を読み取り専用にし、すべての言語を有効にする&lt;a href=&quot;#github-copilot-xml-for-making-the-ui-setting-readonly-and-enabling-all-languages&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;github-copilot.xml for making the UI setting readonly and enabling all languages&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;languageAllowListReadOnly&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;languageAllowListReadOnly&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;languageAllowListReadOnly&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;languageAllowListReadOnly&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/&lt;span class=&quot;hljs-name&quot;&gt; &lt;code class=&quot;lang-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;github-copilot&quot;&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;languageAllowListReadOnly&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;languageAllowList&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;map&lt;/span&gt; &gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;&lt; &lt;span class=&quot;hljs-name&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&gt;&lt;/span&gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;map&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;languageAllowList&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;component&lt;/span&gt; &gt;
 &lt;span class=&quot;hljs-tag&quot;&gt;application&lt;/span&gt; &gt;
&lt;/code&gt; &lt;/pre&gt;
&lt;h2 id=&quot;an-easier-way-manage-your-copilot-for-individuals-trial-and-plan&quot; id=&quot;an-easier-way-manage-your-copilot-for-individuals-trial-and-plan&quot; &gt; Copilot for Individuals のトライアルとプランを管理する簡単な方法&lt;a href=&quot;#an-easier-way-manage-your-copilot-for-individuals-trial-and-plan&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;An easier way manage your Copilot for Individuals trial and plan&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;月単位の請求と年単位の請求を切り替える方法についてユーザーから混乱が生じていると聞きました。 GitHub Copilot プランを完全に管理していると感じていただきたいため、プラン オプション間の切り替えを簡単にするために、 &lt;code&gt;Plans and Usage&lt;/code&gt;ページを更新しました。 [Copilot プラン] セクションに進み、 &lt;code&gt;Manage subscription&lt;/code&gt;ボタンを押してオプションを確認してください。&lt;/p&gt;
&lt;p&gt;また、このページから直接 Copilot 試用版をアクティベートするオプションも追加しました。試用期間中に Copilot が合わないとわかった場合は、試用版に移行する前にすぐにキャンセルできます。有料プラン。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/2180038/259848688-6b500773-9325-4a90-be2d-b6578cb225ef.png?ssl=1&quot; alt=&quot;裁判中&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;try-out-code-referencing-private-beta-&quot; id=&quot;try-out-code-referencing-private-beta-&quot; &gt; [Private Beta] を参照してコードを試してみましょう! &lt;a href=&quot;#try-out-code-referencing-private-beta-&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Try out code referencing [Private Beta]!&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;先週、私たちは Copilot でのコード参照のプライベート ベータ版を発表しました。詳細については、&lt;a href=&quot;https://github.blog/2023-08-03-introducing-code-referencing-for-github-copilot/&quot;&gt;ブログ投稿&lt;/a&gt;にアクセスするか、今すぐ&lt;a href=&quot;https://github.co/copilot-code-referencing-waitlist&quot;&gt;順番待ちリストに参加してください&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;questions-suggestions-or-ideas-&quot; id=&quot;questions-suggestions-or-ideas-&quot; &gt;質問、提案、アイデアがありますか? &lt;a href=&quot;#questions-suggestions-or-ideas-&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Questions, suggestions, or ideas?&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/copilot&quot;&gt;Copilot コミュニティ ディスカッション&lt;/a&gt;の会話に参加してください。あなたからの御一報をお待ちしています！&lt;/p&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-11-github-copilot-august-10th-update&quot;&gt;GitHub Copilot の 8 月 10 日のアップデートの&lt;/a&gt;投稿は、最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73663</post-id></item><item><title>シークレット スキャンはオンデマンドのトークン有効性チェックをサポートします</title><link>https://github.blog/changelog/2023-08-11-secret-scanning-supports-on-demand-token-validity-checks</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 11 Aug 2023 20:09:35 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-08-11-secret-scanning-supports-on-demand-token-validity-checks</guid><description>&lt;p&gt;Secret scanning supports on-demand token validity checks&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-11-secret-scanning-supports-on-demand-token-validity-checks&quot;&gt;Secret scanning supports on-demand token validity checks&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub Advanced Security の顧客は、サポートされているパートナー パターンの有効性チェックをオンデマンドで実行できるようになり、アラート インデックス ビューにシークレットがアクティブかどうかが表示されるようになりました。これは、4 月にリリースされた&lt;a href=&quot;https://github.blog/changelog/2023-04-28-secret-scanning-now-supports-validation-checks-for-supported-partner-patterns/&quot;&gt;、サポートされているパートナー パターンの自動検証チェックを有効にする&lt;/a&gt;リリースに基づいています。&lt;/p&gt;
&lt;p&gt;リポジトリで「シークレットが有効であるかどうかを自動的に確認する」設定が有効になっている場合、ユーザーにはアラート ページに「シークレットを確認する」ボタンが表示されます。これにより、シークレットが関連パートナー プロバイダーに送信され、シークレットがアクティブかどうかが確認され、アラート ページとインデックス ページのステータスが更新されます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/courtneycl/cocotests-protected/assets/3474250/9bf336ef-3911-42a1-8c39-77852ac6dc85&quot; alt=&quot;シークレットの確認ボタンを備えた adafruit io キー アラートのスクリーンショット&quot;&gt;&lt;/p&gt;
&lt;p&gt;パートナーと協力してさらに多くのシークレットのサポートを追加するにつれて、文書化さ&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-patterns#supported-secrets&quot;&gt;れたサポートされているシークレット リスト&lt;/a&gt;の「有効性チェック」列を更新します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレットスキャンについて詳しく見る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-partner-program&quot;&gt;秘密スキャンパートナーになる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;フィードバックはありましたか?&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;コード セキュリティ コミュニティ&lt;/a&gt;でディスカッションを開く&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-11-secret-scanning-supports-on-demand-token-validity-checks&quot;&gt;「シークレット スキャンはオンデマンドのトークン有効性チェックをサポートする」という&lt;/a&gt;投稿は、最初に&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73662</post-id></item><item><title>グループ化された dependabot プル リクエストの更新を無視または無視しない</title><link>https://github.blog/changelog/2023-08-10-ignore-or-unignore-updates-for-grouped-dependabot-pull-requests</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 10 Aug 2023 20:33:41 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-08-10-ignore-or-unignore-updates-for-grouped-dependabot-pull-requests</guid><description>&lt;p&gt;Ignore or Unignore Updates for Grouped Dependabot Pull Requests&lt;/p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-10-ignore-or-unignore-updates-for-grouped-dependabot-pull-requests&quot;&gt;Ignore or Unignore Updates for Grouped Dependabot Pull Requests&lt;/a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;dependabot のグループ化されたバージョン更新機能 (現在パブリック ベータ版) を使用している場合は、グループ内の更新を無視するようにdependabot に指示できるようになりました (dependabot の個別の更新の場合と同様)。グループ化されたプル リクエストを閉じても無視条件は作成されませんが、Dependabot のコメント コマンドを使用して、グループ内の特定の更新 (特定のマイナー アップデート、特定のメジャー アップデート、または 1 つの依存関係のすべての更新) を無視するように dependabot に指示できます。&lt;/p&gt;
&lt;p&gt;グループ化されたプル リクエストで、すでに無視した特定の更新の無視をやめるように、Dependabot に指示できるようになりました。 &lt;code&gt;@dependabot unignore&lt;/code&gt;をコメント化することで、特定の範囲の更新、特定の依存関係のすべての更新、またはグループ内のすべての依存関係のすべての更新の無視を停止することを指定できます。また、Dependabot は、プル リクエストの作成に使用したすべての無視条件をプル リクエスト本文にリストするようになります。または、 &lt;code&gt;@dependabot show ignore conditions&lt;/code&gt;にコメントすることもできます&lt;dependency-name&gt;&lt;code&gt;@dependabot show ignore conditions&lt;/code&gt;と、Dependabot はその依存関係の無視条件をリストします。&lt;/p&gt;
&lt;p&gt; dependabot の無視条件とチャット コマンドの詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/working-with-dependabot/managing-pull-requests-for-dependency-updates&quot;&gt;ドキュメントを参照してください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;この&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog/changelog/2023-08-10-ignore-or-unignore-updates-for-grouped-dependabot-pull-requests&quot;&gt;投稿は、&lt;/a&gt; &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73650</post-id></item></channel></rss>