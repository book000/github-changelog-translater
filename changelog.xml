<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Tue, 27 Jun 2023 20:31:32 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.2.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>GitHub アクション – OIDC と AWS の統合に関する最新情報</title><link>https://github.blog/changelog/2023-06-27-github-actions-update-on-oidc-integration-with-aws</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 27 Jun 2023 20:31:32 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-27-auto-draft</guid><description>We have received customers reporting errors with Actions’ OIDC integration with AWS. This happens for customers who are pinned to a single intermediary thumbprint from the Certificate Authority (CA) of the Actions SSL certificate. There are two possible intermediary certificates for the Actions SSL certificate and either can be returned by our servers, requiring customers [&amp;#8230;]</description><content:encoded>&lt;p&gt;Actions の&lt;a href=&quot;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services&quot;&gt;OIDC と AWS の統合に関する&lt;/a&gt;エラーをお客様から報告を受けています。&lt;br /&gt;
これは、Actions SSL 証明書の認証局 (CA) からの単一の中間サムプリントに固定されている顧客に発生します。&lt;/p&gt;
&lt;p&gt; Actions SSL 証明書には 2 つの中間証明書があり、どちらも当社のサーバーから返される可能性があるため、顧客は両方を信頼する必要があります。これは、中間証明書が CA によって相互署名されている場合の既知の動作です。&lt;/p&gt;
&lt;p&gt; OIDC を介した AWS での認証で問題が発生しているお客様は&lt;a href=&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc.html&quot;&gt;、AWS ポータルで両方のサムプリントを信頼できるように設定する&lt;/a&gt;必要があります。&lt;br /&gt;
現時点で既知の中間サムプリントは次の 2 つです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;6938fd4d98bab03faadb97b34396831e3780aea1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;1c58a3a8518e8759bf075b76b750d4f2df264fcd&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect&quot;&gt;GitHub Actions での OIDC の使用について詳しくは、こちらをご覧ください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72718</post-id></item><item><title>GitHub モバイル上のプロジェクトへのクイック アクセス</title><link>https://github.blog/changelog/2023-06-27-quick-access-to-projects-on-github-mobile</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 27 Jun 2023 18:15:41 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-27-quick-access-to-projects-on-github-mobile</guid><description>Quick Access to Projects on GitHub Mobile</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; alt=&quot;GitHub Mobile ホーム画面でプロジェクトを表示する&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/36139667/246866941-5845c582-216d-41b3-8d11-ceadfa2a5991.png?ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;プロジェクトへのアクセスがこれまでよりも簡単かつ迅速になりました。 GitHub Mobile のホーム画面から、コラボレーションしているすべてのプロジェクトを直接表示できるようになりました。外出先でのプロジェクトの閲覧、管理、カスタマイズがかつてないほど便利になりました。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/mobile&quot;&gt;GitHub Mobile の詳細を読んで&lt;/a&gt;、改善に役立つ&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/mobile&quot;&gt;フィードバックをお送りください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72715</post-id></item><item><title>リポジトリ ルールのパブリック ベータ版の更新</title><link>https://github.blog/changelog/2023-06-27-repository-rules-public-beta-updates</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 27 Jun 2023 18:00:07 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-27-repository-rules-public-beta-updates</guid><description>Repository Rules public beta updates</description><content:encoded>&lt;p&gt;リポジトリ ルールに対する多数の機能強化、バグ修正、API の重大な変更が導入されています。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; loading=&quot;lazy&quot; class=&quot;width-fit alignnone wp-image-72709 size-full&quot; src=&quot;https://github.blog/wp-content/uploads/2023/06/GitHubScreenShot-Arc-12-06-2023-001243.png?resize=906%2C606&quot; alt=&quot;&quot; width=&quot;906&quot; height=&quot;606&quot; srcset=&quot;https://github.blog/wp-content/uploads/2023/06/GitHubScreenShot-Arc-12-06-2023-001243.png?resize=906%2C606?w=906 906w, https://github.blog/wp-content/uploads/2023/06/GitHubScreenShot-Arc-12-06-2023-001243.png?resize=906%2C606?w=300 300w, https://github.blog/wp-content/uploads/2023/06/GitHubScreenShot-Arc-12-06-2023-001243.png?resize=906%2C606?w=768 768w&quot; sizes=&quot;(max-width: 906px) 100vw, 906px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;1. UIのアップデート&lt;/strong&gt;&lt;br /&gt;
* 組織ルールセットの選択リポジトリをターゲットとするリポジトリ ピッカーを追加しました。&lt;br /&gt;
 * WebUI と git クライアントのルール違反を改善しました。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; loading=&quot;lazy&quot; class=&quot;width-fit wp-image-72710 size-full alignnone&quot; src=&quot;https://github.blog/wp-content/uploads/2023/06/GitHubScreenShot-Arc-16-06-2023-001296.gif?resize=1066%2C638&quot; alt=&quot;&quot; width=&quot;1066&quot; height=&quot;638&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;2. ルールセットバイパスの更新&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;バイパスは、プル リクエストの除外のみに制限できます。&lt;/li&gt;
&lt;li&gt;バイパス用の 1 つの UI、バイパス モードの折りたたみ、およびバイパス リストを 1 つのエクスペリエンスにまとめます。&lt;/li&gt;
&lt;li&gt;リポジトリ ロールをバイパス タイプとして使用するためのサポート&lt;/li&gt;
&lt;li&gt;統合 (ボット/アプリ) が組織でバイパス可能になりました。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; loading=&quot;lazy&quot; class=&quot;width-fit alignnone wp-image-72711 size-full&quot; src=&quot;https://github.blog/wp-content/uploads/2023/06/GitHubScreenShot-Arc-16-06-2023-001297.gif?resize=1066%2C638&quot; alt=&quot;&quot; width=&quot;1066&quot; height=&quot;638&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;strong&gt;3. APIの機能強化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作成日と更新日のフィールドを追加する&lt;/li&gt;
&lt;li&gt;権限が変更され、すべてのリポジトリ寄稿者がブランチに適用されている関連ルールを API にクエリできるようになります。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;strong&gt;4. バグ修正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;線形マージ履歴によりバイパスがブロックされる可能性がある&lt;/li&gt;
&lt;li&gt;コミットメタデータルールを使用する場合、ブランチが作成できない場合がある&lt;/li&gt;
&lt;li&gt;アプリのタグ保護が失敗する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. APIの変更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GraphQL の変更は 24 ～ 72 時間遅れます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重大な変更&lt;/strong&gt;Ruleset オブジェクトと入力から&lt;code&gt;bypass_mode&lt;/code&gt;を削除します。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重大な変更 アクター&lt;/strong&gt;が「常に」ルールセットをバイパスできるか、または「pull_request」のみバイパスできるかを示すバイパス アクターの必須フィールドとして&lt;code&gt;bypass_mode&lt;/code&gt;追加します。&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;GraphQL の重大な変更&lt;/strong&gt;&lt;code&gt;bypass_actor_ids&lt;/code&gt;リポジトリ ロールと組織管理者を受け入れることができるミューテーションの作成および更新で新しい bypass_actors オブジェクトに変更します。&lt;/li&gt;
&lt;li&gt; &lt;code&gt;repository_role_database_id&lt;/code&gt; 、 &lt;code&gt;repository_role_name&lt;/code&gt; 、および&lt;code&gt;organization_admin&lt;/code&gt;フィールドを&lt;code&gt;RepositoryRulesetBypassActor&lt;/code&gt;に追加して、バイパス アクターがロールまたは組織管理者バイパスであることを示します。&lt;/li&gt;
&lt;li data-stringify-indent=&quot;0&quot; data-stringify-border=&quot;1&quot;&gt; 「ブランチのルールを取得」REST API エンドポイントは、各ルールのルールセット ソース情報を返すようになりました。&lt;/li&gt;
&lt;li data-stringify-indent=&quot;0&quot; data-stringify-border=&quot;1&quot;&gt; 「リポジトリ ルールセットの取得」REST API エンドポイントに、リクエストを行ったユーザーがルールセットをバイパスできるかどうかを示す&lt;code&gt;current_user_can_bypass&lt;/code&gt;フィールドが追加されました。&lt;/li&gt;
&lt;li data-stringify-indent=&quot;0&quot; data-stringify-border=&quot;0&quot;&gt;ルールセットがリポジトリ上で構成されている場合、REST API 経由で返されるルールセットの&lt;code&gt;source&lt;/code&gt;フィールドには、リポジトリの名前だけでなく、 &lt;code&gt;owner/name&lt;/code&gt;構文でリポジトリが適切に含まれるようになりました。&lt;/li&gt;
&lt;li data-stringify-indent=&quot;0&quot; data-stringify-border=&quot;1&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リポジトリ ルールを改善する方法について、皆様のご意見をお待ちしています。リポジトリ ルールの&lt;a href=&quot;https://github.com/orgs/community/discussions/52652&quot;&gt;パブリック ベータ ディスカッション&lt;/a&gt;での会話に参加してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72706</post-id></item><item><title>リポジトリ内の言語が変更されると、コード スキャンのデフォルト設定が自動的に更新されます</title><link>https://github.blog/changelog/2023-06-26-code-scanning-default-setup-automatically-updates-when-the-languages-in-the-repository-change</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 26 Jun 2023 13:21:52 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-26-code-scanning-default-setup-automatically-updates-when-the-languages-in-the-repository-change</guid><description>Code scanning default setup automatically updates when the languages in the repository change</description><content:encoded>&lt;p&gt;コード スキャンのデフォルト設定は、リポジトリ内の言語が変更されたときに自動的に更新されるようになりました。&lt;/p&gt;
&lt;p&gt;デフォルト設定を使用するリポジトリが JavaScript/TypeScript、Ruby、Python、または Go 言語を含むように変更された場合、これらの言語を含むように構成が自動的に更新されます。新しい構成が失敗した場合は、リポジトリのカバレッジが失われないように、以前の構成が自動的に再開されます。リポジトリが言語を削除した場合にも、設定は自動的に更新されます。&lt;/p&gt;
&lt;p&gt;リポジトリのデフォルトのセットアップ構成は、コードのセキュリティと分析の設定ページからいつでも表示できます。さらに、 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-the-tool-status-page&quot;&gt;ツールのステータス ページを&lt;/a&gt;使用して、セットアップに関する有用な情報を表示し、失敗した言語をデバッグすることができます。&lt;/p&gt;
&lt;p&gt;デフォルトのセットアップにより、コード スキャンを簡単に開始できます。現在サポートされている言語は JavaScript/TypeScript、Python、Ruby、Go であり、リストは常に進化しています。コード スキャンのデフォルト設定の詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning-for-a-repository#configuring-code-scanning-automatically&quot;&gt;「コード スキャンを自動的に設定する」&lt;/a&gt;を参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72666</post-id></item><item><title>CodeQL の組織レベルのコード スキャンのデフォルト設定が一般利用可能になりました</title><link>https://github.blog/changelog/2023-06-23-organization-level-code-scanning-default-setup-for-codeql-is-now-generally-available</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 23 Jun 2023 19:28:22 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-23-organization-level-code-scanning-default-setup-for-codeql-is-now-generally-available</guid><description>Organization-level code scanning default setup for CodeQL is now generally available</description><content:encoded>&lt;p&gt;本日、組織レベルでのコード スキャンのデフォルト設定の有効化が一般提供されることを発表します。 &lt;br /&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;コード スキャンにより、組織の [設定] ページのすべてのデフォルト セットアップ ボタンが有効になります&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/2262535/226442176-989f6151-3f9c-46f1-a2e0-07e31d96985c.png?ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;
&lt;/p&gt;
&lt;p&gt;
コード スキャンのデフォルト設定を使用すると、ワークフロー ファイルをコミットせずに、対象となるリポジトリでのプル リクエストとプッシュの CodeQL 分析を有効にすることができます。現在、この機能は GitHub Actions を使用するリポジトリでのみ利用可能で、JavaScript/TypeScript、Python、Ruby、Go の分析をサポートしています。すぐに他の言語のサポートも追加する予定です。&lt;/p&gt;
&lt;p&gt;この機能は、GitHub Enterprise Server 3.9 のパブリック ベータ版としても利用でき、GitHub Enterprise Server 3.10 で一般公開される予定です。&lt;/p&gt;
&lt;p&gt; CodeQL と&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/rest/orgs/orgs?apiVersion=2022-11-28#enable-or-disable-a-security-feature-for-an-organization&quot;&gt;「組織のセキュリティ機能を有効または無効にする」REST API&lt;/a&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning-at-scale&quot;&gt;を使用して大規模なコード スキャンを構成する方法の詳細をご覧ください。&lt;/a&gt;&lt;br /&gt;
 &lt;a href=&quot;https://github.com/features/security&quot;&gt;GitHub の高度なセキュリティについて詳しく見る&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72659</post-id></item><item><title>GitHub コード検索を使用して、CodeQL (ベータ版) のマルチリポジトリのバリアント分析によるセキュリティ調査をサポートします。</title><link>https://github.blog/changelog/2023-06-23-use-github-code-search-to-support-security-research-with-multi-repostiory-variant-analysis-for-codeql-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 23 Jun 2023 14:49:03 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-23-use-github-code-search-to-support-security-research-with-multi-repostiory-variant-analysis-for-codeql-beta</guid><description>Use GitHub code search to support security research with multi-repostiory variant analysis for CodeQL (beta)</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://codeql.github.com/docs/codeql-for-visual-studio-code/setting-up-codeql-in-visual-studio-code/&quot;&gt;CodeQL for VS Code&lt;/a&gt;の最新リリースには、GitHub コード検索を使用したマルチリポジトリのバリアント分析のためのターゲット リポジトリのリストを作成するための新機能が含まれています。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/2023-03-09-multi-repository-variant-analysis-a-powerful-new-way-to-perform-security-research-across-github/&quot;&gt;マルチリポジトリ バリアント分析&lt;/a&gt;(MRVA) を使用すると、セキュリティ研究者は、VS Code の CodeQL 拡張機能から直接、多数のリポジトリに対して CodeQL 分析を実行でき、最も一般的なオープンソース コードベースの新しいタイプのセキュリティ脆弱性を特定できるようになります。 MRVA には、広く使用されている最大 1,000 個のパブリック GitHub リポジトリの厳選されたリストが含まれており、すぐに開始できるようになっています。単一の GitHub 組織内の最大 1,000 個のリポジトリに対して MRVA の実行をトリガーすることもできます。&lt;/p&gt;
&lt;p&gt;ただし、別のリポジトリをターゲットにしたい場合は、独自のカスタム リストを作成することもできます。カスタム リストに含める最も関連性の高いリポジトリを簡単に特定できるようにするために、CodeQL 拡張機能で GitHub 検索 API との新しい統合をリリースしました。この新機能を使用すると、ソース ファイルの内容、ファイル パス、ファイルの場所、またはその他のサポートされている検索修飾子によって、カスタム リストに表示されるリポジトリを制限できます。&lt;/p&gt;
&lt;p&gt; MRVA で GitHub コード検索を使用する方法の詳細については、CodeQL for VS Code ドキュメントの&lt;a href=&quot;https://codeql.github.com/docs/codeql-for-visual-studio-code/running-codeql-queries-at-scale-with-mrva/#using-github-code-search-to-add-repositories-to-a-custom-list&quot;&gt;「GitHub コード検索を使用してカスタム リストにリポジトリを追加する」を&lt;/a&gt;参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72655</post-id></item><item><title>GitHub の問題とプロジェクト – 6 月 22 日の更新</title><link>https://github.blog/changelog/2023-06-22-github-issues-projects-june-22nd-update</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 22 Jun 2023 19:10:27 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-22-github-issues-projects-june-22nd-update</guid><description>GitHub Issues &amp; Projects - June 22nd update</description><content:encoded>&lt;p&gt;今日の変更ログでは、コピー アンド ペーストの改善、プロジェクトの API の更新、およびタスクリストの一連の更新が行われます。 &lt;/p&gt;
&lt;h2 id=&quot;&amp;#x1f4cb;-copy-and-paste-improvements&quot; id=&quot;&amp;#x1f4cb;-copy-and-paste-improvements&quot; &gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f4cb.png&quot; alt=&quot;📋&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;コピー＆ペーストの改善&lt;a href=&quot;#&amp;#x1f4cb;-copy-and-paste-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x1f4cb; Copy and paste improvements&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;表のセルのコピーがプレーンテキストからリッチテキストに更新されました。プロジェクトからデータをコピーして貼り付けるときに、太字のインライン コードやリンクなどの豊富な書式設定が維持されるようになりました。これにより、Excel、スプレッドシート、GitHub Markdown エディターなどのアプリケーション間で作業する場合に、より適切に直接貼り付けることができます。また、カンマ区切りファイルではなくタブ区切りファイルをエクスポートするように CSV 形式を更新したり、フルネームの代わりに GitHub ハンドルをコピーしたりするなど、その他の小さな改善も行いました。 &lt;/p&gt;
&lt;h2 id=&quot;&amp;#x1f310;-updated-title-tab-in-browser&quot; id=&quot;&amp;#x1f310;-updated-title-tab-in-browser&quot; &gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f310.png&quot; alt=&quot;🌐&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;ブラウザのタイトルタブを更新しました&lt;a href=&quot;#&amp;#x1f310;-updated-title-tab-in-browser&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x1f310; Updated title tab in browser  &quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;多くの要望にお応えして、ブラウザのタブ タイトル バーを更新し、 &lt;code&gt;Issue name&lt;/code&gt; – &lt;code&gt;View name&lt;/code&gt; – &lt;code&gt;Project name&lt;/code&gt;の順に表示するようにしました。これはブックマークやソーシャル タイトルにも当てはまります。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/github-production-user-asset-6210df.s3.amazonaws.com/98360703/248004343-2a872e57-1b12-4726-8789-a5f64aff5b16.png?ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x1f485;-support-filtering-on-field-schema-in-projectsv2singleselectfield&quot; id=&quot;&amp;#x1f485;-support-filtering-on-field-schema-in-projectsv2singleselectfield&quot; &gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f485.png&quot; alt=&quot;💅&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt; &lt;code&gt;ProjectsV2SingleSelectField&lt;/code&gt;でのフィールド スキーマのフィルタリングのサポート&lt;a href=&quot;#&amp;#x1f485;-support-filtering-on-field-schema-in-projectsv2singleselectfield&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x1f485; Support filtering on field schema in &lt;code&gt;ProjectsV2SingleSelectField&lt;/code&gt;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;単一の選択フィールドのすべてのオプションを返すと、ユーザーにとって API の応答が解析しにくくなる可能性があります。 GraphQL を使用して、必要な 1 つの選択フィールドの内容のみを取得するときに、オプション配列を名前でフィルターできるようになりました。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-graphql&quot;&gt;query {
 organization(login:&quot;github&quot;) {
 projectV2(number:6051) {
 creator {
 ... on User { login }
 }
 shortDescription
 field(name:&quot;Status&quot;) {
 ... on ProjectV2SingleSelectField {
 dataType
 updatedAt
 options(names:[&quot;On hold ⏰&quot;, &quot;Done&quot;]) {
 name
 }
 }
 }
 }
 }
 }&lt;/code&gt;&lt;/pre&gt; 
&lt;h2 id=&quot;&amp;#x1f3a8;-tasklist-redesign-accessibility-improvements&quot; id=&quot;&amp;#x1f3a8;-tasklist-redesign-accessibility-improvements&quot; &gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f3a8.png&quot; alt=&quot;🎨&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;タスクリストの再設計、アクセシビリティの改善&lt;a href=&quot;#&amp;#x1f3a8;-tasklist-redesign-accessibility-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x1f3a8; Tasklist redesign, accessibility improvements&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/github-production-user-asset-6210df.s3.amazonaws.com/16281246/247984499-1ac8ca23-4feb-45be-b80b-ff33634830dc.png?ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;タスクリストが更新されました。ドラッグ アンド ドロップ機能をもう少し見つけやすくするとともに、タスクリスト内の項目間に区切り記号を追加し、その他のデザイン上の小さな調整を行いました。&lt;/p&gt;
&lt;p&gt;この再設計の一環として、タスクリストはスクリーン リーダーで読みやすくなり、矢印キーだけでなく&lt;code&gt;tab&lt;/code&gt;でも移動できるようになりました。下書きタスクを課題に変換する、担当者プレースホルダーをクリックして担当者を編集するなど、以前はアクセスできなかったアクションを、各タスクの三点メニューに移動しました。 &lt;/p&gt;
&lt;h2 id=&quot;&amp;#x2795;-bulk-add-tasklist-issues-to-projects&quot; id=&quot;&amp;#x2795;-bulk-add-tasklist-issues-to-projects&quot; &gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/2795.png&quot; alt=&quot;➕&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;タスクリストの課題をプロジェクトに一括追加する&lt;a href=&quot;#&amp;#x2795;-bulk-add-tasklist-issues-to-projects&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x2795; Bulk add tasklist issues to projects&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;ボタンをクリックするだけで、問題のタスクリストに表示された新しい項目を追加できるようになりました。 &lt;code&gt;Tracked by&lt;/code&gt;フィールドでグループ化するだけで、不足しているすべての子をプロジェクトに直接かつ自動的に追加できます。 &lt;/p&gt;
&lt;h2 id=&quot;&amp;#x2b50;-add-to-project-from-projects-side-panel&quot; id=&quot;&amp;#x2b50;-add-to-project-from-projects-side-panel&quot; &gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/2b50.png&quot; alt=&quot;⭐&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;プロジェクトのサイドパネルからプロジェクトに追加&lt;a href=&quot;#&amp;#x2b50;-add-to-project-from-projects-side-panel&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x2b50; Add to project from projects side panel&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;こんなことがあなたに起こったことはありますか？プロジェクト内の課題を管理していて、ブレッドクラム ナビゲーションを使用して編集したい課題を開いたのに、その課題がまだプロジェクトに存在していないため、プロジェクト フィールドにアクセスできない場合がありますか?! &lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f616.png&quot; alt=&quot;😖&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;心配しないでください。プロジェクトのサイド パネルで開いた課題をプロジェクトにすぐに追加できる機能が追加されました。これにより、課題のプロジェクト メタデータをより簡単に編集できるようになりました。 &lt;/p&gt;
&lt;h2 id=&quot;sparkles-bug-fixes-and-improvements&quot; id=&quot;sparkles-bug-fixes-and-improvements&quot; &gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt; ✨&lt;/g-emoji&gt;バグ修正と改善&lt;a href=&quot;#sparkles-bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt;✨&lt;/a&gt;&lt;/g-emoji&gt; &lt;a href=&quot;#sparkles-bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt;バグ修正と改善&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ボード ビューで列を非表示にしても、複数の単語を含む列名に対するエラーが発生しなくなりました&lt;/li&gt;
&lt;li&gt;行のドラッグ時のパフォーマンスの向上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;View menu&lt;/code&gt;でカスタムフィールドを編集するときの折り返し形式を修正しました。&lt;/li&gt;
&lt;li&gt;編集不可能な列に対して&lt;code&gt;Select column&lt;/code&gt;アクションが使用できるようになりました。&lt;/li&gt;
&lt;li&gt;ユーザーは一度に 50 個を超えるセルを選択できるようになりました&lt;/li&gt;
&lt;li&gt;下書きの課題タイトルの文字をすべて削除して下書きを閉じると、タイトルがすべての文字を削除する前の状態に戻ってしまうバグを修正しました&lt;/li&gt;
&lt;li&gt;プロジェクトの 1200 項目制限の解除に向けた作業の一環として。テーブルの行番号は、ビュー内の項目に対して常に昇順で表示されるようになりました。ビューから除外された項目のスペースを含む可能性のあるグローバル番号を表示するのではなく。&lt;/li&gt;
&lt;li&gt;マージされたプル リクエストが「クローズ」として表示されるタスクリストのバグが解決され、問題アイコンの表示に戻りました。プル リクエストの完全なサポートは近日中に予定されています。&lt;/li&gt;
&lt;li&gt;ビューで新しいフィールドを作成するときに、ユーザーがダイアログ外でクリックしても新しいフィールドが失われないように、キャンセル時に確認する動作を更新しました。&lt;/li&gt;
&lt;li&gt;グループ間をドラッグすると視覚的に壊れる場合の&lt;code&gt;Transfer issue&lt;/code&gt;アラートのスタイルを修正しました&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/features/issues&quot;&gt;GitHub Issues&lt;/a&gt;でプロジェクト計画に GitHub を使用する方法を確認し、&lt;a href=&quot;https://github.com/orgs/github/projects/4247/views/7&quot;&gt;ロードマップ&lt;/a&gt;の内容を確認し、&lt;a href=&quot;https://docs.github.com/issues&quot;&gt;ドキュメント&lt;/a&gt;で詳細を確認してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72649</post-id></item><item><title>EMU インナーソース制限ユーザーのプライベート ベータ版がゲスト コラボレーターになりました</title><link>https://github.blog/changelog/2023-06-21-emu-innersource-restricted-users-private-beta-is-now-guest-collaborators</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 21 Jun 2023 21:14:20 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-21-emu-innersource-restricted-users-private-beta-is-now-guest-collaborators</guid><description>EMU innersource restricted users private beta is now guest collaborators</description><content:encoded>&lt;p&gt;2022 年後半に&lt;a href=&quot;https://github.blog/changelog/2022-10-31-private-beta-introducing-innersource-restrictions-for-enterprise-managed-users/&quot;&gt;、内部ソース制限ユーザーのプライベート ベータ版&lt;/a&gt;を開始しました。これにより、エンタープライズ管理ユーザー (EMU) を持つ顧客は、明示的にメンバーではない組織の&lt;code&gt;internal&lt;/code&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/repositories/creating-and-managing-repositories/about-repositories#about-internal-repositories&quot;&gt;リポジトリ&lt;/a&gt;へのアクセスを許可すべきではないユーザーに IdP 定義のロールを割り当てることができるようになります。製品の動作をベータ版の顧客からのフィードバックに合わせて改善し、予想されるユースケースをより適切に反映するために機能名を「ゲスト コラボレーター」に更新しています。ゲスト コラボレータは、常に企業のセキュリティ境界内で完全に管理されることを目的とした IdP 定義のユーザーであるため、外部コラボレータとは異なります。&lt;/p&gt;
&lt;p&gt;既存のプライベート ベータ版の顧客は、今後数日間で「制限付きユーザー」から「ゲスト コラボレーター」への移行を反映した視覚的な変化を目にすることになります。また、「制限付きユーザー」に代わる「ゲスト コラボレーター」ロールをサポートするために、Azure AD および Okta アプリの変更も提出しました。ゲスト コラボレーター機能はプライベート ベータ版のままですが、組織のメンバーシップを付与せずにゲスト コラボレーターを個別のリポジトリに選択的に追加する機能を追加する今後のパブリック ベータ リリースに向けて取り組んでいます。パブリック ベータ リリースでは、重大な変更を加えずに既存のアプリ統合を移行する方法についての詳細情報が提供される予定です。&lt;/p&gt;
&lt;p&gt;この機能の既存の機能をテストしたいお客様向けに、プライベート ベータ登録を引き続き受け付けています。詳細については、アカウント チームまたは&lt;a href=&quot;https://github.com/enterprise/contact&quot;&gt;営業チームにお問い合わせください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72618</post-id></item><item><title>プル リクエストによるマージ キューが GitHub Merge Queue ボットに関連付けられるようになりました</title><link>https://github.blog/changelog/2023-06-21-merges-by-pull-request-merge-queue-now-attributed-to-the-github-merge-queue-bot</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 21 Jun 2023 17:35:30 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-21-merges-by-pull-request-merge-queue-now-attributed-to-the-github-merge-queue-bot</guid><description>Merges by pull request merge queue now attributed to the GitHub Merge Queue bot</description><content:encoded>&lt;p&gt;プル リクエストのマージ キューによるマージが常に GitHub Merge Queue ボット ( &lt;code&gt;github-merge-queue[bot]&lt;/code&gt; ) に起因するようにする修正をリリースしました。この変更はキューによる新しいマージに適用され、&lt;a href=&quot;https://github.blog/changelog/2023-05-31-view-repository-pushes-on-the-new-activity-view/&quot;&gt;アクティビティ ビュー&lt;/a&gt;と&lt;code&gt;push&lt;/code&gt; Webhook イベントに表示されます。&lt;/p&gt;
&lt;p&gt;我々はあなたから聞きたい！&lt;a href=&quot;https://gh.io/mq-merge-attribution-feedback&quot;&gt;ご質問やフィードバックが&lt;/a&gt;ありましたらお知らせください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72614</post-id></item><item><title>GitHub でホストされているアクション用のより大きなランナーが一般公開されました</title><link>https://github.blog/changelog/2023-06-21-github-hosted-larger-runners-for-actions-are-generally-available</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 21 Jun 2023 17:04:53 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-21-github-hosted-larger-runners-for-actions-are-generally-available</guid><description>GitHub-hosted larger runners for Actions are generally available</description><content:encoded>&lt;p&gt;本日、GitHub Actions のより大規模なホスト ランナーが有料の Team および Enterprise Cloud プランで一般提供されることを発表します。この機能は&lt;a href=&quot;https://github.blog/2022-09-01-github-actions-introducing-the-new-larger-github-hosted-runners-beta/&quot;&gt;2022 年 9 月&lt;/a&gt;からパブリック ベータ版として提供されており、お客様は実稼働環境でこの機能を使用して、CI/CD ジョブをより高速かつ柔軟に実行しています。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/30297258/247629415-929d41f3-8a4f-4629-a96b-d18143a33e56.png?w=800&amp;#038;ssl=1&quot; alt=&quot;より大きなランナーマシンのサイズ&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;新しい大型ランナーは、次の新機能を提供します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;より大規模な Linux および Windows マシン:&lt;/strong&gt;これにより、開発チームは、オンデマンド CI/CD ジョブやその他のワークフローをサポートするために、最大 64 vCPU、256 GB の RAM、2 TB SSD ストレージのマシン サイズを使用できるようになります。大規模なランナーは、プライベート リポジトリとパブリック リポジトリの両方でジョブの分単位で課金され、含まれる分は消費しません。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;リソースへの安全なアクセスを可能にする静的 IP アドレス:&lt;/strong&gt; Enterprise Cloud の顧客は、静的 IP アドレス範囲を大規模なランナー インスタンスに割り当てるかどうかを選択できるようになりました。これにより、内部システムへのアクセスの許可リストに追加できる固定 IP アドレス範囲が提供されます。これを GitHub の IP 許可リストと組み合わせて使用​​して、ホストされたアクション ランナーと IP 許可リストを同時に有効にすることもできます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;より大きなランナーへのアクセスと同時実行の管理制御:&lt;/strong&gt;管理者は、誰がより大きなサイズのマシンにどのような同時実行でアクセスできるかを決定し、支出に対するガードレールを提供できます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大型ランナーのジョブ分あたりの価格については、 &lt;a href=&quot;https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions&quot;&gt;現在の価格ドキュメント&lt;/a&gt;を確認することで確認できます。また、この機能の詳細については、&lt;a href=&quot;https://docs.github.com/en/actions/using-github-hosted-runners/about-larger-runners&quot;&gt;ドキュメント&lt;/a&gt;を詳しく調べることで確認できます。&lt;/p&gt;
&lt;p&gt;このエクスペリエンスを向上させるためのフィードバックがある場合は、必ず&lt;a href=&quot;https://github.com/orgs/community/discussions/58739&quot;&gt;GitHub コミュニティ ディスカッション&lt;/a&gt;に投稿してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72609</post-id></item></channel></rss>