<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Sat, 14 Jan 2023 00:51:35 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.1.1</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>セキュリティの概要のチーム フィルターに、書き込み権限を持つリポジトリが含まれるようになりました</title><link>https://github.blog/changelog/2023-01-13-security-overviews-team-filter-now-includes-repositories-with-write-privileges</link><dc:creator>Kevin Duck</dc:creator><pubDate>Sat, 14 Jan 2023 00:51:35 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-01-13-security-overviews-team-filter-now-includes-repositories-with-write-privileges</guid><description>Security overview&apos;s team filter now includes repositories with write privileges</description><content:encoded>&lt;p&gt;セキュリティの概要で、[チーム] ドロップダウンからチームを選択するか、セキュリティ リスク ビューまたはセキュリティ カバレッジ ビューのいずれかでチームごとにフィルター処理すると、そのチームが&lt;code&gt;write&lt;/code&gt;権限を持つリポジトリが結果に含まれます。以前は、チームが&lt;code&gt;admin&lt;/code&gt;権限を持っているか、セキュリティ アラートへのアクセスが許可されているリポジトリのみが結果に含まれていました。&lt;/p&gt;
&lt;p&gt;これは GitHub.com に出荷されており、GitHub Enterprise Server 3.9 で利用できるようになります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/security-overview/filtering-alerts-in-the-security-overview#filter-by-team&quot;&gt;チーム フィルターの詳細を&lt;/a&gt;&lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;確認し、フィードバックをお送りください&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/features/security&quot;&gt;GitHub の高度なセキュリティについて詳しく知る&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">69540</post-id></item><item><title>GitHub の問題 – 1 月 12 日の更新</title><link>https://github.blog/changelog/2023-01-12-github-issues-january-12th-update</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 12 Jan 2023 18:26:07 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-01-12-github-issues-january-12th-update</guid><description>GitHub Issues - January 12th update</description><content:encoded>&lt;p&gt;今日の変更ログでは、Issue とプル リクエストのタイムライン、プライベート リポジトリのIssue フォームなどにプロジェクト イベントが追加されました。 &lt;/p&gt;
&lt;h2 id=&quot;&amp;#x1f440;-project-events-in-item-timelines-public-beta&quot; id=&quot;&amp;#x1f440;-project-events-in-item-timelines-public-beta&quot; &gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f440.png&quot; alt=&quot;👀&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;アイテム タイムラインでのプロジェクト イベント (パブリック ベータ) &lt;a href=&quot;#&amp;#x1f440;-project-events-in-item-timelines-public-beta&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x1f440; Project events in item timelines (Public Beta)&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;プロジェクトからの問題またはプル リクエストの追加と削除、またはプロジェクト内の問題またはプル リクエストのステータスの変更に関連するアクションは、既存のイベントと一緒にアイテム タイムラインの一部として含まれるようになりました。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;画像&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/7584089/211565457-62a713e9-591b-404e-8099-b94e6ca919da.png?w=966&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x1f4dd;-issue-forms-for-private-repositories-public-beta&quot; id=&quot;&amp;#x1f4dd;-issue-forms-for-private-repositories-public-beta&quot; &gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f4dd.png&quot; alt=&quot;📝&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;プライベート リポジトリの発行フォーム (パブリック ベータ) &lt;a href=&quot;#&amp;#x1f4dd;-issue-forms-for-private-repositories-public-beta&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x1f4dd; Issue forms for private repositories (Public Beta)&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2021-06-23-issues-forms-beta-for-public-repositories/&quot;&gt;以前&lt;/a&gt;は、パブリック リポジトリの課題フォームをリリースし、メンテナーが有益な情報についてより多くのコンテキストを提供できるようにしました。&lt;/p&gt;
&lt;p&gt;本日、プライベート リポジトリの課題フォームをリリースします。プライベート リポジトリの課題フォームは、パブリック リポジトリと同じ&lt;a href=&quot;https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/syntax-for-issue-forms&quot;&gt;YAML 構文&lt;/a&gt;を使用しますが、必須フィールドをサポートしていないため、課題作成プロセスを合理化できます。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;画像&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/7584089/211566132-d2fcd4b9-1577-4073-9db6-12b48a637762.png?w=957&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x2728;-bug-fixes-and-improvements&quot; id=&quot;&amp;#x2728;-bug-fixes-and-improvements&quot; &gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/2728.png&quot; alt=&quot;✨&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;バグ修正と改善&lt;a href=&quot;#&amp;#x2728;-bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x2728; Bug fixes and improvements&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;プロジェクトを閉じると、関連するすべてのワークフローが無効になるという注記を追加しました&lt;/li&gt;
&lt;li&gt;未保存のビュー インジケーターにツールチップ テキストを追加しました&lt;/li&gt;
&lt;li&gt;プロジェクト設定ページのアクセシビリティの改善&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GitHub の&lt;a href=&quot;http://github.com/features/issues&quot;&gt;問題&lt;/a&gt;でプロジェクト計画に GitHub を使用する方法を確認し、&lt;a href=&quot;https://github.com/orgs/github/projects/4247/views/7&quot;&gt;ロードマップ&lt;/a&gt;の内容を確認し、&lt;a href=&quot;https://docs.github.com/issues&quot;&gt;ドキュメント&lt;/a&gt;で詳細を確認してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">69480</post-id></item><item><title>Dependabot プル リクエストが非アクティブのために一時停止する</title><link>https://github.blog/changelog/2023-01-12-dependabot-pull-requests-pause-for-inactivity</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 12 Jan 2023 17:56:20 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-01-12-dependabot-pull-requests-pause-for-inactivity</guid><description>Dependabot pull requests pause for inactivity</description><content:encoded>&lt;h3 id=&quot;whats-new&quot; id=&quot;whats-new&quot; &gt;新着情報？ &lt;a href=&quot;#whats-new&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What&amp;#039;s new?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;今日から、Dependabot は、90 日以上 Dependabot とのマージ、閉鎖、またはその他の操作を行っていない場合、自動化されたプル リクエスト アクティビティを一時停止します。準備ができたらアクティビティを再開するには、Dependabot と対話するだけです。&lt;/p&gt;
&lt;p&gt;この変更により、Dependabot は関心のあるリポジトリにより集中できるようになります。&lt;/p&gt;
&lt;h3 id=&quot;when-will-dependabot-become-paused&quot; id=&quot;when-will-dependabot-become-paused&quot; &gt; Dependabot はいつ一時停止しますか? &lt;a href=&quot;#when-will-dependabot-become-paused&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;When will Dependabot become paused?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;この変更は、Dependabot プル リクエストが存在するが変更されていないリポジトリにのみ適用されます。 Dependabot プル リクエストが開かれていない場合、Dependabot が一時停止することはありません。&lt;/p&gt;
&lt;p&gt;少なくとも 90 日間、次の条件を満たす必要があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Dependabot PR がマージされていない&lt;/li&gt;
&lt;li&gt;Dependabot 構成ファイルに変更が加えられていない&lt;/li&gt;
&lt;li&gt;@dependabot のコメント操作は実行されていません&lt;/li&gt;
&lt;li&gt;ユーザーが Dependabot の PR をクローズしていない&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;90 日間のウィンドウの前に少なくとも 1 つの Dependabot PR を受け取っている&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;90 日間のウィンドウの終わりに少なくとも 1 つの Dependabot PR が開かれている&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;この期間全体で Dependabot を有効にしていた&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;how-will-dependabot-let-me-know&quot; id=&quot;how-will-dependabot-let-me-know&quot; &gt;Dependabot はどのように通知しますか? &lt;a href=&quot;#how-will-dependabot-let-me-know&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How will Dependabot let me know?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; Dependabot は、開いているすべての Dependabot プル リクエストの本文に通知を追加し、 &lt;code&gt;dependabot-paused&lt;/code&gt;ラベルをそれらに追加します。また、Dependabot は、リポジトリ設定ページ (「Dependabot」の下) の UI と Dependabot アラート ページ (Dependabot のセキュリティ更新が影響を受ける場合) にバナー通知を追加します。&lt;/p&gt;
&lt;h3 id=&quot;who-can-use-this-feature&quot; id=&quot;who-can-use-this-feature&quot; &gt;この機能を使用できるのは誰ですか? &lt;a href=&quot;#who-can-use-this-feature&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Who can use this feature?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;この変更は、Dependabot アラートまたは後続の通知には適用され&lt;em&gt;ません&lt;/em&gt;。そのため、自動化された Dependabot バージョン アップデートまたはセキュリティ アップデートがあり、しばらくの間これらのプル リクエストとやり取りしていないリポジトリのみが影響を受けます。&lt;/p&gt;
&lt;p&gt;この変更は本日からロールアウトが開始され、2023 年 1 月まで拡張され、個人および無料プランとチーム プランを使用する組織が所有するすべてのリポジトリが含まれるようになります。&lt;/p&gt;
&lt;p&gt;後で、GitHub Enterprise Cloud および GitHub Enterprise Server のお客様にロールアウトされます。この改善により、自己ホスト型 GitHub Actions ランナーの効率が向上するという追加の利点があります。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/2023-01-12-a-smarter-quieter-dependabot&quot;&gt;この変更の詳細については、こちらを&lt;/a&gt;ご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">69476</post-id></item><item><title>2FA セットアップ後の 2 要素検証</title><link>https://github.blog/changelog/2023-01-11-second-factor-validation-after-2fa-setup</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 11 Jan 2023 19:20:33 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-01-11-second-factor-validation-after-2fa-setup</guid><description>Second-factor validation after 2FA setup</description><content:encoded>&lt;p&gt;2 要素認証を設定した GitHub.com ユーザーには、28 日後にプロンプ​​トが表示され、2 要素認証を実行して第 2 要素の設定を確認するよう求められます。このプロンプトは、認証アプリケーション (TOTP アプリ) の構成ミスによるアカウントのロックアウトを回避するのに役立ちます。特に、セットアップ中に検証した後に TOTP シークレットを保存できなかった場合に役立ちます。&lt;/p&gt;
&lt;p&gt;このプロンプトは、sudo プロンプトの一部として 2FA をまだ実行していないか、別のデバイスでサインインしていない場合に、既存のセッションに表示されます。 2FA を実行できない場合は、2FA セットアップをリセットできるショートカットが表示されます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/1666363/211381828-ce246f95-a714-4bc2-8a9b-6f991b648334.png?ssl=1&quot; alt=&quot;画像&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;組織または GitHub 自体によって 2FA を有効にする必要があるユーザーを含め、2FA を有効にするすべてのユーザーがこのプロンプトの対象になります。&lt;/p&gt;
&lt;p&gt; 2 要素認証の詳細については、「 &lt;a href=&quot;https://docs.github.com/en/authentication/securing-your-account-with-two-factor-authentication-2fa/configuring-two-factor-authentication&quot;&gt;2 要素認証の構成&lt;/a&gt;」を参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">69462</post-id></item><item><title>GitHub Actions: OpenID Connect トークンは、詳細なクラウド アクセスを構成するためのより多くのクレームをサポートするようになりました</title><link>https://github.blog/changelog/2023-01-10-github-actions-openid-connect-token-now-supports-more-claims-for-configuring-granular-cloud-access</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 11 Jan 2023 00:06:14 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-01-10-github-actions-openid-connect-token-now-supports-more-claims-for-configuring-granular-cloud-access</guid><description>GitHub Actions&amp;#058; OpenID Connect token now supports more claims for configuring granular cloud access</description><content:encoded>&lt;p&gt;GitHub Actions での OpenID Connect (OIDC) サポートにより、デプロイごとに自動的にローテーションされる有効期間の短いトークンを使用して、安全なクラウド デプロイが可能になります。&lt;br /&gt;
各&lt;a href=&quot;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#understanding-the-oidc-token&quot;&gt;OIDC トークン&lt;/a&gt;には、オーディエンス、発行者、サブジェクトなどの標準クレームと、トークンを生成したワークフロー ジョブを一意に定義するその他の多くのカスタム クレームが含まれます。これらのクレームを使用して、詳細な信頼ポリシーを定義し、特定のクラウド ロールとリソースへのアクセスを制御できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;actor_id&lt;/code&gt;内でより多くの&lt;code&gt;repository_owner_id&lt;/code&gt; &lt;code&gt;repository_id&lt;/code&gt;をサポートするようになりました。&lt;br /&gt;
 &lt;code&gt;workflow_ref&lt;/code&gt; 、 &lt;code&gt;workflow_sha&lt;/code&gt;および&lt;code&gt;job_workflow_sha&lt;/code&gt; – ジョブが再利用可能なワークフローを参照している場合でも、ワークフロー ジョブのソースを一意に検証するのに役立ちます。
&lt;/li&gt;
&lt;li&gt;また、これらの新しい属性を&lt;a href=&quot;https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables&quot;&gt;デフォルトの環境変数&lt;/a&gt;として追加し、 &lt;a href=&quot;https://docs.github.com/en/actions/learn-github-actions/contexts#github-context&quot;&gt;github コンテキスト&lt;/a&gt;にも追加します。
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの変更により、開発者は OpenID Connect を使用してより高度なアクセス ポリシーを定義し、GitHub Actions を使用してより安全なクラウド デプロイを大規模に行うことができます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments&quot;&gt;OpenID Connect を使用して GitHub ワークフローを強化するセキュリティの&lt;/a&gt;詳細については、こちらをご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">69426</post-id></item><item><title>パッケージ: GitHub Packages RubyGems レジストリで、きめ細かい権限と組織レベルの公開が利用できるようになりました</title><link>https://github.blog/changelog/2023-01-10-packages-fine-grained-permissions-and-organization-level-publishing-are-now-available-for-the-github-packages-rubygems-registry</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 10 Jan 2023 19:50:28 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-01-10-packages-fine-grained-permissions-and-organization-level-publishing-are-now-available-for-the-github-packages-rubygems-registry</guid><description>Packages&amp;#058; Fine-grained permissions and organization-level publishing are now available for the GitHub Packages RubyGems registry</description><content:encoded>&lt;p&gt;GitHub Packages RubyGems レジストリが新しいアーキテクチャで実行されるようになり、優れた新機能のロックが解除されました。 &lt;/p&gt;
&lt;h2 id=&quot;publishing-packages-at-organization-level-with-github-packages&quot; id=&quot;publishing-packages-at-organization-level-with-github-packages&quot; &gt; GitHub Packages を使用して組織レベルでパッケージを公開する&lt;a href=&quot;#publishing-packages-at-organization-level-with-github-packages&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Publishing packages at organization level with GitHub Packages&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以前は、GitHub Packages に公開された RubyGems パッケージは、それらのリポジトリに密接に結合されていました。パッケージを組織レベルで公開できるようになりました。必要に応じて、いつでもリポジトリにリンクできます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/packages/learn-github-packages/connecting-a-repository-to-a-package&quot;&gt;リポジトリをパッケージに接続する&lt;/a&gt;方法については、こちらをご覧ください。 &lt;/p&gt;
&lt;h2 id=&quot;fine-grained-permissions-for-rubygems-packages-published-to-github-packages&quot; id=&quot;fine-grained-permissions-for-rubygems-packages-published-to-github-packages&quot; &gt; GitHub Packages に公開された RubyGems パッケージのきめ細かなパーミッション&lt;a href=&quot;#fine-grained-permissions-for-rubygems-packages-published-to-github-packages&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Fine grained permissions for RubyGems packages published to GitHub Packages&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;パッケージの設定ページで Actions および Codespaces リポジトリへのアクセスを構成したり、パッケージにアクセスするように他のユーザーを招待したりできるようになりました。さらに、GitHub Packages に公開された RubyGems パッケージは、リンクされたリポジトリからすべてのアクセス許可を自動的に継承するように引き続き構成できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/packages/learn-github-packages/configuring-a-packages-access-control-and-visibility&quot;&gt;パッケージのアクセス制御の構成&lt;/a&gt;について詳しくは、こちらをご覧ください。&lt;/p&gt;
&lt;h2 id=&quot;internal-visibility&quot; id=&quot;internal-visibility&quot; &gt;内部可視性&lt;a href=&quot;#internal-visibility&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Internal visibility&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;公開と非公開に加えて、パッケージの可視性を内部にも設定できるようになりました。その後、GitHub 組織のすべてのメンバーに表示されます。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;これらの新機能は、github.com のすべてのユーザーが利用できるようになりました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-rubygems-registry&quot;&gt;GitHub RubyGems レジストリの操作&lt;/a&gt;について詳しく読む&lt;/p&gt;
&lt;p&gt;GitHub の&lt;a href=&quot;https://github.com/community/community/discussions/categories/actions-and-packages&quot;&gt;パブリック コミュニティ ディスカッション&lt;/a&gt;でのこれらの新しい変更について、フィードバックをお寄せください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">69408</post-id></item><item><title>企業や組織は重要なお知らせを表示できます</title><link>https://github.blog/changelog/2023-01-10-enterprises-and-organizations-can-display-critical-announcements</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 10 Jan 2023 19:01:52 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-01-10-enterprises-and-organizations-can-display-critical-announcements</guid><description>Enterprises and organizations can display critical announcements</description><content:encoded>&lt;p&gt;GitHub Enterprise Cloud 管理者は、企業または特定の組織のメンバーに重要なお知らせを表示できるようになりました。 GitHub Enterprise Server にはすでにこの機能があります。&lt;/p&gt;
&lt;p&gt;この機能強化により、エンタープライズ クラウド管理者は、企業または特定の組織のすべてのページに重要なメッセージを表示できます。たとえば、リリースのカットオフ日や今後の権限の変更を発表できます。次に示すように、お知らせはページの上部に表示されます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/1767415/210844773-1be97cb6-734d-4546-9d67-3da486c81ac3.png?ssl=1&quot; alt=&quot;GitHub でアナウンス メッセージがどのように表示されるかを示す画像&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;お知らせを公開するには、企業の所有者または組織の所有者である必要があります。エンタープライズまたは組織の設定を開き、[&lt;strong&gt;お知らせ&lt;/strong&gt;] を選択します。アナウンス メッセージ、アナウンスを自動的に非公開にするオプションの有効期限を入力し、ユーザーがアナウンスを表示したときにそのアナウンスを閉じることを許可するかどうかを選択します。 [&lt;strong&gt;お知らせの公開]&lt;/strong&gt;をクリックして公開します。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/1767415/210845434-fd186c4c-10ae-4e1f-b5a7-f3d4c7e6375d.png?ssl=1&quot; alt=&quot;アナウンスの構成を示すイメージ&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;最高のユーザー エクスペリエンスを実現するために、重要なお知らせのみを公開し、メッセージを簡潔にして各ページの表示スペースを少なくすることをお勧めします。メッセージを&lt;a href=&quot;https://github.com/features/discussions&quot;&gt;ディスカッション&lt;/a&gt;にリンクして、コンテキスト、ガイダンス、オプションの会話を増やします。重要ではないメッセージや拡張アナウンスについては、代わりにディスカッションを使用してください。&lt;/p&gt;
&lt;p&gt;詳細については、GitHub Enterprise Cloud ドキュメントの&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/user-management/managing-users-in-your-enterprise/customizing-user-messages-for-your-enterprise&quot;&gt;「エンタープライズ向けのユーザー メッセージのカスタマイズ」を参照してください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">69407</post-id></item><item><title>GitHub モバイルでの実績</title><link>https://github.blog/changelog/2023-01-10-achievements-on-github-mobile</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 10 Jan 2023 16:47:29 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-01-10-achievements-on-github-mobile</guid><description>Achievements on GitHub Mobile</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/92610393/210442642-75b83b62-baac-45c1-a699-fbbcd4173965.png?ssl=1&quot; alt=&quot;大きなテキストの実績と 5 つの実績画像を含むバナー画像。&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;アチーブメントは、プル リクエストのマージ、ディスカッションへの回答、ユーザーのスポンサーなど、GitHub でのマイルストーンを祝い、紹介します。 GitHub Mobile のプロファイルから実績を表示して共有します。 &lt;/p&gt;
&lt;div style=&quot;width: 640px;&quot; class=&quot;wp-video&quot;&gt;&lt;!--[if lt IE 9]&gt;&lt;script&gt;document.createElement(&apos;video&apos;);&lt;/script&gt;&lt;![endif]--&gt;
&lt;video class=&quot;wp-video-shortcode js-viewport-aware-video events-none&quot; id=&quot;video-69384-1&quot; width=&quot;640&quot; height=&quot;360&quot; loop=&quot;1&quot; autoplay=&quot;1&quot; preload=&quot;metadata&quot; muted=&quot;1&quot;&gt;&lt;source type=&quot;video/mp4&quot; src=&quot;https://user-images.githubusercontent.com/92610393/211617557-3aa7536e-581e-4de2-b842-4d0cb098827f.mp4?_=1&quot; /&gt; &lt;a href=&quot;https://user-images.githubusercontent.com/92610393/211617557-3aa7536e-581e-4de2-b842-4d0cb098827f.mp4&quot;&gt;https://user-images.githubusercontent.com/92610393/211617557-3aa7536e-581e-4de2-b842-4d0cb098827f.mp4&lt;/a&gt;&lt;/video&gt;&lt;/div&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/mobile&quot;&gt;GitHub Mobile の詳細をお読みになり&lt;/a&gt;&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/mobile&quot;&gt;、フィードバックを送信&lt;/a&gt;して改善に役立ててください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">69384</post-id></item><item><title>GitHub Actions – ワークフローでの構成変数のサポート</title><link>https://github.blog/changelog/2023-01-10-github-actions-support-for-configuration-variables-in-workflows</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 10 Jan 2023 13:29:49 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-01-10-github-actions-support-for-configuration-variables-in-workflows</guid><description>GitHub Actions - Support for configuration variables in workflows </description><content:encoded>&lt;p&gt;本日、GitHub Actions に設定変数のサポートを追加します&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8&quot; alias=&quot;tada&quot;&gt; 🎉&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;以前は、ワークフローで値を再利用するために、この構成データを暗号化されたシークレットとして保存する必要がありました。&lt;br /&gt;
この方法は非常に安全ですが、コンパイラ フラグ、ユーザー名、サーバー名などの機密性の低い構成データを簡単に保存および取得することはできませんでした。&lt;/p&gt;
&lt;p&gt;構成変数を使用すると、非機密データを、リポジトリまたは組織内のワークフロー全体で再利用できるプレーン テキスト変数として保存できます。&lt;br /&gt;
要件に基づいて、組織、リポジトリ、または環境レベルで変数を定義できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/25578249/211553202-0afb68d0-7f5a-49be-a3bd-dc53ad2db1e9.png?ssl=1&quot; alt=&quot;構成変数&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;新しい&lt;a href=&quot;https://docs.github.com/en/actions/learn-github-actions/contexts#vars-context&quot;&gt;vars context&lt;/a&gt;を使用して、ワークフロー全体で構成変数にアクセスできます。&lt;br /&gt;
次の例は、構成変数をワークフローで使用する方法を示しています。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-yml&quot;&gt;jobs:
 display-variables:
 runs-on: ${{ vars.RUNNER }}
 steps:
 - name: Use variables
 run: |
 echo &quot;Repository variable : ${{ vars.REPOSITORY_VAR }}&quot;
 echo &quot;Organization variable : ${{ vars.ORGANIZATION_VAR }}&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注: 変数機能はパブリック ベータ版です&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/actions/learn-github-actions/variables#defining-configuration-variables-for-multiple-workflows&quot;&gt;構成変数の詳細&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">69365</post-id></item><item><title>GitHub アクション – 組織全体で必要なワークフローのパブリック ベータ版のサポート</title><link>https://github.blog/changelog/2023-01-10-github-actions-support-for-organization-wide-required-workflows-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 10 Jan 2023 12:44:57 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-01-10-github-actions-support-for-organization-wide-required-workflows-public-beta</guid><description>GitHub Actions - Support for organization-wide required workflows public beta</description><content:encoded>&lt;p&gt;本日、GitHub Actions で必要なワークフローのパブリック ベータ版を発表します。 &lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8&quot; alias=&quot;tada&quot;&gt; 🎉&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;必要なワークフローにより、DevOps チームは、各リポジトリを個別に構成する必要なく、組織内の多くのソース コード リポジトリにわたって標準の CI/CD プラクティスを定義して適用できます。組織管理者は、組織内のすべてまたは選択したリポジトリで実行するために必要なワークフローを構成できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/25578249/211551996-c32d315d-e9a5-47fd-b74b-7263773ce77a.png?ssl=1&quot; alt=&quot;組織レベルで必要なワークフロー&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;必要なワークフローは、デフォルト ブランチで開かれたすべてのプル リクエストの必要なステータス チェックとしてトリガーされます。これにより、必要なワークフローが成功するまで、プル リクエストをマージする機能がブロックされます。&lt;br /&gt;
リポジトリ レベルの個々の開発チームは、リポジトリに適用された必要なワークフローを確認できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/25578249/211552010-d7aa7c25-f204-4c20-a04b-9c53f74ec52e.png?ssl=1&quot; alt=&quot;リポジトリで実行される必要なワークフロー&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;必要なワークフローは、CI/CD 構成コードの重複を減らすだけでなく、次のユース ケースを持つ企業にも役立ちます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;セキュリティ: 外部の脆弱性スコアリングまたは動的分析ツールを呼び出します。&lt;/li&gt;
&lt;li&gt;コンプライアンス: すべてのコードが企業の品質基準を満たしていることを確認します。&lt;/li&gt;
&lt;li&gt;デプロイ: コードが標準的な方法で継続的にデプロイされるようにします。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com//en/actions/using-workflows/required-workflows&quot;&gt;必要なワークフローの詳細&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">69364</post-id></item></channel></rss>