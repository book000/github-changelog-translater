<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>Changelogs Archive - The GitHub Blog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Fri, 26 Apr 2024 17:58:47 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.5.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Changelogs Archive - The GitHub Blog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>CodeQL 2.17.1: C#、新しい Ruby クエリ、その他の Java モデル用の AI を活用した自動修正</title><link>https://github.blog/changelog/2024-04-26-codeql-2-17-1-ai-powered-autofixes-for-c-new-ruby-queries-and-more-java-models</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 26 Apr 2024 15:03:48 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-26-codeql-2-17-1-ai-powered-autofixes-for-c-new-ruby-queries-and-more-java-models</guid><description>&lt;p&gt;CodeQL 2.17.1: AI-powered autofixes for C#, new Ruby queries and more Java models&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-26-codeql-2-17-1-ai-powered-autofixes-for-c-new-ruby-queries-and-more-java-models&quot;&gt;CodeQL 2.17.1: AI-powered autofixes for C#, new Ruby queries and more Java models&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;CodeQL は、GitHub コード スキャンを強化する静的分析エンジンです。 CodeQL バージョン&lt;code&gt;2.17.1&lt;/code&gt;がリリースされ、GitHub.com でコード スキャン ユーザーに公開されました。&lt;/p&gt;
&lt;p&gt; CodeQL コード スキャンでは、Copilot を利用したプル リクエストの C# アラートの&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/managing-code-scanning-alerts/about-autofix-for-codeql-code-scanning&quot;&gt;自動修正提案が&lt;/a&gt;サポートされるようになりました。これは、すべての GitHub Advanced Security 顧客のすべてのプライベート リポジトリに対して自動的に有効になります。 Autofix は初めて、言語のほぼすべてのセキュリティ クエリをカバーし、デフォルト スイートと拡張スイートから&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/managing-your-code-scanning-configuration/csharp-built-in-queries&quot;&gt;C# でサポートされる 49 のクエリをサポートします&lt;/a&gt;。質問やフィードバックについては&lt;a href=&quot;https://gh.io/autofix-feedback&quot;&gt;公開ディスカッションを&lt;/a&gt;ご利用ください。&lt;/p&gt;
&lt;p&gt;このリリースには次のものも含まれています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.1/#java-1&quot;&gt;Java の適用範囲を向上させる&lt;/a&gt;ために、13,000 を超える新しい&lt;a href=&quot;https://codeql.github.com/docs/codeql-language-guides/customizing-library-models-for-java-and-kotlin/&quot;&gt;モデル&lt;/a&gt;が追加されました。このモデルにより、アラートが導入されたり、削除されたりする可能性があります。&lt;/li&gt;
&lt;li&gt; Ruby に&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.1/#ruby&quot;&gt;2 つの新しいクエリが追加されました&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt; &lt;code&gt;rb/insecure-mass-assignment&lt;/code&gt;任意のパラメータを受け入れる一括割り当て操作のインスタンスを検出します。&lt;/li&gt;
&lt;li&gt; &lt;code&gt;rb/csrf-protection-not-enabled&lt;/code&gt; Ruby on Rails コントローラーでクロスサイト リクエスト フォージェリ保護が有効になっていないケースを検出します&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PathGraph&lt;/code&gt;を使用して作成された結果は&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.1/#dataflow-analysis&quot;&gt;、各フロー ステップで使用されるモデルに関する情報を生成するようになり&lt;/a&gt;ました。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;変更の完全なリストについては、&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.1/&quot;&gt;バージョン 2.17.1&lt;/a&gt;の完全な変更ログを参照してください。すべての新機能は GHES 3.13 にも含まれます。 GHES 3.12 以前のユーザーは&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.12/admin/code-security/managing-github-advanced-security-for-your-enterprise/configuring-code-scanning-for-your-appliance#configuring-codeql-analysis-on-a-server-without-internet-access&quot;&gt;、CodeQL バージョンをアップグレード&lt;/a&gt;できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-26-codeql-2-17-1-ai-powered-autofixes-for-c-new-ruby-queries-and-more-java-models&quot;&gt;CodeQL 2.17.1: C# 用の AI を活用した自動修正、新しい Ruby クエリ、その他の Java モデルの&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77690</post-id></item><item><title>セキュリティ製品のエンタープライズ対応トレンド (パブリック ベータ版)</title><link>https://github.blog/changelog/2024-04-25-enterprise-enablement-trends-for-security-products-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 25 Apr 2024 18:44:21 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-25-enterprise-enablement-trends-for-security-products-public-beta</guid><description>&lt;p&gt;Enterprise enablement trends for security products (public beta)&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-25-enterprise-enablement-trends-for-security-products-public-beta&quot;&gt;Enterprise enablement trends for security products (public beta)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;セキュリティ製品の管理に専念する企業オーナーおよびセキュリティ マネージャーの皆様に向けて、新しい機能を発表できることを嬉しく思います。GitHub 企業全体のセキュリティ製品の有効化傾向に関する過去の洞察を得ることができるようになりました。この概要は、セキュリティ製品の適用範囲が企業全体にどのように実装されているかを理解するのに役立ちます。&lt;/p&gt;
&lt;p&gt; GitHub 組織内のすべてのセキュリティ製品の有効化傾向を監視できるようにする、 &lt;a href=&quot;https://github.blog/changelog/2024-03-19-enablement-trends-for-security-products-public-beta/&quot;&gt;組織向け有効化傾向レポート&lt;/a&gt;のパブリック ベータ版の 3 月の発表に続き、この機能をエンタープライズ レベルに拡張しました。 &lt;code&gt;owner&lt;/code&gt;フィルターを追加すると、特定の組織が所有するリポジトリのメトリクスのナビゲーションがさらに簡素化されます。 &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;エンタープライズ イネーブルメント トレンド レポート&quot; width=&quot;700&quot; src=&quot;https://github.com/github/release-assets/assets/2262535/a504e700-faad-4a2d-b869-cd1fb9681d8b&quot;&gt;
&lt;/p&gt;
&lt;p&gt;イネーブルメントのトレンドを調査し、GitHub セキュリティ機能のアクティベーション ステータスに関する過去の洞察を取得します。&lt;br /&gt;
 * 依存ボットのアラート&lt;br /&gt;
* dependabot のセキュリティ更新&lt;br /&gt;
* コードスキャン&lt;br /&gt;
* 秘密スキャン警告&lt;br /&gt;
* シークレットスキャンプッシュ保護&lt;/p&gt;
&lt;p&gt;履歴データは 2024 年 1 月 1 日から利用可能になります。ただし、Dependabot セキュリティ更新データは 2024 年 1 月 17 日から利用可能になります。&lt;/p&gt;
&lt;p&gt;イネーブルメント傾向レポートにアクセスするには、エンタープライズ アカウントに移動します。エンタープライズ アカウントのサイドバーで、 &lt;strong&gt;[コード セキュリティ]&lt;/strong&gt;をクリックします。&lt;/p&gt;
&lt;p&gt;この機能は現在、GitHub Enterprise Cloud でパブリック ベータ版として利用可能であり、GitHub Enterprise Server 3.14 で利用できるようになる予定です。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/security-overview/about-security-overview&quot;&gt;セキュリティの概要について詳しく知り&lt;/a&gt;、 &lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-25-enterprise-enablement-trends-for-security-products-public-beta&quot;&gt;セキュリティ製品のエンタープライズ対応トレンド (パブリック ベータ版)&lt;/a&gt;の記事は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77637</post-id></item><item><title>GitHub アクション – 環境全体のデプロイメント ビュー (GA)</title><link>https://github.blog/changelog/2024-04-25-github-actions-deployment-views-across-environments-ga</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 25 Apr 2024 18:38:12 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-25-github-actions-deployment-views-across-environments-ga</guid><description>&lt;p&gt;GitHub Actions - Deployment views across environments (GA)&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-25-github-actions-deployment-views-across-environments-ga&quot;&gt;GitHub Actions &amp;#8211; Deployment views across environments (GA)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;環境全体にわたる新しいデプロイメント ビューが一般提供 (GA) になりました。 &lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8&quot; alias=&quot;tada&quot;&gt; 🎉&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;以前は、さまざまな環境にわたって GitHub Actions を使用してデプロイメントを追跡するためのダッシュボード ビューを出荷してきました。&lt;br /&gt;
これらのビューにより、開発者や DevOps マネージャーは、リポジトリ内のデプロイメントの完全な履歴を表示したり、環境やワークフロー全体でデプロイメントをフィルタリングして、ステータスや期間を把握したり、阻害要因に対処したりできるようになりました。&lt;/p&gt;
&lt;p&gt;現在、これらの展開ダッシュボード ビューの一般提供と、次の機能強化を発表しています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;環境の固定。例: 最も重要な環境を最大 10 個まで「固定」して、それらの環境に展開されているすべてのデプロイメントを簡単に表示できるようになりました。&lt;/li&gt;
&lt;li&gt;ビューのフィルターをさらに追加します。例: 特定の展開ステータスを持つ特定の作成者によってトリガーされ、特定の環境を対象とする展開のリストにドリルダウンできるようになりました。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; alt=&quot;新しい展開ビュー&quot; src=&quot;https://github.com/github/release-assets/assets/25389593/3d2a9dc6-1cb2-4aea-8685-96991da73468&quot;&gt;&lt;/p&gt;
&lt;p&gt;リポジトリ内のデプロイメントの表示とフィルタリングの詳細については&lt;a href=&quot;https://docs.github.com/actions/deployment/managing-your-deployments/viewing-deployment-history&quot;&gt;、ドキュメントを&lt;/a&gt;参照してください。&lt;/p&gt;
&lt;p&gt;質問がある場合は、 &lt;a href=&quot;https://github.com/orgs/community/discussions/62676&quot;&gt;GitHub Actions コミュニティ&lt;/a&gt;にアクセスしてください。&lt;br /&gt;
 Actions の次の予定については、&lt;a href=&quot;https://github.com/orgs/github/projects/4247&quot;&gt;公開ロードマップ&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-25-github-actions-deployment-views-across-environments-ga&quot;&gt;GitHub アクション – 環境全体のデプロイ ビュー (GA) の&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77635</post-id></item><item><title>GitHub の課題とプロジェクト – 課題プロジェクトの自動クローズ ワークフロー</title><link>https://github.blog/changelog/2024-04-25-github-issues-projects-auto-close-issue-project-workflow</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 25 Apr 2024 18:09:26 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-25-github-issues-projects-auto-close-issue-project-workflow</guid><description>&lt;p&gt;GitHub Issues &amp;#38; Projects –  Auto-close issue project workflow&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-25-github-issues-projects-auto-close-issue-project-workflow&quot;&gt;GitHub Issues &amp;amp; Projects –  Auto-close issue project workflow&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;今日の変更ログでは、プロジェクト内の課題を自動クローズするための新しいワークフローを紹介します。 &lt;/p&gt;
&lt;h2 id=&quot;%f0%9f%aa%84-auto-close-issue-project-workflow&quot;&gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/1fa84.png&quot; alt=&quot;🪄&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;自動クローズ課題プロジェクトのワークフロー&lt;a href=&quot;#%f0%9f%aa%84-auto-close-issue-project-workflow&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x1fa84; Auto-close issue project workflow&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;問題の自動クローズ ワークフローを使用すると、プロジェクトのステータスが「完了」に変更されたときに問題を自動的にクローズできます。 &lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/2705.png&quot; alt=&quot;✅&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;または定義したカスタム ステータス ( &lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/1f645.png&quot; alt=&quot;🙅&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;繰り返しクリックする必要はありません)。 &lt;/p&gt;
&lt;div style=&quot;width: 640px;&quot; class=&quot;wp-video&quot;&gt;&lt;!--[if lt IE 9]&gt;&lt;script&gt;document.createElement(&apos;video&apos;);&lt;/script&gt;&lt;![endif]--&gt;
&lt;video class=&quot;wp-video-shortcode js-viewport-aware-video events-none&quot; id=&quot;video-77634-1&quot; width=&quot;640&quot; height=&quot;360&quot; loop=&quot;1&quot; autoplay=&quot;1&quot; preload=&quot;metadata&quot; playsinline=&quot;1&quot; muted=&quot;1&quot;&gt;&lt;source type=&quot;video/mp4&quot; src=&quot;https://github.blog/wp-content/uploads/2024/04/How-it-works-1.mp4#t=0.001&quot; /&gt; &lt;a href=&quot;https://github.blog/wp-content/uploads/2024/04/How-it-works-1.mp4#t=0.001&quot;&gt;https://github.blog/wp-content/uploads/2024/04/How-it-works-1.mp4#t=0.001&lt;/a&gt;&lt;/video&gt;&lt;/div&gt;
&lt;h3 id=&quot;implementing-the-new-workflow&quot;&gt;新しいワークフローの実装&lt;a href=&quot;#implementing-the-new-workflow&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Implementing the new workflow&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;既存のプロジェクトの場合、書き込みアクセス権または管理者アクセス権を持つユーザーは誰でも、ワークフロー ページで新しい課題の自動クローズ ワークフローを有効にすることができます。 &lt;/p&gt;
&lt;div style=&quot;width: 640px;&quot; class=&quot;wp-video&quot;&gt;&lt;video class=&quot;wp-video-shortcode js-viewport-aware-video events-none&quot; id=&quot;video-77634-2&quot; width=&quot;640&quot; height=&quot;360&quot; loop=&quot;1&quot; autoplay=&quot;1&quot; preload=&quot;metadata&quot; playsinline=&quot;1&quot; muted=&quot;1&quot;&gt;&lt;source type=&quot;video/mp4&quot; src=&quot;https://github.blog/wp-content/uploads/2024/04/Auto-close-workflow-3.mp4#t=0.001&quot; /&gt; &lt;a href=&quot;https://github.blog/wp-content/uploads/2024/04/Auto-close-workflow-3.mp4#t=0.001&quot;&gt;https://github.blog/wp-content/uploads/2024/04/Auto-close-workflow-3.mp4#t=0.001&lt;/a&gt;&lt;/video&gt;&lt;/div&gt;
&lt;p&gt;新しいプロジェクトの場合、自動クローズ課題ワークフローがデフォルトで有効になります。 &lt;/p&gt;
&lt;h2 id=&quot;%e2%9c%8d%ef%b8%8f-tell-us-what-you-think&quot;&gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/270d.png&quot; alt=&quot;✍&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;あなたが考えていることを私に伝えてください！ &lt;a href=&quot;#%e2%9c%8d%ef%b8%8f-tell-us-what-you-think&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x270d; Tell us what you think!&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/orgs/community/discussions/121113&quot;&gt;コミュニティ ディスカッション&lt;/a&gt;の会話に参加して、フィードバックを共有してください。 &lt;/p&gt;
&lt;h2 id=&quot;bug-fixes-and-improvements&quot;&gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt; ✨&lt;/g-emoji&gt;バグ修正と改善&lt;a href=&quot;#bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt;&amp;#10024;&lt;/g-emoji&gt; Bug fixes and improvements&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;エンタープライズ管理対象ユーザーはパブリック プロジェクト テンプレートを使用し、パブリック プロジェクトをコピーできるようになりました&lt;/li&gt;
&lt;li&gt;ビュー構成メニューとテーブル列メニューから&lt;a href=&quot;https://docs.github.com/en/issues/planning-and-tracking-with-projects/customizing-views-in-your-project/customizing-the-table-layout#sorting-by-field-values&quot;&gt;二次ソートフィールド&lt;/a&gt;を適用するように動作を変更しました。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;a href=&quot;http://github.com/features/issues&quot;&gt;GitHub Issues&lt;/a&gt;でプロジェクト計画に GitHub を使用する方法を確認し、&lt;a href=&quot;https://github.com/orgs/github/projects/4247/views/7&quot;&gt;ロードマップ&lt;/a&gt;の内容を確認し、&lt;a href=&quot;https://docs.github.com/issues&quot;&gt;ドキュメント&lt;/a&gt;で詳細を確認してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-25-github-issues-projects-auto-close-issue-project-workflow&quot;&gt;GitHub の問題とプロジェクト – 問題プロジェクトの自動クローズ ワークフロー&lt;/a&gt;の投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77634</post-id></item><item><title>GitHub Copilot Metrics API がパブリックベータで利用可能になりました</title><link>https://github.blog/changelog/2024-04-23-github-copilot-metrics-api-now-available-in-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 23 Apr 2024 16:32:03 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-23-github-copilot-metrics-api-now-available-in-public-beta</guid><description>&lt;p&gt;GitHub Copilot Metrics API now available in public beta&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-23-github-copilot-metrics-api-now-available-in-public-beta&quot;&gt;GitHub Copilot Metrics API now available in public beta&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;本日より、GitHub Copilot Business および GitHub Copilot Enterprise のすべてのお客様が利用できる GitHub Copilot Metrics API のパブリック ベータ版を発表できることを嬉しく思います。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/rest/copilot/copilot-usage?apiVersion=2022-11-28&quot;&gt;GitHub Copilot Metrics API は、&lt;/a&gt;組織内での Copilot の使用状況に関する情報を提供するように設計されています。 API からのデータは、使用され、組織独自のデータと結合されて、Copilot がソフトウェア開発サイクルの全体像にどのように適合するかをより明確に把握できるようにすることを目的としています。&lt;/p&gt;
&lt;h3 id=&quot;what-functionality-will-be-included-in-the-public-beta&quot;&gt;パブリックベータ版にはどのような機能が含まれますか? &lt;a href=&quot;#what-functionality-will-be-included-in-the-public-beta&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What functionality will be included in the Public Beta?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;履歴データが自動的にロードされるため、初日から以前のソースとデータをオーバーレイすることができます。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;エンドポイントは、過去 28 日間の使用履歴のデータをローリング ベースで提供します。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;データは日ごとに要約され、一日の終わりに更新されます。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;日付範囲とページネーションが利用できるようになりました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; GitHub Copilot Metrics API のこのイテレーションは、IDE で行われる Copilot Chat とコード補完のメトリクスを提供することに重点を置いています。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;コード補完メトリクス: 提案されたコード行数、受け入れられたコード行数、提案数、受け入れ数、言語および IDE に関するスライスを持つアクティブ ユーザー数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; Copilot のチャット メトリクス: チャットの数、受け入れられたチャット提案、およびアクティブ ユーザー。現在、エンドポイントには、Chat メトリクスの言語または IDE に関するスライスが搭載されていません。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; 5 人以上のメンバーがいる GitHub チームのチームレベルの集計も利用できます。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;documentation-and-resources&quot;&gt;ドキュメントとリソース&lt;a href=&quot;#documentation-and-resources&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Documentation and Resources&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;すぐに始められるように、包括的なドキュメントとリソースを用意しました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; API ドキュメント:&lt;a href=&quot;https://docs.github.com/en/rest/copilot/copilot-usage?apiVersion=2022-11-28&quot;&gt;ここで、&lt;/a&gt;メトリクスの定義を含む詳細な API ドキュメントを参照してください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;視覚化: エンドポイントからのデータを使用して視覚化するためのオープンソース ツールは&lt;a href=&quot;https://github.com/github-copilot-community/copilot-metrics-viewer&quot;&gt;、ここで&lt;/a&gt;見つけることができます。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;メトリクスのエクスポート:&lt;a href=&quot;https://github.com/marketplace/actions/github-copilot-usage-metrics-api-export&quot;&gt;ここで&lt;/a&gt;GitHub アクションを使用して、エンドポイントからフラット化された CSV を生成します。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;学習パスウェイ: GitHub Copilot の影響の測定に関する詳細な記事は&lt;a href=&quot;https://resources.github.com/learn/pathways/copilot/essentials/measuring-the-impact-of-github-copilot/&quot;&gt;、ここで&lt;/a&gt;見つけることができます。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;participate-in-the-public-beta&quot;&gt;パブリックベータに参加してください！ &lt;a href=&quot;#participate-in-the-public-beta&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Participate in the Public Beta!&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;このベータ段階での皆様からのフィードバックは、私たちにとって非常に貴重です。あなたの経験を共有することをお勧めします。これは、将来に向けて API を改良し、強化するのに役立ちます。&lt;/p&gt;
&lt;p&gt;ベータ期間中のアップデートと機能強化にご期待ください。私たちは、お客様のニーズと期待を満たす堅牢で機能豊富な API を提供することに尽力しています。**&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-23-github-copilot-metrics-api-now-available-in-public-beta&quot;&gt;GitHub Copilot Metrics API now available in public beta の&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77582</post-id></item><item><title>GitHub Enterprise Cloud および無料、Pro、Teams ユーザー向けのアクションに関する dependabot の更新</title><link>https://github.blog/changelog/2024-04-22-dependabot-updates-on-actions-for-github-enterprise-cloud-and-free-pro-and-teams-users</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 22 Apr 2024 22:10:42 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-22-dependabot-updates-on-actions-for-github-enterprise-cloud-and-free-pro-and-teams-users</guid><description>&lt;p&gt;Dependabot Updates on Actions for GitHub Enterprise Cloud and Free, Pro, and Teams Users&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-22-dependabot-updates-on-actions-for-github-enterprise-cloud-and-free-pro-and-teams-users&quot;&gt;Dependabot Updates on Actions for GitHub Enterprise Cloud and Free, Pro, and Teams Users&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;本日より、GitHub Enterprise Cloud (GHEC) および Free、Pro、Teams アカウントを使用している開発者は、リポジトリや組織で、Dependabot の更新をアクション ワークフローとして実行できるようになります。この変更により、Dependabot がプル リクエストを生成するために実行するジョブは GitHub Actions で実行されるようになります。これは、Dependabot のコンピューティング プラットフォームを Actions に統合する取り組みの始まりであり、さらなる移行計画は後で発表される予定です。&lt;/p&gt;
&lt;h3 id=&quot;who-can-opt-in&quot;&gt;誰がオプトインできますか? &lt;a href=&quot;#who-can-opt-in&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Who can opt-in?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; GHEC、Free、Pro、Teams の管理者ユーザーは、今すぐ、Dependabot on Actions を有効にすることができます。&lt;/p&gt;
&lt;h3 id=&quot;what-if-im-on-enterprise-server-ghes&quot;&gt; Enterprise Server (GHES) を使用している場合はどうなりますか? &lt;a href=&quot;#what-if-im-on-enterprise-server-ghes&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What if I&amp;#8217;m on Enterprise Server (GHES)?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; GitHub Enterprise Server (GHES) と Proxima のユーザーは、アクション上で Dependabot をすでに実行しています。これらのユーザーに対して、Dependabot on Actions を有効にするためにこれ以上の手順は必要ありません。&lt;/p&gt;
&lt;h3 id=&quot;why-choose-to-run-dependabot-as-an-actions-workflow-today&quot;&gt;なぜ今、Dependabot をアクション ワークフローとして実行することを選択したのでしょうか? &lt;a href=&quot;#why-choose-to-run-dependabot-as-an-actions-workflow-today&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Why choose to run Dependabot as an Actions workflow today?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;アクションで dependabot を有効にすると、Dependabot の実行が高速化され、失敗した実行を手動で検出してトラブルシューティングするためのエラーの可視性が向上するなど、パフォーマンス上の利点が得られます。開発者が CI/CD パイプラインでこれを構成したい場合、アクション API と Webhook は失敗した実行を検出し、ダウンストリーム処理を実行することもできます。 dependabot の機能には変更や影響はなく、請求されるアクションの分数にも影響はありません (つまり、dependabot の実行は無料です)。&lt;/p&gt;
&lt;h3 id=&quot;will-this-count-towards-actions-minutes-or-costs&quot;&gt;これはアクションの時間数またはコストにカウントされますか? &lt;a href=&quot;#will-this-count-towards-actions-minutes-or-costs&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Will this count towards Actions minutes or costs?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;これは GitHub Actions の分にはカウントされ&lt;strong&gt;ません&lt;/strong&gt;。つまり、 &lt;strong&gt;Dependabot の使用は引き続き誰でも無料です&lt;/strong&gt;。本日より、Dependabot をアクション ワークフローとして使用することが誰でも無料になり、すべてのリポジトリで一般的に利用できるようになります。&lt;/p&gt;
&lt;h3 id=&quot;whats-the-next-migration-phase-for-dependabot-on-actions&quot;&gt; dependabot on Actions の次の移行フェーズは何ですか? &lt;a href=&quot;#whats-the-next-migration-phase-for-dependabot-on-actions&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What&amp;#8217;s the next migration phase for Dependabot on Actions?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;来年にかけて、すべての dependabot ワークフローを移行して、Actions コンピューティング インフラストラクチャ上で実行する予定です。今すぐオプトインしてこれらの特典にアクセスできますが、オプトインしなくてもすべてのリポジトリに間もなく提供される予定です。私たちは、実行の高速化、トラブルシューティングの可視性の向上、およびアクション上での dependabot の実行によって得られるその他の将来のメリットに期待しています。コンピューティング インフラストラクチャの移行を開始するにあたり、アクションが無効になり、Dependabot が有効になったリポジトリを所有する組織と緊密に連絡を取り合います。ご質問やご不明な点がございましたら、&lt;a href=&quot;https://github.com/orgs/community/discussions/120779&quot;&gt;コミュニティ ディスカッション&lt;/a&gt;にご参加いただくか、&lt;a href=&quot;https://docs.github.com/en/support/contacting-github-support&quot;&gt;サポート チームにお問い合わせください&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;how-to-enable-dependabot-on-actions&quot;&gt;アクションで依存ボットを有効にするにはどうすればよいですか? &lt;a href=&quot;#how-to-enable-dependabot-on-actions&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How to enable Dependabot on Actions?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; GHEC、Free、Pro、および Teams の管理者ユーザーは、コードのセキュリティおよび分析設定ページから、リポジトリ レベルまたは組織レベルのいずれかで、アクション ランナーの dependabot を有効にすることができます。詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/working-with-dependabot/about-dependabot-on-github-actions-runners#enabling-or-disabling-for-your-repository&quot;&gt;アクション ランナーでの dependabot の有効化&lt;/a&gt;に関するドキュメントを参照してください。 &lt;/p&gt;
&lt;h3 id=&quot;when-will-self-hosted-runners-larger-runners-and-actions-runner-controller-arc-be-supported&quot;&gt;セルフホスト ランナー、大規模ランナー、およびアクション ランナー コントローラー (ARC) はいつサポートされますか? &lt;a href=&quot;#when-will-self-hosted-runners-larger-runners-and-actions-runner-controller-arc-be-supported&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;When will self-hosted runners, larger runners, and actions runner controller (ARC) be supported?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; 2024年5月&lt;/p&gt;
&lt;h3 id=&quot;when-will-vnets-be-supported&quot;&gt;VNET はいつサポートされますか? &lt;a href=&quot;#when-will-vnets-be-supported&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;When will VNETs be supported?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;この作業はまだ進行中です。これらが利用可能になる予定日はまだ決まっていません。&lt;/p&gt;
&lt;h3 id=&quot;can-i-use-actions-workflows-and-apis-to-trigger-dependabot-jobs&quot;&gt;アクション ワークフローと API を使用して、Dependabot ジョブをトリガーできますか? &lt;a href=&quot;#can-i-use-actions-workflows-and-apis-to-trigger-dependabot-jobs&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Can I use Actions workflows and APIs to trigger Dependabot jobs?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;現在、Dependabot ジョブは、アクション ワークフローや API ではなく、Dependabot UI からのみトリガーできます。&lt;/p&gt;
&lt;h3 id=&quot;if-i-see-a-dependabot-job-fail-in-actions-how-can-i-restart-it&quot;&gt;アクションで dependabot ジョブの失敗が確認された場合、どうすれば再起動できますか? &lt;a href=&quot;#if-i-see-a-dependabot-job-fail-in-actions-how-can-i-restart-it&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;If I see a Dependabot job fail in Actions, how can I restart it?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/working-with-dependabot/about-dependabot-on-github-actions-runners#re-running-a-dependabot-version-updates-job&quot;&gt;バージョン更新ジョブの再実行&lt;/a&gt;または&lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/working-with-dependabot/about-dependabot-on-github-actions-runners#re-running-a-dependabot-security-updates-job&quot;&gt;セキュリティ更新ジョブの再実行&lt;/a&gt;に関するドキュメントを確認してください。&lt;/p&gt;
&lt;h3 id=&quot;if-i-enable-dependabot-on-actions-can-i-later-opt-out&quot;&gt;アクションで dependabot を有効にした場合、後でオプトアウトできますか? &lt;a href=&quot;#if-i-enable-dependabot-on-actions-can-i-later-opt-out&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;If I enable Dependabot on Actions, can I later opt-out?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;現時点では、アクションでの dependabot の有効化をオプトアウトできます。ただし、Dependabot のコンピューティング プラットフォームをアクションに統合するため、この機能は来年中に変更される予定です。 &lt;/p&gt;
&lt;h3 id=&quot;what-if-i-dont-want-to-turn-on-actions-for-my-repository-or-organization-what-happens-if-actions-is-disabled-in-a-repository-but-dependabot-is-enabled-to-run-on-actions&quot;&gt;リポジトリまたは組織に対してアクションを有効にしたくない場合はどうすればよいですか?リポジトリでアクションが無効になっているのに、Dependabot がアクションで実行できるようになっている場合はどうなりますか? &lt;a href=&quot;#what-if-i-dont-want-to-turn-on-actions-for-my-repository-or-organization-what-happens-if-actions-is-disabled-in-a-repository-but-dependabot-is-enabled-to-run-on-actions&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What if I don’t want to turn on Actions for my repository or organization? What happens if Actions is disabled in a repository but Dependabot is enabled to run on Actions?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;コンピューティング インフラストラクチャの移行のこのオプトイン フェーズ中に、アクションでは dependabot を有効にし、リポジトリまたは組織レベルでアクションを無効にすると、Dependabot は従来のコンピューティング インフラストラクチャで実行されます。アクションでの dependabot の実行をオプトインする場合は、Dependabot が有効なリポジトリまたは組織全体でアクションを有効にしてください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/working-with-dependabot/about-dependabot-on-github-actions-runners&quot;&gt;dependabot の詳細については、GitHub Actions ランナーを&lt;/a&gt;参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/120779&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-22-dependabot-updates-on-actions-for-github-enterprise-cloud-and-free-pro-and-teams-users&quot;&gt;GitHub Enterprise Cloud および無料、Pro、Teams ユーザー向けのアクションに関する dependabot の更新という&lt;/a&gt;投稿は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77579</post-id></item><item><title>プッシュ ルールのパブリック ベータ版</title><link>https://github.blog/changelog/2024-04-18-push-rules-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 18 Apr 2024 16:32:37 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-18-push-rules-public-beta</guid><description>&lt;p&gt;Push rules public beta&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-18-push-rules-public-beta&quot;&gt;Push rules public beta&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;リポジトリを乱雑にする&lt;code&gt;*.jar&lt;/code&gt;や&lt;code&gt;*.so&lt;/code&gt;などの不要なファイルに別れを告げましょう。また、プッシュ ルールのパブリック ベータ版を使用して、アクション ワークフローなどの機密ファイルを更新できるユーザーを制限します。 &lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/1f389.png&quot; alt=&quot;🎉&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/7575792/b0d3367f-13ec-42b6-b9cf-fb1cf30cfb1f&quot; alt=&quot;実際のプッシュ ルールの概要&quot; /&gt;&lt;/p&gt;
&lt;p&gt;ファイル拡張子、ファイル パスの長さ、ファイルとフォルダーのパス、ファイル サイズに基づいてリポジトリへのプッシュを制御できる新しいタイプのルールセットを有効にできるようになりました。プッシュ ルールはリポジトリへのすべてのプッシュに適用され、 &lt;a href=&quot;https://docs.github.com/en/repositories/viewing-activity-and-data-for-your-repository/understanding-connections-between-repositories&quot;&gt;リポジトリ ネットワーク&lt;/a&gt;へのすべてのプッシュが確実に保護されるようにリポジトリのすべてのフォークにも適用されるため、ブランチ ターゲティングは必要ありません。&lt;/p&gt;
&lt;p&gt;プッシュ ルールは、GitHub Teams のプライベート リポジトリと内部リポジトリ、および GitHub Enterprise Cloud の組織全体で利用できるようになりました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets#push-rulesets&quot;&gt;プッシュ ルール&lt;/a&gt;の詳細についてはドキュメントを参照し、&lt;a href=&quot;https://github.com/orgs/community/discussions/118843&quot;&gt;コミュニティのディスカッション&lt;/a&gt;に参加してフィードバックを残してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-18-push-rules-public-beta&quot;&gt;Push ルールのパブリック ベータ版の&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77548</post-id></item><item><title>CodeQL for Visual Studio Code のドキュメントは docs.github.com にあります。</title><link>https://github.blog/changelog/2024-04-18-codeql-for-visual-studio-code-documentation-is-now-on-docs-github-com</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 18 Apr 2024 09:14:35 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-18-codeql-for-visual-studio-code-documentation-is-now-on-docs-github-com</guid><description>&lt;p&gt;CodeQL for Visual Studio Code documentation is now on docs.github.com&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-18-codeql-for-visual-studio-code-documentation-is-now-on-docs-github-com&quot;&gt;CodeQL for Visual Studio Code documentation is now on docs.github.com&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/code-security/codeql-for-vs-code&quot;&gt;CodeQL for Visual Studio Code のドキュメントは&lt;/a&gt;現在 docs.github.com にあります。&lt;/p&gt;
&lt;p&gt;これにより、https://codeql.github.com/docs/codeql-for-visual-studio-code からコンテンツが移行され、テキスト、説明、画像、ナビゲーションが改善された、一貫した単一サイトのエクスペリエンスが提供されます。&lt;/p&gt;
&lt;p&gt; 2024 年 5 月 8 日に、元の codeql.github.com の場所から新しい場所への自動的なリダイレクトが開始されます。&lt;/p&gt;
&lt;p&gt;ソース ファイルは現在、パブリックのオープンソース&lt;a href=&quot;https://github.com/github/docs/tree/main/content/code-security/codeql-for-vs-code&quot;&gt;ドキュメント&lt;/a&gt;リポジトリに Markdown 形式で存在しています。貢献したい場合は、 &lt;a href=&quot;https://github.com/github/docs/blob/main/.github/CONTRIBUTING.md&quot;&gt;GitHub Docs 貢献ガイド&lt;/a&gt;に記載されている手順を参照して実行できます。&lt;/p&gt;
&lt;p&gt; Post &lt;a href=&quot;https://github.blog/changelog/2024-04-18-codeql-for-visual-studio-code-documentation-is-now-on-docs-github-com&quot;&gt;CodeQL for Visual Studio Code ドキュメントは docs.github.com にあります&lt;/a&gt;appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; 。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77540</post-id></item><item><title>GitHub インポーターの更新とソース インポート REST API エンドポイントの非推奨</title><link>https://github.blog/changelog/2024-04-17-updates-to-github-importer-and-the-deprecation-of-the-source-import-rest-api-endpoint</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 17 Apr 2024 17:45:22 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-17-updates-to-github-importer-and-the-deprecation-of-the-source-import-rest-api-endpoint</guid><description>&lt;p&gt;Updates to GitHub Importer and the deprecation of the Source Import REST API Endpoint&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-17-updates-to-github-importer-and-the-deprecation-of-the-source-import-rest-api-endpoint&quot;&gt;Updates to GitHub Importer and the deprecation of the Source Import REST API Endpoint&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/migrations/importing-source-code/using-github-importer/about-github-importer&quot;&gt;GitHub Importer は&lt;/a&gt;、コミットやリビジョン履歴を含むソース コード リポジトリを GitHub.com に迅速にインポートするツールです。このリリースの一環として、GitHub Importer は、Git ソース リポジトリを GitHub に移行する際の信頼性の向上とより詳細なエラー処理をユーザーに提供する、Git ソース移行の新しい方法を実装しました。&lt;a href=&quot;https://github.com/new/import&quot;&gt;ここをクリックしてプロジェクトを GitHub にインポートします&lt;/a&gt;。 &lt;/p&gt;
&lt;p&gt;&lt;img fetchpriority=&quot;high&quot; decoding=&quot;async&quot; class=&quot;width-fit alignnone wp-image-77537 size-full&quot; src=&quot;https://github.blog/wp-content/uploads/2024/04/321303490-3d720f35-2ca6-48cf-96dc-a91c0c84a108.png?resize=828%2C947&quot; alt=&quot;&quot; width=&quot;828&quot; height=&quot;947&quot; srcset=&quot;https://github.blog/wp-content/uploads/2024/04/321303490-3d720f35-2ca6-48cf-96dc-a91c0c84a108.png?resize=828%2C947?w=828 828w, https://github.blog/wp-content/uploads/2024/04/321303490-3d720f35-2ca6-48cf-96dc-a91c0c84a108.png?resize=828%2C947?w=262 262w, https://github.blog/wp-content/uploads/2024/04/321303490-3d720f35-2ca6-48cf-96dc-a91c0c84a108.png?resize=828%2C947?w=768 768w&quot; sizes=&quot;(max-width: 828px) 100vw, 828px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2023-10-12-deprecation-source-imports-rest-api/&quot;&gt;以前にお知らせした&lt;/a&gt;ように、この変更は&lt;a href=&quot;https://docs.github.com/en/rest/migrations/source-imports?apiVersion=2022-11-28&quot;&gt;、ソース インポート用の REST API エンドポイント&lt;/a&gt;のサポートの終了に伴い行われます。今後、これらのエンドポイントはエラーを返すようになります。代わりに新しい&lt;a href=&quot;https://github.com/new/import&quot;&gt;インポート リポジトリ ページ&lt;/a&gt;を使用することをお勧めします。&lt;/p&gt;
&lt;p&gt;最後に、GitHub Importer は Mercurial、Subversion、および Team Foundation Version Control (TFVC) リポジトリのインポートをサポートしなくなることを&lt;a href=&quot;https://github.blog/changelog/2023-04-17-deprecation-importing-non-git-repositories-with-github-importer/&quot;&gt;以前に発表しました&lt;/a&gt;。使用率が非常に低いため、本日よりこの機能のサポートを終了しました。素晴らしいオープンソース ツールのおかげで、これらの代替バージョン管理システムから Git への移行は簡単です。詳細については、ドキュメントの記事&lt;a href=&quot;https://docs.github.com/migrations/importing-source-code/using-the-command-line-to-import-source-code&quot;&gt;「コマンド ラインを使用してソース コードをインポートする」&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-17-updates-to-github-importer-and-the-deprecation-of-the-source-import-rest-api-endpoint&quot;&gt;「GitHub インポーターの更新とソース インポート REST API エンドポイントの廃止」という&lt;/a&gt;投稿は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77535</post-id></item><item><title>GitHub コード スキャン用に組織レベルの CodeQL モデル パックを構成する</title><link>https://github.blog/changelog/2024-04-17-configure-organization-level-codeql-model-packs-for-github-code-scanning</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 17 Apr 2024 13:22:23 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-17-configure-organization-level-codeql-model-packs-for-github-code-scanning</guid><description>&lt;p&gt;Configure organization-level CodeQL model packs for GitHub code scanning&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-17-configure-organization-level-codeql-model-packs-for-github-code-scanning&quot;&gt;Configure organization-level CodeQL model packs for GitHub code scanning&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;組織レベルの CodeQL モデル パックを追加して、GitHub 組織のコード スキャン範囲を向上できるようになりました。これにより、カスタム ライブラリとフレームワークが CodeQL によって確実に認識されるようになります。&lt;/p&gt;
&lt;p&gt;ほとんどの場合、すぐに使える CodeQL 脅威モデルは、 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/introduction-to-code-scanning/about-code-scanning-with-codeql&quot;&gt;コード スキャンを&lt;/a&gt;使用して GitHub リポジトリ内の潜在的な脆弱性を特定するための最適な範囲を提供します。 GitHub の CodeQL チームは、アプリケーションに入力される信頼できないデータを CodeQL が確実に認識できるように、最も広く使用されているオープンソース ライブラリとフレームワークを注意深く監視しています。カスタム構築または&lt;a href=&quot;https://en.wikipedia.org/wiki/Inner_source&quot;&gt;内部ソースの&lt;/a&gt;フレームワークやライブラリなど、デフォルトではカバーできないケースについては、 &lt;a href=&quot;https://github.blog/changelog/2023-09-19-easily-customize-code-scanning-using-codeql-model-packs-for-java-beta/&quot;&gt;カスタム CodeQL モデル パック&lt;/a&gt;を作成して、CodeQL がコード内の追加のセキュリティ脆弱性を検出できるようにすることができます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/42464962/ffae4997-58e1-4789-a3b6-9b70eac62d93&quot; alt=&quot;組織コードのセキュリティおよび分析設定での CodeQL モデル パックの構成&quot; /&gt;&lt;/p&gt;
&lt;p&gt; CodeQL モデル パックを大規模に構成すると、そのパックは組織内の&lt;a href=&quot;https://github.blog/2023-01-09-default-setup-a-new-way-to-enable-github-code-scanning/&quot;&gt;デフォルト設定&lt;/a&gt;を使用するすべてのコード スキャン分析で使用されます。デフォルトでは、コード スキャンによって各モデル パックの最新バージョンがダウンロードされます。これは、パックへの最新の変更 (新しいフレームワークに関する情報の追加など) が自動的に含まれることを意味します。あるいは、特定のバージョン (またはバージョン範囲) を指定することで、使用する CodeQL モデルの特定のセットを構成できます。詳細については、GitHub ドキュメントの&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/managing-your-code-scanning-configuration/editing-your-configuration-of-default-setup#extending-coverage-for-all-repositories-in-an-organization&quot;&gt;「デフォルト セットアップの構成の編集」を&lt;/a&gt;参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://codeql.github.com/docs/codeql-for-visual-studio-code/using-the-codeql-model-editor/&quot;&gt;VS Code の CodeQL モデル エディターを&lt;/a&gt;使用すると、C# および Java/Kotlin で記述されたライブラリおよびフレームワーク用のカスタム CodeQL モデル パックを簡単に作成できます。カスタム CodeQL モデル パックは、 &lt;a href=&quot;https://codeql.github.com/docs/codeql-language-guides/customizing-library-models-for-javascript/&quot;&gt;JavaScript&lt;/a&gt;と&lt;a href=&quot;https://codeql.github.com/docs/codeql-language-guides/customizing-library-models-for-ruby/&quot;&gt;Ruby&lt;/a&gt;で記述されたコードでもサポートされており、将来的には、これらの言語およびその他の CodeQL でサポートされる言語のサポートを CodeQL モデル エディターに追加する予定です。&lt;/p&gt;
&lt;p&gt;この機能は現在 GitHub.com で利用可能であり、GitHub Enterprise Server 3.14 でも利用できるようになる予定です。&lt;/p&gt;
&lt;p&gt;この投稿「 &lt;a href=&quot;https://github.blog/changelog/2024-04-17-configure-organization-level-codeql-model-packs-for-github-code-scanning&quot;&gt;GitHub コード スキャン用の組織レベルの CodeQL モデル パックの構成」は、&lt;/a&gt;最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77534</post-id></item></channel></rss>