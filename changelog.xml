<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>Changelogs Archive - The GitHub Blog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Wed, 26 Jun 2024 22:39:13 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.5.5</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Changelogs Archive - The GitHub Blog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>NuGet および Azure のオンデマンド有効性チェックのシークレット スキャン</title><link>https://github.blog/changelog/2024-06-26-secret-scanning-on-demand-validity-checks-for-nuget-and-azure</link><dc:creator>Allison</dc:creator><pubDate>Wed, 26 Jun 2024 22:39:13 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-26-secret-scanning-on-demand-validity-checks-for-nuget-and-azure</guid><description>&lt;p&gt;Secret scanning on demand validity checks for NuGet and Azure&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-26-secret-scanning-on-demand-validity-checks-for-nuget-and-azure&quot;&gt;Secret scanning on demand validity checks for NuGet and Azure&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;本日より、NuGet API キーと&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-patterns#supported-secrets&quot;&gt;サポートされている Azure 接続文字列&lt;/a&gt;の有効性チェックをオンデマンドで実行できるようになりました。これらのチェックも継続的に実行されます。&lt;/p&gt;
&lt;p&gt; GitHub シークレット スキャンを使用すると、 &lt;a href=&quot;https://docs.github.com/en/code-security/secret-scanning/managing-alerts-from-secret-scanning#checking-a-secrets-validity&quot;&gt;パートナーの有効性チェック&lt;/a&gt;でシークレットが&lt;code&gt;active&lt;/code&gt;か&lt;code&gt;inactive&lt;/code&gt;を知ることができます。これらのチェックは、有効性チェック機能を有効にしたリポジトリの&lt;a href=&quot;https://docs.github.com/en/code-security/secret-scanning/secret-scanning-patterns#supported-secrets&quot;&gt;サポートされているプロバイダー&lt;/a&gt;に対して継続的に実行されます。アラートの詳細ページからオンデマンドの有効性チェックを実行することもできます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンでリポジトリを保護する&lt;/a&gt;方法を学ぶか、シークレット スキャンに関する&lt;a href=&quot;https://forms.gle/WPGUckjJrtZhGkQv9&quot;&gt;60 分間のフィードバック セッション&lt;/a&gt;にサインアップして、時間の補償を受けてください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-26-secret-scanning-on-demand-validity-checks-for-nuget-and-azure&quot;&gt;NuGet と Azure のオンデマンド有効性チェックのシークレット スキャンに関する&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78639</post-id></item><item><title>dependabot 自動トリアージ ルールの一般提供が開始されました</title><link>https://github.blog/changelog/2024-06-26-dependabot-auto-triage-rules-are-generally-available</link><dc:creator>Allison</dc:creator><pubDate>Wed, 26 Jun 2024 16:41:22 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-26-dependabot-auto-triage-rules-are-generally-available</guid><description>&lt;p&gt;Dependabot auto-triage rules are generally available&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-26-dependabot-auto-triage-rules-are-generally-available&quot;&gt;Dependabot auto-triage rules are generally available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;自動トリアージ ルールは、大規模なアラートをより適切に管理しながら、アラートとプル リクエストの疲労を軽減するのに役立ちます。&lt;/p&gt;
&lt;p&gt; dependabot の自動トリアージ ルールを使用すると、独自のカスタム ルールを作成して、Dependabot が自動解除でアラートを無視する方法、アラートをスヌーズして再オープンする方法、アラートを修正するためのプル リクエストを生成する方法を制御できるため、心配することなく重要なアラートに集中できます。そうでないアラートについて。&lt;/p&gt;
&lt;p&gt;ルールは次のアラート属性を使用して作成できます。&lt;br /&gt;
 – CVE ID&lt;br /&gt;
 – CWE&lt;br /&gt;
 – 依存関係のスコープ (devDependency または runtime)&lt;br /&gt;
 – 生態系&lt;br /&gt;
– GHSA ID&lt;br /&gt;
 – マニフェスト パス (リポジトリ レベルのルールのみ)&lt;br /&gt;
 - パッケージ名&lt;br /&gt;
– パッチの入手可能性&lt;br /&gt;
- 重大度&lt;/p&gt;
&lt;p&gt;この機能の詳細と使用方法については、&lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-auto-triage-rules&quot;&gt;ドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-26-dependabot-auto-triage-rules-are-generally-available&quot;&gt;「Dependabot の自動トリアージ ルールが一般提供されました」&lt;/a&gt;という記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78638</post-id></item><item><title>グローバルナビゲーションの最適化</title><link>https://github.blog/changelog/2024-06-26-global-navigation-optimizations</link><dc:creator>Allison</dc:creator><pubDate>Wed, 26 Jun 2024 10:11:08 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-26-global-navigation-optimizations</guid><description>&lt;p&gt;Global Navigation Optimizations&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-26-global-navigation-optimizations&quot;&gt;Global Navigation Optimizations&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/9e335510-ea82-413c-a93d-66c17d19bde7&quot; alt=&quot;グローバル ナビゲーションの右側のパネルにある新しいアカウント スイッチャーを示すスクリーンショット&quot; /&gt;&lt;/p&gt;
&lt;p&gt; GitHub のグローバル ナビゲーションの改善:&lt;br /&gt;
 – グローバル ナビゲーションの一部を最適化して読み込みを最大 25% 高速化し、全体的なエクスペリエンスを向上させました。&lt;br /&gt;
 – アカウント間の切り替えがよりシームレスかつ効率的になりました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-26-global-navigation-optimizations&quot;&gt;Global Navigation Optimizations&lt;/a&gt;という投稿は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78630</post-id></item><item><title>アーティファクト証明書の一般提供が開始されました</title><link>https://github.blog/changelog/2024-06-25-artifact-attestations-is-generally-available</link><dc:creator>Allison</dc:creator><pubDate>Tue, 25 Jun 2024 16:08:55 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-25-artifact-attestations-is-generally-available</guid><description>&lt;p&gt;Artifact Attestations is generally available&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-25-artifact-attestations-is-generally-available&quot;&gt;Artifact Attestations is generally available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;h2 id=&quot;github-artifact-attestations-is-generally-available&quot;&gt;GitHub Artifact Attestations の一般提供が開始されました&lt;a href=&quot;#github-artifact-attestations-is-generally-available&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;GitHub Artifact Attestations is generally available&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; GitHub Artifact Attestations の一般提供を発表できることを嬉しく思います。アーティファクト証明書を使用すると、署名付き証明書を作成して検証することで、GitHub Actions 内に構築されたアーティファクトの整合性を保証できます。このリリースでは、これらのアーティファクトを Kubernetes クラスターにデプロイする前に簡単に検証できるようになりました。 &lt;a href=&quot;https://www.sigstore.dev/&quot;&gt;Sigstore&lt;/a&gt;を利用した Artifact Attestations は、アーティファクトとそのビルド プロセスの間に偽造不可能なリンクを作成することで、ソフトウェアのサプライ チェーンを保護するのに役立ちます。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
 &lt;em&gt;「過去 9 か月間、Trail of Bits は GitHub と緊密に連携して、 &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew を&lt;/a&gt;Artifact Attestations の&lt;a href=&quot;https://blog.trailofbits.com/2024/05/14/a-peek-into-build-provenance-for-homebrew/&quot;&gt;最も初期の公的採用企業&lt;/a&gt;の 1 つとしてきました。ソフトウェア、特にオープンソース ソフトウェアはこれまで以上に複雑で相互接続されており、GitHub の新しい Artifact Attestations 機能は、複雑で不透明なソフトウェア サプライ チェーンの問題に対処するための大きな必要な一歩であると強く信じています。」&lt;/em&gt; – William Woodruff 氏、Trail of Bits エンジニアリング ディレクター
&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;
&lt;em&gt;「Artifact Attestations を使用することで、当初は完了までに数か月かかる予定だったプロジェクトを 1 週間足らずで完了しました。」&lt;/em&gt; – Elastic 社ソフトウェア エンジニアリング ディレクター、Mike Place 氏
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;GitHub Actions ワークフローに来歴を追加するのは簡単です。アーティファクトへのパスを指定して新しい&lt;a href=&quot;https://github.com/actions/attest-build-provenance/&quot;&gt;&lt;code&gt;attest-build-provenance&lt;/code&gt;アクション&lt;/a&gt;を呼び出すだけです。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-yml&quot;&gt;permissions:
 id-token: write
 contents: read
 attestations: write

 #
 # (build your artifact)
 #

 - name: Generate artifact attestation
 uses: actions/attest-build-provenance@v1
 with:
 subject-path: &amp;#39;PATH/TO/ARTIFACT&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;次に、 &lt;a href=&quot;https://cli.github.com/manual/gh_attestation_verify&quot;&gt;CLI ツール&lt;/a&gt;を使用してそれを確認します。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-sh&quot;&gt;gh attestation verify PATH/TO/ARTIFACT -o myorganization
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;enhance-your-sdlcs-security-with-a-kubernetes-admission-controller&quot;&gt; Kubernetes アドミッション コントローラーで SDLC のセキュリティを強化する&lt;a href=&quot;#enhance-your-sdlcs-security-with-a-kubernetes-admission-controller&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Enhance your SDLC&amp;#8217;s security with a Kubernetes admission controller&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一般提供開始に伴い、Kubernetes クラスター内で直接証明書を検証できる&lt;a href=&quot;https://docs.github.com/en/actions/security-guides/enforcing-artifact-attestations-with-a-kubernetes-admission-controller&quot;&gt;Kubernetes アドミッション コントローラーを構築する新しい方法&lt;/a&gt;もリリースします。これは、適切に証明されたアーティファクトのみをデプロイできることを意味し、ソフトウェア開発ライフサイクル (SDLC) にセキュリティとコンプライアンスの追加レイヤーを追加します。 Artifact Attestation を GitHub Actions ワークフローに統合することで、開発および展開プロセスのセキュリティが強化され、サプライ チェーンの攻撃や不正な変更から保護されます。&lt;/p&gt;
&lt;p&gt; GitHub Artifact Attestations のアドミッション コントローラーのセットアップには、Sigstore Policy Controller のデプロイ、 &lt;code&gt;TrustRoot&lt;/code&gt;と&lt;code&gt;ClusterImagePolicy&lt;/code&gt;クラスターへの追加、およびそれらのポリシーの名前空間ごとの適用が含まれます。 &lt;a href=&quot;https://github.com/github/artifact-attestations-helm-charts/&quot;&gt;Helm チャート&lt;/a&gt;を使用して、独自のアドミッション コントローラーを迅速にデプロイします。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/actions/security-guides/enforcing-artifact-attestations-with-a-kubernetes-admission-controller&quot;&gt;Kubernetes アドミッション コントローラーの詳細については、こちらをご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;get-started&quot;&gt;始めましょう&lt;a href=&quot;#get-started&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Get Started&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;新しい機能の使用を開始するには、 &lt;a href=&quot;https://docs.github.com/en/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds&quot;&gt;ドキュメント&lt;/a&gt;を確認し、アーティファクト証明書をワークフローに統合するためのステップバイステップ ガイドについては、以下のビデオをご覧ください。この機能はパブリック リポジトリとプライベート リポジトリの両方をサポートしており、プロジェクトのセキュリティをこれまでより簡単に保護できます。 &lt;/p&gt;
&lt;div class=&quot;mod-vh position-relative&quot; style=&quot;height: 0; padding-bottom: calc((9 / 16)*100%);&quot;&gt;
&lt;iframe loading=&quot;lazy&quot; class=&quot;position-absolute top-0 left-0 width-full height-full&quot; src=&quot;https://www.youtube.com/embed/zTIHb-9c868?version=3&amp;#038;rel=1&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;fs=1&amp;#038;hl=en-US&amp;#038;autohide=2&amp;#038;wmode=transparent&quot; title=&quot;YouTubeビデオプレーヤー&quot; allow=&quot;accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;今すぐ GitHub Artifact Attestations をワークフローに統合し、SDLC に有意義なセキュリティを追加してください。 &lt;a href=&quot;https://github.com/orgs/community/discussions/129761&quot;&gt;GitHub コミュニティのディスカッションに参加し&lt;/a&gt;、フィードバックを共有してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-25-artifact-attestations-is-generally-available&quot;&gt;Artifact Attestations が一般公開されましたという&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78626</post-id></item><item><title>マルチディレクトリ キー (ディレクトリ) とワイルドカード / グロブ (*) のサポートによる簡素化された dependabot.yml 構成</title><link>https://github.blog/changelog/2024-06-25-simplified-dependabot-yml-configuration-with-multi-directory-key-directories-and-wildcard-glob-support</link><dc:creator>Allison</dc:creator><pubDate>Tue, 25 Jun 2024 14:45:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-25-simplified-dependabot-yml-configuration-with-multi-directory-key-directories-and-wildcard-glob-support</guid><description>&lt;p&gt;Simplified dependabot.yml configuration with multi-directory key (directories) and wildcard / glob (*) support&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-25-simplified-dependabot-yml-configuration-with-multi-directory-key-directories-and-wildcard-glob-support&quot;&gt;Simplified dependabot.yml configuration with multi-directory key (directories) and wildcard / glob (*) support&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;dependabot のバージョンを更新するには、開発者が&lt;code&gt;dependabot.yml&lt;/code&gt;ファイルを構成してチェックインする必要があります。以前は、管理者にとって、リポジトリごとのカスタマイズを行わずにすべてのリポジトリで機能する&lt;code&gt;dependabot.yml&lt;/code&gt;を構成するのは困難でした。この変更により、 &lt;code&gt;directories&lt;/code&gt;キーを使用して依存関係マニフェストの複数のディレクトリを指定できるようになりました。ディレクトリはワイルドカードまたはグロビングを使用して構成して、ターゲティングを容易にすることもできます。これにより、構成の作成プロセスが簡素化され、動作をカスタマイズしたい開発者にとってより柔軟な対応が可能になります。&lt;/p&gt;
&lt;p&gt;詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file#directories&quot;&gt;ディレクトリ キーの dependabot.yml 構成ドキュメントを&lt;/a&gt;参照してください。&lt;!-- note this link will not work until GA day when docs have been merged. --&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-25-simplified-dependabot-yml-configuration-with-multi-directory-key-directories-and-wildcard-glob-support&quot;&gt;マルチディレクトリ キー (ディレクトリ) とワイルドカード / グロブ (*) サポートによる単純化された dependabot.yml 構成の&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78612</post-id></item><item><title>GitHub Actions: arm64 ランナー向けに Ubuntu 24.04 イメージが利用可能になりました</title><link>https://github.blog/changelog/2024-06-24-github-actions-ubuntu-24-04-image-now-available-for-arm64-runners</link><dc:creator>Allison</dc:creator><pubDate>Mon, 24 Jun 2024 16:08:08 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-24-github-actions-ubuntu-24-04-image-now-available-for-arm64-runners</guid><description>&lt;p&gt;GitHub Actions: Ubuntu 24.04 image now available for arm64 runners&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-24-github-actions-ubuntu-24-04-image-now-available-for-arm64-runners&quot;&gt;GitHub Actions: Ubuntu 24.04 image now available for arm64 runners&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;開発者は、現在&lt;a href=&quot;https://github.blog/2024-06-03-arm64-on-github-actions-powering-faster-more-efficient-build-systems/&quot;&gt;パブリック ベータ版&lt;/a&gt;である GitHub でホストされている arm64 ランナー上で Ubuntu 24.04 を使用してアクション ワークフローを実行できるようになりました。&lt;br /&gt;
 Ubuntu 24.04 の使用を開始するには、組織/企業で arm64 ランナーを作成し、「Ubuntu 24.04 by Arm Limited」パートナー イメージを選択します。次に、そのランナー名と一致するように、GitHub Actions ワークフロー ファイル内の&lt;code&gt;runs-on&lt;/code&gt;構文を更新します。 arm64 でホストされるランナーのセットアップ方法の詳細については、 &lt;a href=&quot;https://docs.github.com/en/actions/using-github-hosted-runners/about-larger-runners/managing-larger-runners&quot;&gt;ドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;この新しいイメージは Arm によって提供され、GitHub によって管理されません。 Ubuntu 24.04 の使用時にワークフローの問題を発見した場合、またはイメージにインストールされているソフトウェアに関するフィードバックがある場合は、 &lt;a href=&quot;https://github.com/actions/partner-runner-images&quot;&gt;partner-runner-images リポジトリ&lt;/a&gt;にフィードバックを提供できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-24-github-actions-ubuntu-24-04-image-now-available-for-arm64-runners&quot;&gt;GitHub Actions: arm64 ランナー向けに Ubuntu 24.04 イメージが利用可能になったという投稿は、&lt;/a&gt; &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78603</post-id></item><item><title>Copilot Extensions の紹介: 始めるために知っておくべきことすべて</title><link>https://github.blog/changelog/2024-06-21-introducing-copilot-extensions-everything-you-need-to-know-to-get-started</link><dc:creator>Allison</dc:creator><pubDate>Fri, 21 Jun 2024 21:05:28 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-21-introducing-copilot-extensions-everything-you-need-to-know-to-get-started</guid><description>&lt;p&gt; Introducing Copilot Extensions: everything you need to know to get started&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-21-introducing-copilot-extensions-everything-you-need-to-know-to-get-started&quot;&gt;Introducing Copilot Extensions: everything you need to know to get started&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;h3 id=&quot;introducing-copilot-extensions-everything-you-need-to-know-to-get-started&quot;&gt;Copilot Extensions の紹介: 始めるために知っておくべきことすべて&lt;a href=&quot;#introducing-copilot-extensions-everything-you-need-to-know-to-get-started&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Introducing Copilot Extensions: everything you need to know to get started&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/features/preview/copilot-partner-program&quot;&gt;Copilot パートナー プログラム (CPP)&lt;/a&gt;内の Copilot Extensions の新しいガイドをパートナー ページに公開しました。現在、拡張機能を構築するには、CPP に参加する必要があります。&lt;a href=&quot;https://partner.github.com/2024/06/18/copilot-extensions.html&quot;&gt;ここをクリック&lt;/a&gt;して記事全文を読み、プログラムの詳細をご覧ください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-21-introducing-copilot-extensions-everything-you-need-to-know-to-get-started&quot;&gt;「Copilot Extensions の紹介: 開始するために知っておくべきことすべて」という&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78602</post-id></item><item><title>Copilot ユーザー管理 API のエンタープライズ サポートの強化と範囲の更新</title><link>https://github.blog/changelog/2024-06-21-enhanced-enterprise-support-and-scope-update-for-the-copilot-user-management-api</link><dc:creator>Allison</dc:creator><pubDate>Fri, 21 Jun 2024 20:15:01 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-21-enhanced-enterprise-support-and-scope-update-for-the-copilot-user-management-api</guid><description>&lt;p&gt;Enhanced enterprise support and scope update for the Copilot User Management API&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-21-enhanced-enterprise-support-and-scope-update-for-the-copilot-user-management-api&quot;&gt;Enhanced enterprise support and scope update for the Copilot User Management API&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;Copilot ユーザー管理 API の最初のベータ リリース以来、Copilot シートとそれに関連するアクティビティ ステータスの完全なセットを取得するのが面倒であるというフィードバックを聞いてきました。エンタープライズ管理者の多くは、エンタープライズ エンドポイントがないため、必要な「書き込み」権限を持っておらず、複数の組織のデータを反復処理する必要がありました。&lt;/p&gt;
&lt;p&gt;本日のアップデートでは、企業全体の Copilot シートと関連メタデータを一覧表示するための一元的なエンタープライズ エンドポイントを追加しました。また、必要なスコープを&lt;code&gt;read:enterprise&lt;/code&gt;に更新しました。現在、すべての企業管理者は、たった 1 回の API リクエストで企業の Copilot シートの詳細を迅速に収集できるようになりました。&lt;/p&gt;
&lt;p&gt;同様に、ユーザー管理 API の既存の非破壊エンドポイントについては、 &lt;code&gt;read&lt;/code&gt;から&lt;code&gt;write&lt;/code&gt;までのすべての最小権限要件を更新しました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/rest/copilot/copilot-user-management?apiVersion=2022-11-28#list-all-copilot-seat-assignments-for-an-enterprise&quot;&gt;更新されたドキュメント&lt;/a&gt;をチェックして詳細を確認し、今すぐ試してみてください。&lt;a href=&quot;https://github.com/orgs/community/discussions/60780&quot;&gt;このディスカッション&lt;/a&gt;でフィードバックを共有してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-21-enhanced-enterprise-support-and-scope-update-for-the-copilot-user-management-api&quot;&gt;Copilot ユーザー管理 API の強化されたエンタープライズ サポートと範囲の更新に関する&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78601</post-id></item><item><title>CodeQL は、作業用ビルドを必要とせずに C# プロジェクトをスキャンできます (パブリック ベータ版)</title><link>https://github.blog/changelog/2024-06-20-codeql-can-scan-c-projects-without-requiring-working-builds-public-beta</link><dc:creator>Allison</dc:creator><pubDate>Thu, 20 Jun 2024 20:08:25 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-20-codeql-can-scan-c-projects-without-requiring-working-builds-public-beta</guid><description>&lt;p&gt;CodeQL can scan C# projects without requiring working builds (public beta)&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-20-codeql-can-scan-c-projects-without-requiring-working-builds-public-beta&quot;&gt;CodeQL can scan C# projects without requiring working builds (public beta)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub コード スキャンを強化する静的分析エンジンである CodeQL は、ビルドを必要とせずに C# プロジェクトを分析できるようになりました。このパブリック ベータ機能により、組織は CodeQL をより簡単に大規模に展開できるようになります。以前は、CodeQL では C# プロジェクトを分析するために動作するビルドが必要でした。この要件を削除することで、手動介入なしで C# リポジトリの 90% 以上で CodeQL を正常に有効化できることが大規模テストで示されました。&lt;br /&gt;
 C# コードベースを分析するこの新しい方法は、GitHub.com のすべてのコード スキャン ユーザーに対してデフォルトで有効になりました。 CodeQL CLI ユーザーは、バージョン&lt;code&gt;2.17.6&lt;/code&gt;以降、 &lt;code&gt;build-mode: none&lt;/code&gt;フラグを使用してこの機能を有効にできます。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;既存の&lt;/em&gt;コード スキャン設定 ( &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/enabling-code-scanning/configuring-default-setup-for-code-scanning#about-default-setup&quot;&gt;デフォルト&lt;/a&gt;または&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/configuring-advanced-setup-for-code-scanning#about-advanced-setup-for-code-scanning&quot;&gt;アドバンスト&lt;/a&gt;) を持つリポジトリには変更はありません。現在コード スキャンが機能している場合は、そのまま引き続き機能するため、構成を変更する必要はありません。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コード スキャンのデフォルト設定を使用しているリポジトリは、この新しい分析アプローチの恩恵を自動的に受けられます。&lt;/li&gt;
&lt;li&gt;ワークフロー ファイル経由でコード スキャンの詳細設定を使用しているリポジトリには&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages#codeql-build-modes&quot;&gt;&lt;code&gt;build-mode&lt;/code&gt;&lt;/a&gt;を選択するオプションがあります。新しく構成された C# リポジトリのデフォルト値は&lt;code&gt;build-mode: none&lt;/code&gt;になります。&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/codeql-cli/getting-started-with-the-codeql-cli/about-the-codeql-cli&quot;&gt;CodeQL CLI&lt;/a&gt;ユーザーは、既存のワークフローとの互換性のために、デフォルトの動作に変更はありません。この機能を有効にしたいユーザーは&lt;a href=&quot;https://docs.github.com/en/code-security/codeql-cli/codeql-cli-manual/database-create#--build-modemode&quot;&gt;&lt;code&gt;--build-mode none&lt;/code&gt;&lt;/a&gt;オプションを使用できるようになりました。一般に、CLI を使用する場合は&lt;code&gt;--build-mode&lt;/code&gt;オプションを設定して、デバッグを容易にし、将来の任意の時点でデフォルトの動作が変更された場合に構成を永続化する必要があります。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; C# をスキャンするための新しいメカニズムは GitHub.com で入手でき、CodeQL CLI &lt;code&gt;2.17.6&lt;/code&gt;で使用できるようになります。パブリック ベータ版の間、この機能は、GitHub Enterprise Server のデフォルト設定またはコード スキャンの詳細設定では使用できません。作業用のビルドを必要とせずに C# プロジェクトのスキャンに引き続き取り組んでいますので、&lt;a href=&quot;https://github.com/orgs/community/discussions/113548&quot;&gt;フィードバックをお送りください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-20-codeql-can-scan-c-projects-without-requiring-working-builds-public-beta&quot;&gt;CodeQL は作業ビルドを必要とせずに C# プロジェクトをスキャンできます (パブリック ベータ版)&lt;/a&gt;の投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78584</post-id></item><item><title>API経由でコードセキュリティ構成を管理</title><link>https://github.blog/changelog/2024-06-20-manage-code-security-configurations-via-api</link><dc:creator>Allison</dc:creator><pubDate>Thu, 20 Jun 2024 19:32:52 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-20-manage-code-security-configurations-via-api</guid><description>&lt;p&gt;Manage code security configurations via API&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-20-manage-code-security-configurations-via-api&quot;&gt;Manage code security configurations via API&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://docs.github.com/rest/code-security/configurations&quot;&gt;REST API を&lt;/a&gt;使用して、コード セキュリティ構成を作成および管理できるだけでなく、コード セキュリティ構成を大規模なリポジトリにアタッチできるようになりました。&lt;/p&gt;
&lt;p&gt; API は、組織向けに次のコード セキュリティ構成アクションをサポートします。&lt;br /&gt;
 – 構成の作成、取得、更新、および削除&lt;br /&gt;
– デフォルト構成の設定と取得&lt;br /&gt;
– すべての構成をリストする&lt;br /&gt;
– 構成をリポジトリにアタッチする&lt;/p&gt;
&lt;p&gt;この API は現在、GitHub Enterprise Cloud でパブリック ベータ版として利用可能であり、GitHub Enterprise Server 3.15.0 で利用可能になる予定です。 &lt;a href=&quot;https://docs.github.com/en/code-security/securing-your-organization/introduction-to-securing-your-organization-at-scale/about-enabling-security-features-at-scale&quot;&gt;セキュリティ構成&lt;/a&gt;や&lt;a href=&quot;https://docs.github.com/rest/code-security/configurations&quot;&gt;REST API&lt;/a&gt;についてさらに詳しく知ることも、&lt;a href=&quot;https://github.com/orgs/community/discussions/114519&quot;&gt;フィードバックを送信すること&lt;/a&gt;もできます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-20-manage-code-security-configurations-via-api&quot;&gt;API 経由でコード セキュリティ構成を管理するという&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78582</post-id></item></channel></rss>