<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Wed, 12 Apr 2023 21:46:38 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>シークレット スキャンは、課題で歴史的に漏洩したシークレットを検出するようになりました</title><link>https://github.blog/changelog/2023-04-12-secret-scanning-now-detects-secrets-leaked-historically-in-issues</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 12 Apr 2023 21:46:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-12-secret-scanning-now-detects-secrets-leaked-historically-in-issues</guid><description>Secret scanning now detects secrets leaked historically in issues</description><content:encoded>&lt;p&gt;シークレット スキャンを使用している GitHub Advanced Security のお客様は、UI または&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/rest/secret-scanning?apiVersion=2022-11-28#about-the-secret-scanning-api&quot;&gt;REST API&lt;/a&gt;内の問題のタイトル、説明、またはコメントで過去に公開されたシークレットを表示できるようになりました。この拡張されたカバレッジは、リポジトリ、組織、またはエンタープライズ レベルで定義された&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/defining-custom-patterns-for-secret-scanning&quot;&gt;任意のカスタム パターン&lt;/a&gt;に一致するシークレットも検出して表示します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンでリポジトリを保護する方法を学ぶ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71328</post-id></item><item><title>REST API を使用して SBOM を生成する</title><link>https://github.blog/changelog/2023-04-12-generate-an-sbom-with-the-rest-api</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 12 Apr 2023 16:50:03 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-07-generate-an-sbom-with-the-rest-api</guid><description>Generate an SBOM with the REST API</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2023-03-28-generate-an-sbom-from-the-dependency-graph/&quot;&gt;リポジトリの依存関係グラフからソフトウェア部品表を生成する&lt;/a&gt;最近のリリースに続いて、 &lt;a href=&quot;https://docs.github.com/en/rest/dependency-graph/sboms#export-a-software-bill-of-materials-sbom-for-a-repository&quot;&gt;SBOM 用の新しい REST API&lt;/a&gt;を使用してリポジトリの SBOM を生成できるようになりました。結果の JSON は、リポジトリのメイン ブランチのヘッドを表します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph&quot;&gt;ディペンデンシー グラフの詳細&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/rest/dependency-graph/sboms#export-a-software-bill-of-materials-sbom-for-a-repository&quot;&gt;SBOM API の詳細&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71260</post-id></item><item><title>GitHub CLI での Webhook 転送</title><link>https://github.blog/changelog/2023-04-12-webhook-forwarding-in-the-github-cli</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 12 Apr 2023 13:12:23 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-12-webhook-forwarding-in-the-github-cli</guid><description>Webhook forwarding in the GitHub CLI</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2022-11-16-webhook-forwarding-in-the-github-cli-public-beta&quot;&gt;ベータ版&lt;/a&gt;が成功し、お客様から多くの素晴らしいフィードバックが寄せられたことを受けて、GitHub CLI での Webhook 転送が誰でも利用できるようになりました。&lt;/p&gt;
&lt;p&gt; Webhook 転送を使用すると&lt;a href=&quot;https://en.wikipedia.org/wiki/Port_forwarding&quot;&gt;、ポート転送&lt;/a&gt;について心配することなく、ローカル環境で&lt;a href=&quot;https://docs.github.com/developers/webhooks-and-events/webhooks/about-webhooks&quot;&gt;Webhook の&lt;/a&gt;統合を簡単にテストできます。&lt;/p&gt;
&lt;p&gt;ローカルで Webhook の受信を開始するのに必要なのは、1 つの簡単なコマンドだけです。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;gh webhook forward --repo monalisa/hello-world --events issues,pull_request --url http://localhost:4000/webhooks&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;詳細については、ドキュメントの&lt;a href=&quot;https://docs.github.com/developers/webhooks-and-events/webhooks/receiving-webhooks-with-the-github-cli&quot;&gt;「GitHub CLI を使用して webhook を受信する」&lt;/a&gt;に進んでください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71314</post-id></item><item><title>コード スキャンのデフォルト設定が Go で利用可能</title><link>https://github.blog/changelog/2023-04-12-code-scanning-default-setup-is-available-for-go</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 12 Apr 2023 10:03:52 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-12-code-scanning-default-setup-is-available-for-go</guid><description>Code scanning default setup is available for Go</description><content:encoded>&lt;p&gt;コード スキャンのデフォルト設定が Go! で利用可能になりました。&lt;/p&gt;
&lt;p&gt;デフォルトのセットアップでは、リポジトリに最適な CodeQL 構成が自動的に検出され、セットアップされます。リポジトリ内の言語を検出し、すべてのプル リクエストとデフォルト ブランチおよび保護されたブランチへのすべてのプッシュに対して CodeQL 分析を有効にします。リポジトリが GitHub Actions を使用し、JavaScript/TypeScript、Python、Ruby、または Go を含む場合、リポジトリはデフォルト設定の対象となります。&lt;/p&gt;
&lt;p&gt; 「コードのセキュリティと分析」の下にあるリポジトリの「設定」タブで、デフォルトのセットアップを使用できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; width=&quot;671&quot; height=&quot;340&quot; src=&quot;https://github.blog/wp-content/uploads/2023/04/231187975-df5168c1-21fa-4cf1-9aeb-2aa7447e33b8.png?w=300&amp;#038;resize=671%2C340&quot; alt=&quot;コードスキャンのデフォルト設定 Go&quot; class=&quot;alignnone size-medium wp-image-71311&quot; srcset=&quot;https://github.blog/wp-content/uploads/2023/04/231187975-df5168c1-21fa-4cf1-9aeb-2aa7447e33b8.png?w=671 671w, https://github.blog/wp-content/uploads/2023/04/231187975-df5168c1-21fa-4cf1-9aeb-2aa7447e33b8.png?w=300&amp;#038;resize=671%2C340 300w&quot; sizes=&quot;(max-width: 671px) 100vw, 671px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;この新機能は現在 GitHub.com で利用可能で、GHES 3.10 にも同梱されます。より多くの言語サポートが間もなく提供される予定であり、 &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/&quot;&gt;CodeQL がサポートする他のすべての言語は、&lt;/a&gt; GitHub Actions ワークフロー ファイルを使用して引き続き機能します。 API アップロードまたはサードパーティの分析ツールを使用してコード スキャンを設定するオプションは引き続きサポートされ、変更されていません。&lt;/p&gt;
&lt;p&gt;コード スキャンのデフォルト設定の詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning-for-a-repository#configuring-code-scanning-automatically&quot;&gt;コード スキャンの自動設定&lt;/a&gt;を参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71310</post-id></item><item><title>シークレット スキャンで、アクティブな GitHub トークンのメタデータが表示されるようになりました</title><link>https://github.blog/changelog/2023-04-11-secret-scanning-now-shows-metadata-for-active-github-tokens</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 11 Apr 2023 21:55:59 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-11-secret-scanning-now-shows-metadata-for-active-github-tokens</guid><description>Secret scanning now shows metadata for active GitHub tokens</description><content:encoded>&lt;p&gt;シークレット スキャン アラートへのアクセス権を持つユーザーは、リポジトリでリークされたアクティブな GitHub トークンのメタデータを表示できるようになりました。メタデータには、トークンの所有者、有効期限、アクセス許可などの詳細が含まれます。この情報を使用して、セキュリティ チームはリークの潜在的な影響を評価し、それに応じて是正措置の優先順位を付けることができます。&lt;/p&gt;
&lt;p&gt;この機能は、 &lt;a href=&quot;https://github.blog/changelog/2023-01-19-secret-scanning-users-can-now-see-the-validity-of-detected-github-tokens/&quot;&gt;漏洩した GitHub トークンの有効性チェックを&lt;/a&gt;導入した 1 月の以前のリリースに基づいています。 &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img decoding=&quot;async&quot; loading=&quot;lazy&quot; width=&quot;2038&quot; height=&quot;1334&quot; src=&quot;https://github.blog/wp-content/uploads/2023/04/image.png?resize=2038%2C1334&quot; alt=&quot;ギットハブ&quot; class=&quot;alignnone wp-image-71307 width-fit&quot; srcset=&quot;https://github.blog/wp-content/uploads/2023/04/image.png?resize=2038%2C1334w=2038 2038w, https://github.blog/wp-content/uploads/2023/04/image.png?resize=2038%2C1334w=300 300w, https://github.blog/wp-content/uploads/2023/04/image.png?resize=2038%2C1334w=768 768w, https://github.blog/wp-content/uploads/2023/04/image.png?resize=2038%2C1334w=1024 1024w, https://github.blog/wp-content/uploads/2023/04/image.png?resize=2038%2C1334w=1536 1536w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/managing-alerts-from-secret-scanning#reviewing-github-token-metadata&quot;&gt;GitHub トークンのメタデータを確認する方法を学ぶ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンの詳細&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;フィードバックはありますか？&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;コード セキュリティ ディスカッション&lt;/a&gt;でディスカッションを開いてください。&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71305</post-id></item><item><title>GraphQL API のリポジトリ アーカイブ日付</title><link>https://github.blog/changelog/2023-04-11-repository-archive-date-in-graphql-api</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 11 Apr 2023 20:26:22 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-11-repository-archive-date-in-graphql-api</guid><description>Repository archive date in GraphQL API</description><content:encoded>&lt;p&gt;最近、&lt;a href=&quot;https://github.blog/changelog/2022-11-23-repository-archive-date-now-shown-in-ui/&quot;&gt;リポジトリのアーカイブ日付を GitHub UI に追加した&lt;/a&gt;後、タイムスタンプは GraphQL API 応答でも利用できるようになりました。&lt;/p&gt;
&lt;p&gt;ユーザーは、GitHub &lt;a href=&quot;https://docs.github.com/en/graphql&quot;&gt;GraphQL API&lt;/a&gt;を使用してリポジトリがアーカイブされたときの&lt;code&gt;archivedAt&lt;/code&gt;タイムスタンプを照会できるようになりました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71304</post-id></item><item><title>プル リクエストでのファイルへのコメントの一般提供が開始されました</title><link>https://github.blog/changelog/2023-04-11-commenting-on-files-in-a-pull-request-is-now-generally-available</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 11 Apr 2023 19:40:18 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-11-commenting-on-files-in-a-pull-request-is-now-generally-available</guid><description>Commenting on files in a pull request is now generally available</description><content:encoded>&lt;p&gt;プル リクエスト内のファイル (削除されたファイル、バイナリ ファイル、名前が変更されたファイルを含む) へのコメントは、Web と GitHub モバイルで一般的に利用できるようになりました。 &lt;a href=&quot;https://github.blog/changelog/2023-03-14-comment-on-files-in-a-pull-request-public-beta/&quot;&gt;パブリック ベータ&lt;/a&gt;期間中に&lt;a href=&quot;https://github.com/orgs/community/discussions/49954&quot;&gt;フィードバックを&lt;/a&gt;提供してくれたすべての人に特に感謝します。&lt;/p&gt;
&lt;p&gt; API サポートも利用できるようになりました。ファイルへのコメントの詳細については&lt;a href=&quot;https://docs.github.com/en/rest/pulls/comments?apiVersion=2022-11-28#create-a-review-comment-for-a-pull-request&quot;&gt;、レビュー コメントの作成&lt;/a&gt;(REST API) または&lt;a href=&quot;https://docs.github.com/en/graphql/reference/mutations#addpullrequestreviewthread&quot;&gt;&lt;code&gt;addPullRequestReviewThread&lt;/code&gt;&lt;/a&gt; (GraphQL ミューテーション) を参照してください。コメントが&lt;code&gt;line&lt;/code&gt;または&lt;code&gt;file&lt;/code&gt;どちらにあるかを示す新しい「件名タイプ」フィールドも、他の API によって返されるようになりました。&lt;/p&gt;
&lt;h2 id=&quot;learn-more&quot; id=&quot;learn-more&quot; &gt;もっと詳しく知る&lt;a href=&quot;#learn-more&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Learn more&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request&quot;&gt;プル リクエストへのコメントの&lt;/a&gt;詳細については、こちらをご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71294</post-id></item><item><title>Web インターフェイスからアクション ワークフローのキャッシュを管理する</title><link>https://github.blog/changelog/2023-04-10-manage-caches-in-your-actions-workflows-from-web-interface</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 10 Apr 2023 19:25:00 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-10-auto-draft</guid><description>Caching dependencies and other commonly reused files enables developers to speed up their GitHub Actions workflows and make them more efficient. We have now enabled Cache Management from the web interface to enable developers to get more transparency and control over their cache usage within their GitHub repositories. Actions users who use actions/cache can now: [&amp;#8230;]</description><content:encoded>&lt;p&gt;依存関係やその他の一般的に再利用されるファイルをキャッシュすることで、開発者は GitHub Actions ワークフローを高速化し、より効率的にすることができます。&lt;br /&gt;
 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/actions/using-workflows/caching-dependencies-to-speed-up-workflows#managing-caches&quot;&gt;Web インターフェースからキャッシュ管理を&lt;/a&gt;有効にして、開発者が GitHub リポジトリ内でキャッシュの使用をより透過的に制御できるようにしました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/actions/cache&quot;&gt;アクション/キャッシュ&lt;/a&gt;を使用するアクション ユーザーは、次のことができるようになりました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;リポジトリのすべてのキャッシュ エントリのリストを表示します。&lt;/li&gt;
&lt;li&gt;キャッシュ サイズ、作成時間、最終アクセス時間などの特定のメタデータを使用して、キャッシュのリストをフィルター処理および並べ替えます。&lt;/li&gt;
&lt;li&gt;破損または古いキャッシュ エントリを削除する&lt;/li&gt;
&lt;li&gt;リポジトリと組織の集約キャッシュの使用状況を監視します。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;現在有効になっているキャッシュ管理 UX に加えて、&lt;a href=&quot;https://docs.github.com/en/rest/actions/cache&quot;&gt;キャッシュ API を&lt;/a&gt;使用するか、 &lt;a href=&quot;https://github.com/actions/gh-actions-cache#readme&quot;&gt;Actions キャッシュ用の GitHub CLI 拡張機能&lt;/a&gt;をインストールして、ターミナルからキャッシュを管理することもできます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows&quot;&gt;Actions ワークフローを高速化するための依存関係キャッシュ&lt;/a&gt;の詳細については、こちらをご覧ください。&lt;br /&gt;
質問がある場合、またはフィードバックを共有するには、 &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/actions-and-packages&quot;&gt;GitHub Actions コミュニティ にアクセスしてください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71265</post-id></item><item><title>チームの @メンションの通知を無効にできるようになりました</title><link>https://github.blog/changelog/2023-04-07-notifications-for-team-mentions-can-now-be-disabled</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 07 Apr 2023 13:45:36 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-07-auto-draft</guid><description>Team Maintainers may now disable notifications resulting from a team @mention in GitHub issue and pull request comments through an optional configuration in the team settings page. Notifications resulting from PR review requests are unaffected by this setting. Existing issue and PR subscriptions are also unaffected. This team setting will also be exposed via API. [&amp;#8230;]</description><content:encoded>&lt;p&gt;チーム メンテナーは、チーム設定ページのオプションの構成を使用して、GitHub の問題でのチームの @メンションとプル リクエストのコメントから生じる通知を無効にできるようになりました。 PR レビュー リクエストによる通知は、この設定の影響を受けません。既存の問題と PR サブスクリプションも影響を受けません。このチーム設定も API 経由で公開されます。&lt;/p&gt;
&lt;p&gt;詳細については、 &lt;a href=&quot;https://docs.github.com/en/organizations/organizing-members-into-teams/configuring-team-notifications&quot;&gt;チームのドキュメントを&lt;/a&gt;参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71245</post-id></item><item><title>GitHub の問題とプロジェクト – 4 月 6 日の更新</title><link>https://github.blog/changelog/2023-04-06-github-issues-projects-april-6th-update</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 06 Apr 2023 18:56:19 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-06-github-issues-projects-april-6th-update</guid><description>GitHub Issues &amp; Projects - April 6th update</description><content:encoded>&lt;p&gt;今日の変更ログでは、テーブル レイアウトの一括編集と&lt;a href=&quot;https://docs.github.com/en/issues/tracking-your-work-with-issues/about-tasklists&quot;&gt;タスクリスト&lt;/a&gt;の改善が行われました。 &lt;/p&gt;
&lt;h2 id=&quot;t-rex-bulk-editing-in-tables&quot; id=&quot;t-rex-bulk-editing-in-tables&quot; &gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f996.png?v8&quot; alias=&quot;t-rex&quot;&gt; 🦖&lt;/g-emoji&gt;表の一括編集&lt;a href=&quot;#t-rex-bulk-editing-in-tables&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f996.png?v8&quot; alias=&quot;t-rex&quot;&gt;🦖&lt;/a&gt;&lt;/g-emoji&gt; &lt;a href=&quot;#t-rex-bulk-editing-in-tables&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f996.png?v8&quot; alias=&quot;t-rex&quot;&gt;表の一括編集&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;列内の複数のセルを一度に更新できるようになりました!&lt;/p&gt;

&lt;p&gt;任意のセルの右下にある小さな青い四角形を上下にドラッグして、任意の列のセル範囲を更新します。キーボード コマンドを使用して、同時に複数のセルに値を貼り付けることもできます。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/0031-20e3.png?v8&quot; alias=&quot;one&quot;&gt; 1⃣&lt;/g-emoji&gt; &lt;code&gt;Command+C&lt;/code&gt; (Mac) または&lt;code&gt;Ctrl+C&lt;/code&gt; (Windows) を使用して、値をコピーします。 &lt;/li&gt;
&lt;li&gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/0032-20e3.png?v8&quot; alias=&quot;two&quot;&gt; 2⃣&lt;/g-emoji&gt;&lt;strong&gt;セル&lt;/strong&gt;をクリックし、 &lt;code&gt;Shift&lt;/code&gt;を押しながら列内の別のセルをクリックしてセルの範囲を選択するか、 &lt;code&gt;Command&lt;/code&gt; (Mac) または&lt;code&gt;Ctrl&lt;/code&gt; (Windows) を押しながらセルをクリックして複数のセルを選択して、&lt;strong&gt;隣接していない&lt;/strong&gt;セルを選択します。 &lt;/li&gt;
&lt;li&gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/0033-20e3.png?v8&quot; alias=&quot;three&quot;&gt; 3⃣&lt;/g-emoji&gt; &lt;code&gt;Command+V&lt;/code&gt; (Mac) または&lt;code&gt;Ctrl+V&lt;/code&gt; (Windows) を使用して、選択したセルに値を貼り付けます。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;&amp;#x2705;-tasklist-lockless-editing--live-projects-updates&quot; id=&quot;&amp;#x2705;-tasklist-lockless-editing--live-projects-updates&quot; &gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/2705.png&quot; alt=&quot;✅&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;タスクリストのロックレス編集とプロジェクトのライブ更新&lt;a href=&quot;#&amp;#x2705;-tasklist-lockless-editing--live-projects-updates&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x2705; Tasklist lockless editing &amp; live Projects updates&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;ヒエラルキー チームは懸命に作業しており、課題に関するタスクリストのパフォーマンスを改善し、プロジェクト サイドパネルでは、タスクの編集と制御を 2 倍高速化しています。このクラスの改善を「ロックレス編集」と呼び、将来的にこのアプローチをすべてのタスクリスト操作に組み込む作業を行っています。&lt;/p&gt;
&lt;p&gt;また、プロジェクトに反映されるタスクリストの更新速度も向上しました。以前は数分かかっていた&lt;code&gt;Tracked by&lt;/code&gt;列と&lt;code&gt;Tracks&lt;/code&gt;列への変更が、リアルタイムで反映されるようになりました。 &lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f389.png&quot; alt=&quot;🎉&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;lady_beetle-tasklist-bug-fixes-and-improvements&quot; id=&quot;lady_beetle-tasklist-bug-fixes-and-improvements&quot; &gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png?v8&quot; alias=&quot;lady_beetle&quot;&gt; 🐞&lt;/g-emoji&gt;タスクリストのバグ修正と改善&lt;a href=&quot;#lady_beetle-tasklist-bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png?v8&quot; alias=&quot;lady_beetle&quot;&gt;🐞&lt;/a&gt;&lt;/g-emoji&gt; &lt;a href=&quot;#lady_beetle-tasklist-bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png?v8&quot; alias=&quot;lady_beetle&quot;&gt;タスクリストのバグ修正と改善&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt; 3 ドット メニューで [タスクリストの削除] オプションを選択したときの確認ダイアログを追加しました。&lt;/li&gt;
&lt;li&gt;ユーザーが 1,200 を超える項目をプロジェクトに追加できないようにトーストを追加しました (現在のプロジェクトの&lt;code&gt;Tracked by&lt;/code&gt; )。&lt;/li&gt;
&lt;li&gt;長いタイトルと複数のラベルの問題のロジックと処理の改善&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tracked by&lt;/code&gt; &lt;code&gt;not planned&lt;/code&gt;としてクローズされたときのアイテム状態アイコンを修正しました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tracked by&lt;/code&gt;フィルター提案の幅を広げて、ユーザーが切り捨てずに問題のタイトル全体を読むことができるようにしました&lt;/li&gt;
&lt;li&gt;タスクリスト内の問題の削除と転送、およびタスクリストの問題のサポートが追加されました&lt;/li&gt;
&lt;li&gt;プロジェクトで&lt;code&gt;Tracked By&lt;/code&gt;によってフィルタリングすると、追加されたアイテムは、フィルタリングしている課題の最後のタスクリストに表示されるようになりました&lt;/li&gt;
&lt;li&gt;Markdown ツールバーのタスクリスト ボタンは、テキストを強調表示してタスクリスト ボタンをクリックすると、他の種類のリストとタイトルを受け入れるようになりました&lt;/li&gt;
&lt;li&gt;一部のユーザーがプロジェクト フィルターの [検索&lt;code&gt;Tracked by&lt;/code&gt;メニューのタスクリストに関する問題を表示できなかったエラーを修正しました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tracked by&lt;/code&gt;でグループ化したときに非公開の問題が表示されていたバグを修正しました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tracks&lt;/code&gt;列の完了データが読み込み状態でスタックするバグを修正しました&lt;/li&gt;
&lt;li&gt;ユーザーの操作後にタスクが以前の状態に「戻る」ことがあったエラーを修正しました&lt;/li&gt;
&lt;li&gt;リポジトリへの書き込みアクセス権を持っていないが、課題への書き込みアクセス権を持っているユーザーがタスクリスト オムニバーにアクセスできなかったバグを修正しました&lt;/li&gt;
&lt;li&gt;プロジェクト アイテムのサイド パネルで&lt;code&gt;Tracked by&lt;/code&gt;ピルの誤った表示を修正しました。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;sparkles-bug-fixes-and-improvements&quot; id=&quot;sparkles-bug-fixes-and-improvements&quot; &gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt; ✨&lt;/g-emoji&gt;バグ修正と改善&lt;a href=&quot;#sparkles-bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt;✨&lt;/a&gt;&lt;/g-emoji&gt; &lt;a href=&quot;#sparkles-bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt;バグの修正と改善&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;プロジェクトの説明パネルでスクロールを有効にしました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fields&lt;/code&gt;メニューから切り替えると、ボード アイテムに&lt;code&gt;Repository&lt;/code&gt; ] フィールド ピルが追加されました&lt;/li&gt;
&lt;li&gt;不一致の見積もりをサポートするために、プロジェクトとワークフローのフィルタリングを修正しました&lt;/li&gt;
&lt;li&gt;複数のフィールドの合計を表示する際のレンダリングの問題を修正しました&lt;/li&gt;
&lt;li&gt;プロジェクトのサイドパネルで一部の人魚図がレンダリングされないバグを修正しました&lt;/li&gt;
&lt;li&gt;先頭の空白が原因でフィルターがエラーになるバグを修正しました&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/features/issues&quot;&gt;GitHub の問題&lt;/a&gt;でプロジェクト計画に GitHub を使用する方法を確認し、&lt;a href=&quot;https://github.com/orgs/github/projects/4247/views/7&quot;&gt;ロードマップ&lt;/a&gt;の内容を確認し、&lt;a href=&quot;https://docs.github.com/issues&quot;&gt;ドキュメント&lt;/a&gt;で詳細を確認してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71209</post-id></item></channel></rss>