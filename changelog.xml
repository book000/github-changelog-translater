<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Mon, 08 Aug 2022 18:59:34 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.0.1</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>SAML SSO 中のアカウントの再リンクに関するユーザーへの警告</title><link>https://github.blog/changelog/2022-08-08-warning-users-about-account-relinking-during-saml-sso</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 08 Aug 2022 18:59:34 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-08-08-warning-users-about-account-relinking-during-saml-sso</guid><description>Warning users about account relinking during SAML SSO</description><content:encoded>&lt;p&gt;ユーザー&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/authentication/authenticating-with-saml-single-sign-on/about-authentication-with-saml-single-sign-on&quot;&gt;が SAML SSO を使用して組織にアクセスすると&lt;/a&gt;、GitHub は SAML ID とユーザーの GitHub アカウント間のリンクを保存します。このリンクは、組織または企業内でのアクセスを許可するために、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-saml-single-sign-on-for-your-organization/about-scim-for-organizations&quot;&gt;SCIM&lt;/a&gt;および&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-saml-single-sign-on-for-your-organization/managing-team-synchronization-for-your-organization&quot;&gt;チームの同期&lt;/a&gt;によって使用されます。別の SAML ID でその組織にサインインして&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/organizations/granting-access-to-your-organization-with-saml-single-sign-on/viewing-and-managing-a-members-saml-access-to-your-organization#viewing-and-revoking-a-linked-identity&quot;&gt;このリンクを解除する&lt;/a&gt;と、その組織内のリソースにアクセスできなくなる可能性があります。&lt;/p&gt;
&lt;p&gt;今日から段階的に開始し、明日には完全に展開されます。ユーザーが別の SAML アカウントでサインインして、リンクされた ID を変更しようとすると、警告メッセージが表示されます。 IdP に戻って別のアカウントでサインインするオプションが表示されますが、これは通常正しいオプションです。以前の SAML アカウントへのリンクを解除して新しいアカウントにリンクするつもりである場合は、続行することを選択できます。&lt;/p&gt;
&lt;p&gt;詳細については、「 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/authentication/authenticating-with-saml-single-sign-on/about-authentication-with-saml-single-sign-on&quot;&gt;SAML SSO による認証について&lt;/a&gt;」を参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66456</post-id></item><item><title>すべての GitHub Enterprise ユーザーがセキュリティの概要を利用できるようになりました</title><link>https://github.blog/changelog/2022-08-08-security-overview-is-now-available-to-all-github-enterprise-users</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 08 Aug 2022 18:09:00 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-08-08-security-overview-is-now-available-to-all-github-enterprise-users</guid><description>Security overview is now available to all GitHub Enterprise users</description><content:encoded>&lt;p&gt;GitHub の&lt;a href=&quot;https://docs.github.com/en/code-security/security-overview/about-the-security-overview&quot;&gt;セキュリティ概要&lt;/a&gt;ページへのアクセスを 2 つの方法で拡張しました。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; GitHub Advanced Security だけでなく、すべての GitHub Enterprise アカウントがセキュリティの概要にアクセスできるようになりました&lt;/li&gt;
&lt;li&gt;管理者やセキュリティ マネージャーだけでなく、企業内のすべてのユーザーがセキュリティの概要にアクセスできるようになりました&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;セキュリティの概要では、多くのリポジトリで作業するアプリケーション セキュリティ チーム、エンジニアリング リーダー、および開発者向けに、リスクを一元的に把握できます。組織または企業内でアクセスできるすべてのリポジトリで、コード スキャン、Dependabot、およびシークレット スキャンのアラートが表示されます。セキュリティの概要には、セキュリティ機能が有効になっていないために未知のリスクがある場所も示されます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/code-security/security-overview/about-the-security-overview&quot;&gt;セキュリティの概要の詳細を&lt;/a&gt;確認し&lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;、フィードバックをお送りください&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66455</post-id></item><item><title>GitHub アクション: ランナー イメージ リポジトリの更新</title><link>https://github.blog/changelog/2022-08-08-github-actions-runner-images-repository-refresh</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 08 Aug 2022 15:27:20 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-08-08-github-actions-runner-images-repository-refresh</guid><description>GitHub Actions&amp;#058; runner images repository refresh</description><content:encoded>&lt;p&gt;GitHub がホストするランナーにインストールされたイメージを格納するリポジトリは、actions/virtual-environments から actions/runner-images に名前が変更されました。これらのイメージは GitHub によって維持され、GitHub Actions によって使用されます。&lt;/p&gt;
&lt;p&gt;このリポジトリをフォークした場合、この変更による影響はありません。&lt;/p&gt;
&lt;p&gt;以前の場所をターゲットとするすべての&lt;code&gt;git clone&lt;/code&gt; 、 &lt;code&gt;git fetch&lt;/code&gt; 、または&lt;code&gt;git push&lt;/code&gt;操作は、新しい場所で行われたかのように引き続き機能します。ただし、混乱を避けるために、新しいリポジトリ URL を指すように既存のローカル クローンを更新する必要があります。&lt;/p&gt;
&lt;p&gt;詳細と最新情報については、新しく改善された&lt;a href=&quot;https://github.com/actions/virtual-environments&quot;&gt;ランナー イメージ リポジトリ&lt;/a&gt;にアクセスしてください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66451</post-id></item><item><title>GitHub Enterprise Cloud のお客様は、企業が所有するアセットの監査ログ エントリの IP アドレスにアクセスできます</title><link>https://github.blog/changelog/2022-08-05-github-enterprise-cloud-customers-can-access-ip-addresses-for-audit-log-entries-for-enterprise-owned-assets</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 05 Aug 2022 23:35:28 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-08-05-auto-draft</guid><description>The ability for GitHub Enterprise Cloud owners to display members’ IP addresses for all audit logs events for private repositories and other enterprise assets, such as issues and projects, is generally available. These IP addresses can be used to improve threat analyses and further secure your software. Note, IP addresses will continue to not be [&amp;#8230;]</description><content:encoded>&lt;p&gt;GitHub Enterprise Cloud の所有者が、プライベート リポジトリやその他のエンタープライズ アセット (Issue やプロジェクトなど) のすべての&lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/about-the-audit-log-for-your-enterprise&quot;&gt;監査ログ イベント&lt;/a&gt;のメンバーの IP アドレスを表示する機能が一般提供されました。&lt;/p&gt;
&lt;p&gt;これらの IP アドレスを使用して、脅威分析を改善し、ソフトウェアをさらに保護することができます。&lt;strong&gt;パブリック リポジトリ&lt;/strong&gt;に関連するアクティビティについては、引き続き IP アドレスが表示され&lt;strong&gt;ない&lt;/strong&gt;ことに注意してください。&lt;/p&gt;
&lt;p&gt;詳細について&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/displaying-ip-addresses-in-the-audit-log-for-your-enterprise&quot;&gt;は、企業の監査ログに IP アドレスを表示する方法についてお&lt;/a&gt;読みください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66447</post-id></item><item><title>コミット コメントがプル リクエストのタイムラインに表示されなくなりました</title><link>https://github.blog/changelog/2022-08-04-commit-comments-no-longer-appear-in-the-pull-request-timeline</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 04 Aug 2022 12:50:06 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-08-04-commit-comments-no-longer-appear-in-the-pull-request-timeline</guid><description>Commit comments no longer appear in the pull request timeline</description><content:encoded>&lt;p&gt;プル リクエストのコンテキスト外でコミットに直接追加されたコメント (「コミット コメント」と呼ばれる) は、プル リクエスト タイムラインに表示されなくなり、タイムライン イベント&lt;a href=&quot;https://docs.github.com/en/rest/issues/timeline&quot;&gt;REST&lt;/a&gt;または&lt;a href=&quot;https://docs.github.com/en/graphql/reference/objects#pullrequest&quot;&gt;GraphQL&lt;/a&gt; API によって返されなくなりました。以前は、これらのコメントはタイムラインに表示されていましたが、通常のレビュー コメントのように返信したり解決したりすることはできませんでした。&lt;/p&gt;
&lt;p&gt;注: この変更は、通常のレビュー コメントや、プル リクエストで直接作成されたその他のコメントには影響しません。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66426</post-id></item><item><title>新しい npm 依存関係セレクター構文の紹介</title><link>https://github.blog/changelog/2022-08-03-introducing-the-new-npm-dependency-selector-syntax</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 03 Aug 2022 17:09:48 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-08-03-introducing-the-new-npm-dependency-selector-syntax</guid><description>Introducing the new npm Dependency Selector Syntax</description><content:encoded>&lt;p&gt;&lt;code&gt;npm query&lt;/code&gt;は、 &lt;a href=&quot;https://github.com/npm/cli/releases/tag/v8.16.0&quot;&gt;npm v8.16.0 以降&lt;/a&gt;の新しい最上位コマンドであり、&lt;strong&gt;依存関係セレクター&lt;/strong&gt;( &lt;a href=&quot;https://docs.npmjs.org/cli/v8/using-npm/dependency-selectors#dependency-selector-syntax-v100&quot;&gt;依存関係セレクターの構文仕様&lt;/a&gt;で定義されている) を受け入れ、プロジェクトから依存関係のフィルター処理された JSON 配列/NodeList を返します。私たちは、この機能がパッケージ管理エコシステムに欠けていたと考えています。この導入により、開発者が依存関係、関係、および関連メタデータに関する新しい複雑な質問をセルフサービスで行う可能性を解き放ちたいと考えています。&lt;/p&gt;
&lt;p&gt;多くの JavaScript 開発者にとって、 &lt;strong&gt;Dependency Selector Syntax&lt;/strong&gt;は実際には&lt;strong&gt;CSS&lt;/strong&gt;の適応形式であるため、&lt;em&gt;非常に&lt;/em&gt;見慣れたものに見えます。この既存の既知の言語とその演算子を活用して、さまざまなパッケージ情報に広くアクセスできるようにしました。&lt;/p&gt;
&lt;h4 id=&quot;example-uses&quot; id=&quot;example-uses&quot; &gt;使用例: &lt;a href=&quot;#example-uses&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Example Uses:&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;すべての依存関係を一覧表示したい場合 ( &lt;code&gt;npm list --all&lt;/code&gt;と同様)、次を実行できます。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;npm query &quot;*&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;プロジェクト内のすべてのバージョンの&lt;code&gt;react&lt;/code&gt;と&lt;code&gt;lodash&lt;/code&gt;を見つけたい場合は、次を実行できます。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;npm query &quot;#react, #lodash&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ピアの依存関係として定義されていないすべての&lt;code&gt;react&lt;/code&gt;バージョンを見つけたい場合は、次を実行できます。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;npm query &quot;#react:not(.peer)&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; &lt;code&gt;MIT&lt;/code&gt;ライセンスを使用するプロジェクト内のすべての依存関係を見つけたい場合は、そのクエリを次のように変更します。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;npm query &quot;[license=MIT]&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;プロジェクト内の&lt;strong&gt;すべて&lt;/strong&gt;の git 依存関係を見つけたい場合は、次を実行できます。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;npm query &quot;:type(git)&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;推移的な依存関係のどれが&lt;code&gt;postinstall&lt;/code&gt;スクリプトを使用しているかを知りたい場合は、次のコマンドを実行できます。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;npm query &quot;:attr(scripts, [postinstall]):not(:root &gt; *)&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&quot;programmatic-usage&quot; id=&quot;programmatic-usage&quot; &gt;プログラムによる使用&lt;a href=&quot;#programmatic-usage&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Programmatic Usage&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;エコシステム内の多くの開発者もこの新しい構文を自分で活用したいと考えていることを知っているため、CLI のプログラムの頭脳に組み込みました。内部的には、 &lt;a href=&quot;https://github.com/npm/cli/tree/latest/workspaces/arborist&quot;&gt;&lt;code&gt;@npmcli/arborist&lt;/code&gt;&lt;/a&gt;ライブラリで使用する既存の&lt;code&gt;Node&lt;/code&gt;クラスに新しい&lt;code&gt;.querySelectorAll()&lt;/code&gt;メソッドを追加しました。ツールの作成者は、私たちと同じように、依存関係を読み込んでクエリを実行できるようになりました。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-js&quot;&gt;// index.js
 const Arborist = require(&amp;#39;@npmcli/arborist&amp;#39;)
 const arb = new Arborist({})

 arb.loadActual((tree) =&gt; {
 // query all workspaces
 const results = await tree.querySelectorAll(&amp;#39;.workspace&amp;#39;)
 console.log(results)
 })&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;構文と使用方法の詳細については、こちらのドキュメントをご覧ください: &lt;a href=&quot;https://docs.npmjs.org/cli/v8/using-npm/dependency-selectors&quot;&gt;https://docs.npmjs.org/cli/v8/using-npm/dependency-selectors&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;whats-next&quot; id=&quot;whats-next&quot; &gt;次は何ですか？ &lt;a href=&quot;#whats-next&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What&amp;#039;s next?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;今後、レジストリ メタデータに基づいて新しい疑似状態とセレクターを追加する作業が計画されています。これにより、監査を目的とした別のホストの機能が解放されます (例: &lt;code&gt;:outdated&lt;/code&gt; outdated &lt;code&gt;:deprecated&lt;/code&gt; &lt;code&gt;:vulnerable&lt;/code&gt; &lt;code&gt;:cve()&lt;/code&gt; &amp; &lt;code&gt;:cwe()&lt;/code&gt;が含まれます)。 &lt;a href=&quot;https://github.com/npm/rfcs/blob/3d5b2130504139bdc8a3b599923aa07d2ff79c96/accepted/0000-dependency-selector-syntax.md&quot;&gt;元の RFC 提案&lt;/a&gt;に記載されているように、 &lt;code&gt;query&lt;/code&gt;フラグをサポートするか、 &lt;code&gt;stdin&lt;/code&gt;から既存のコマンドを読み取ることも検討します。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66405</post-id></item><item><title>GitHub アクション: オフラインのセルフホスト ランナーを削除する</title><link>https://github.blog/changelog/2022-08-03-github-actions-remove-offline-self-hosted-runners</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 03 Aug 2022 12:29:04 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-08-03-github-actions-remove-offline-self-hosted-runners</guid><description>GitHub Actions&amp;#058; Remove offline self-hosted runners</description><content:encoded>&lt;p&gt;以前は、最後に接続が確認されてから 30 日間、自己ホスト型 GitHub Action ランナーを GitHub Actions UI に保持していました。エフェメラル ランナーの使用の増加とセルフホステッドの使用の規模の拡大に伴い、これをユーザーが管理するのは難しくなっています。その結果、オフラインランナーを保持する時間に次の変更を加えています。&lt;/p&gt;
&lt;p&gt;非一時的な自己ホスト型 Actions ランナーは、GitHub への接続が 14 日以上確認されていない場合、GitHub から自動的に削除されます。&lt;/p&gt;
&lt;p&gt;エフェメラル セルフホスト アクション ランナーは、GitHub への接続が 1 日以上確認されていない場合、GitHub から自動的に削除されます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#about-self-hosted-runners&quot;&gt;GitHub Actions でセルフホスト ランナーの詳細を確認する&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.community/c/code-to-cloud/github-actions/41&quot;&gt;質問がある場合は、GitHub Actions コミュニティにアクセスしてください&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/github/roadmap/projects/1?card_filter_query=label%3Aactions&quot;&gt;Actions の次の予定を確認するには、公開ロードマップにアクセスしてください&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66404</post-id></item><item><title>プライバシーに関する声明の更新: エンタープライズ マーケティング サブドメインへの Web Cookie の追加</title><link>https://github.blog/changelog/2022-08-02-privacy-statement-updates-adding-web-cookies-to-enterprise-marketing-subdomains</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 02 Aug 2022 20:32:50 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-08-02-privacy-statement-updates-adding-web-cookies-for-enterprise-users</guid><description>Privacy statement updates: Adding web cookies to enterprise marketing subdomains</description><content:encoded>&lt;p&gt;[2022 年 8 月 2 日] 更新: 企業ユーザーのウェブ エクスペリエンスを向上させ、改善するために、特定のサブドメインに必須ではないウェブ Cookie を追加します。これは、特に企業向けに製品を販売するためのものです。これらの Cookie は、企業のお客様により良いサイト エクスペリエンスを改善および提供するのに役立つ分析を提供し、パーソナライズされたコンテンツと企業向けソリューションに関するマーケティングを通じて、企業向けのサポートを強化できるようにします。&lt;/p&gt;
&lt;p&gt;開発者コミュニティは引き続き GitHub の中心であり、製品を使用する開発者のプライバシーを尊重することをお約束します。また、エンタープライズ ユーザーの開発者エクスペリエンスを向上させ、企業がエンタープライズ ソリューションを見つけやすくする必要があることも認識しています。この変更は、GitHub が企業の顧客に製品やサービスを販売しているサブドメインにのみ適用され、他のすべての GitHub サブドメインはそのまま動作し続けます。&lt;/p&gt;
&lt;p&gt;変更が有効になるまでの 30 日間は、&lt;a href=&quot;https://github.com/github/site-policy/pull/582/files&quot;&gt;こちら&lt;/a&gt;で詳細を確認し、フィードバックを送信できます。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66400</post-id></item><item><title>組織レベルのセキュリティ マネージャー ロールで REST API を使用できるようになりました (パブリック ベータ)</title><link>https://github.blog/changelog/2022-08-01-rest-api-now-available-for-the-organization-level-security-manager-role-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 01 Aug 2022 15:16:03 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-08-01-rest-api-now-available-for-the-organization-level-security-manager-role-public-beta</guid><description>REST API now available for the organization-level security manager role (Public Beta)</description><content:encoded>&lt;p&gt;セキュリティ マネージャー ロールのパブリック ベータに参加している組織は、GitHub REST API を介してセキュリティ マネージャー チームを管理できるようになりました。さらに、従来の組織もパブリック ベータに参加できるようになりました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/rest/orgs/security-managers&quot;&gt;セキュリティ マネージャー REST API の詳細を&lt;/a&gt;&lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;確認し、フィードバックをお送りください&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/features/security&quot;&gt;GitHub の高度なセキュリティについて詳しく知る&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66361</post-id></item><item><title>CodeQL アクションから詳細なログとデバッグ アーティファクトを取得することで、コード スキャンでの CodeQL 分析のデバッグが容易になりました。</title><link>https://github.blog/changelog/2022-08-01-debugging-codeql-analysis-in-code-scanning-made-easier-by-obtaining-detailed-logs-and-debugging-artifacts-from-the-codeql-action</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 01 Aug 2022 11:45:48 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-08-01-debugging-codeql-analysis-in-code-scanning-made-easier-by-obtaining-detailed-logs-and-debugging-artifacts-from-the-codeql-action</guid><description>Debugging CodeQL analysis in code scanning made easier by obtaining detailed logs and debugging artifacts from the CodeQL Action</description><content:encoded>&lt;p&gt;コード スキャンで CodeQL 分析の問題を簡単にデバッグできるようになりました。GitHub Actions ワークフロー実行ページから [&lt;strong&gt;ジョブを再実行&lt;/strong&gt;] をクリックし、[&lt;strong&gt;デバッグ ログ&lt;/strong&gt;を有効にする] ボックスをオンにして、[&lt;strong&gt;ジョブ&lt;/strong&gt;を再実行] ボタンをクリックします。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/user-images.githubusercontent.com/14129055/179047426-c35ed6f8-5842-4b33-a736-45ec4b895c1f.png?ssl=1&quot; alt=&quot;すべてのジョブを再実行します&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;データは&lt;code&gt;debug-artifacts&lt;/code&gt;という名前の Actions アーティファクトとしてアップロードされ、ワー​​クフローの実行に添付されます。このようなアーティファクトには、CodeQL ログ、CodeQL データベース、および生成された SARIF ファイルが含まれます。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/user-images.githubusercontent.com/14129055/179047435-808313b5-8365-4e5d-a7aa-b90e69761b4f.png?ssl=1&quot; alt=&quot;アクション アーティファクト&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;これらのアーティファクトは、 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-with-codeql&quot;&gt;CodeQL コード スキャン&lt;/a&gt;の問題をデバッグするときに役立ちます。 GitHub サポートに連絡すると、このデータの提供を求められる場合があります。&lt;/p&gt;
&lt;p&gt;分析の一環として、CodeQL はソース コードをリレーショナル データベース形式に&lt;em&gt;抽出&lt;/em&gt;します。デバッグ アーティファクトには、データベースの作成中に発生した CodeQL 抽出エラーと警告に関する詳細情報が含まれています。 CodeQL 分析のデバッグ ログを永続的に有効にする場合、または CodeQL のトラブルシューティングに関する詳細情報が必要な場合は、次&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow&quot;&gt;の手順&lt;/a&gt;に従ってください。&lt;/p&gt;
&lt;p&gt;この機能は、GitHub.com のすべてのユーザーが利用できるようになり、GitHub Enterprise Server 3.7 でも利用できるようになります。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66360</post-id></item></channel></rss>