<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>Changelogs Archive - The GitHub Blog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Tue, 11 Jun 2024 19:15:45 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.5.4</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Changelogs Archive - The GitHub Blog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>マニフェスト ファイルに範囲が含まれる場合、生成された SBOM ファイルにパッケージ URL が含まれるようになりました。</title><link>https://github.blog/changelog/2024-06-11-generated-sbom-files-will-now-include-a-package-url-when-a-manifest-file-includes-a-range</link><dc:creator>Allison</dc:creator><pubDate>Tue, 11 Jun 2024 16:24:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-11-generated-sbom-files-will-now-include-a-package-url-when-a-manifest-file-includes-a-range</guid><description>&lt;p&gt;Generated SBOM files will now include a package URL when a manifest file includes a range&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-11-generated-sbom-files-will-now-include-a-package-url-when-a-manifest-file-includes-a-range&quot;&gt;Generated SBOM files will now include a package URL when a manifest file includes a range&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;このリリースまでは、マニフェスト ファイルにパッケージのバージョン範囲 (例: &lt;code&gt;version &lt; 3&lt;/code&gt; ) が含まれている場合、GitHub がそのパッケージの SBOM を生成するときに、パッケージ URL ( &lt;a href=&quot;https://github.com/package-url/purl-spec&quot;&gt;purl&lt;/a&gt; ) は含まれませんでした。 SBOM の生成が改善され、マニフェスト ファイルが範囲内のパッケージを参照するときに、仕様のオプション要素である&lt;code&gt;version&lt;/code&gt;フィールドではなく、purl が含まれるようになりました。これにより、以前に SBOM で生成したものよりも完全なデータが得られ、ユーザーがリポジトリで使用されているパッケージをより明確に識別できるようになります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-11-generated-sbom-files-will-now-include-a-package-url-when-a-manifest-file-includes-a-range&quot;&gt;「マニフェスト ファイルに範囲が含まれている場合、生成された SBOM ファイルにパッケージ URL が含まれるようになりました」という&lt;/a&gt;投稿が最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に登場しました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78361</post-id></item><item><title>CodeQL 2.17.4: 拡張クエリの自動修正、C++ PR スキャンの高速化</title><link>https://github.blog/changelog/2024-06-11-codeql-2-17-4-autofixes-for-extended-queries-faster-c-pr-scans</link><dc:creator>Allison</dc:creator><pubDate>Tue, 11 Jun 2024 14:46:14 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-11-codeql-2-17-4-autofixes-for-extended-queries-faster-c-pr-scans</guid><description>&lt;p&gt;CodeQL 2.17.4: Autofixes for Extended queries, faster C++ PR scans&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-11-codeql-2-17-4-autofixes-for-extended-queries-faster-c-pr-scans&quot;&gt;CodeQL 2.17.4: Autofixes for Extended queries, faster C++ PR scans&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;CodeQL は、GitHub コード スキャンを強化する静的分析エンジンです。 CodeQL バージョン 2.17.4 がリリースされ、GitHub.com でコード スキャン ユーザーに公開されました。&lt;/p&gt;
&lt;p&gt;この変更ログには&lt;code&gt;2.17.3&lt;/code&gt; CodeQL &lt;code&gt;2.17.2&lt;/code&gt; 、および&lt;code&gt;2.17.4&lt;/code&gt;のリリースからの重要な更新が結合されています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コパイロットを利用した自動修正が、自動修正でサポートされている言語 (JS/TS、Go、Java、C#、Ruby、Python) の&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/managing-your-code-scanning-configuration/codeql-query-suites#query-lists-for-the-default-query-suites&quot;&gt;拡張クエリ スイートの一部である&lt;/a&gt;クエリで使用できるようになりました。&lt;/li&gt;
&lt;li&gt;すべてのローカル クエリのバリアントは&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.4/#java&quot;&gt;Java から削除され&lt;/a&gt;ました。彼らの動作は&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/managing-your-code-scanning-configuration/editing-your-configuration-of-default-setup#including-local-sources-of-tainted-data-in-default-setup&quot;&gt;、ローカルの脅威モデル&lt;/a&gt;を使用して再現できます。&lt;/li&gt;
&lt;li&gt;プル リクエストの C++ 分析のキャッシュが改善されたことで、スキャン時間が中央値 12% 改善されました。&lt;/li&gt;
&lt;li&gt; C/C++ &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.2/#c-c-2&quot;&gt;ZeroMQ (ZMQ) ライブラリ&lt;/a&gt;、Python &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.3/#python-1&quot;&gt;ピラミッド&lt;/a&gt;フレームワーク、 &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.3/#python-1&quot;&gt;gradio&lt;/a&gt;パッケージのサポートが追加されました。&lt;/li&gt;
&lt;li&gt;破棄されようとしている一時オブジェクトが所有するイテレータの作成を検出するための新しいクエリ&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.3/#c-c&quot;&gt;&lt;code&gt;cpp/iterator-to-expired-container&lt;/code&gt;&lt;/a&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.3/#python&quot;&gt;&lt;code&gt;py/header-injection&lt;/code&gt;&lt;/a&gt;クエリはメイン クエリ パックに昇格され、名前が&lt;code&gt;py/http-response-splitting&lt;/code&gt;に変更されました。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;変更の完全なリストについては、バージョン&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.2/&quot;&gt;2.17.2&lt;/a&gt; 、 &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.3/&quot;&gt;2.17.3&lt;/a&gt; 、および&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.4/#&quot;&gt;2.17.4&lt;/a&gt;の完全な変更ログを参照してください。すべての新機能は GHES 3.14 にも含まれます。 GHES 3.13 以前のユーザーは&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.13/admin/code-security/managing-github-advanced-security-for-your-enterprise/configuring-code-scanning-for-your-appliance#configuring-codeql-analysis-on-a-server-without-internet-access&quot;&gt;、CodeQL バージョン&lt;/a&gt;をアップグレードできます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-11-codeql-2-17-4-autofixes-for-extended-queries-faster-c-pr-scans&quot;&gt;CodeQL 2.17.4: 拡張クエリの自動修正、より高速な C++ PR スキャンの&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78352</post-id></item><item><title>OAuth および GitHub アプリのサインイン用のアカウント ピッカーの更新</title><link>https://github.blog/changelog/2024-06-07-account-picker-updates-for-oauth-and-github-app-sign-in</link><dc:creator>Allison</dc:creator><pubDate>Fri, 07 Jun 2024 17:22:50 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-07-account-picker-updates-for-oauth-and-github-app-sign-in</guid><description>&lt;p&gt;Account picker updates for OAuth and GitHub App sign-in&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-07-account-picker-updates-for-oauth-and-github-app-sign-in&quot;&gt;Account picker updates for OAuth and GitHub App sign-in&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;セキュリティと利便性のため、OAuth または GitHub アプリケーションへのサインイン中にアカウント ピッカーをトリガーする方法を更新しました。一部のアプリは常にこれを認識しますが、すべてのアプリは手動でトリガーできます。&lt;/p&gt;
&lt;p&gt;ネイティブ アプリ ( &lt;code&gt;https://&lt;/code&gt;宛先につながらないコールバック URI を持つアプリ) は常にアカウント ピッカーを受信し、ユーザーがアプリケーションを確認し、必要に応じてアカウントを変更する機会を確保できるようになります。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; width=&quot;335&quot; alt=&quot;画像&quot; src=&quot;https://github.com/github/release-assets/assets/1666363/371d2525-350c-4562-bd42-042dbd54a61a&quot;&gt;&lt;/p&gt;
&lt;p&gt;また、 &lt;code&gt;select_account&lt;/code&gt;引数を使用した標準&lt;code&gt;prompt&lt;/code&gt;パラメーターのサポートも追加しました。これは、アプリが&lt;code&gt;/authorize&lt;/code&gt;への OAuth 承認リクエスト中に提供できます。このパラメータを使用すると、認証中にアカウント ピッカーが強制的に表示され、インスタント認証フローが中断されます。ユーザーがアプリ内で&lt;em&gt;別の&lt;/em&gt;アカウントを使用したいと示した場合、アプリ内で一度に複数のアカウントをより適切にサポートするには、このパラメーターを使用することをお勧めします。&lt;/p&gt;
&lt;p&gt;アカウント ピッカーを強制するには、ユーザーを GitHub に送信してサインインするときに、クライアント ID とリダイレクト URI パラメーターの横に&lt;code&gt;&amp;prompt=select_account&lt;/code&gt;追加します。&lt;/p&gt;
&lt;p&gt;以前と同様、複数のサインイン アカウントを持つユーザーには、認証ごとに常にアカウント ピッカーが表示されます。&lt;/p&gt;
&lt;p&gt; OAuth フローのクエリ パラメーターの詳細については、 &lt;a href=&quot;https://docs.github.com/apps/oauth-apps/building-oauth-apps/authorizing-oauth-apps&quot;&gt;「OAuth アプリの承認」&lt;/a&gt;と&lt;a href=&quot;https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-user-access-token-for-a-github-app#using-the-web-application-flow-to-generate-a-user-access-token&quot;&gt;「GitHub アプリのユーザー アクセス トークンの生成」&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-06-07-account-picker-updates-for-oauth-and-github-app-sign-in&quot;&gt;OAuth および GitHub アプリのサインイン用のアカウント ピッカーの更新&lt;/a&gt;最初に登場したのは&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;です。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78310</post-id></item><item><title>コードセキュリティ構成を強制できるようになりました</title><link>https://github.blog/changelog/2024-06-06-code-security-configurations-can-now-be-enforced</link><dc:creator>Allison</dc:creator><pubDate>Thu, 06 Jun 2024 16:29:08 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-06-auto-draft</guid><description>&lt;p&gt;Configurations are collections of security settings that organization administrators and security managers can define to help roll out GitHub security products at scale. Starting today, you can enforce configurations. This new feature allows you to prevent users at the repository level from changing the security features that have been enabled and disabled in the configuration [&amp;#8230;]&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-06-code-security-configurations-can-now-be-enforced&quot;&gt;Code security configurations can now be enforced&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2024-04-02-code-security-configurations-let-organizations-easily-roll-out-github-security-products-at-scale/&quot;&gt;構成は&lt;/a&gt;、組織管理者とセキュリティ マネージャーが GitHub セキュリティ製品を大規模に展開するために定義できるセキュリティ設定の集合です。&lt;/p&gt;
&lt;p&gt;本日より、構成を強制できるようになります。この新機能により、リポジトリにアタッチされた構成で有効または無効になっているセキュリティ機能をユーザーがリポジトリ レベルで変更できないようにすることができます。&lt;/p&gt;
&lt;p&gt;構成編集ページの下部のポリシー セクションで、構成を強制または非強制としてマークできます。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/8700883/1367437c-f43b-4506-94ef-1b0f75091c44&quot; alt=&quot;構成の強制&quot; /&gt;&lt;/p&gt;
&lt;p&gt;セキュリティ構成は現在、GitHub.com のパブリック ベータ版で利用可能であり、GitHub Enterprise Server 3.15 で利用可能になる予定です。 &lt;a href=&quot;https://docs.github.com/en/code-security/securing-your-organization/introduction-to-securing-your-organization-at-scale/about-enabling-security-features-at-scale&quot;&gt;セキュリティ構成について詳しく知る&lt;/a&gt;か、&lt;a href=&quot;https://github.com/orgs/community/discussions/114519&quot;&gt;フィードバックをお送りください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2024-06-06-code-security-configurations-can-now-be-enforced&quot;&gt;コード セキュリティ構成を強制できるようになったという&lt;/a&gt;記事は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78297</post-id></item><item><title>GitHub Copilot コンプライアンス: SOC 2、Type 1 レポートおよび ISO/IEC 27001:2013 認証範囲</title><link>https://github.blog/changelog/2024-06-03-github-copilot-compliance-soc-2-type-1-report-and-iso-iec-270012013-certification-scope</link><dc:creator>Allison</dc:creator><pubDate>Mon, 03 Jun 2024 19:48:07 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-03-github-copilot-compliance-soc-2-type-1-report-and-iso-iec-270012013-certification-scope</guid><description>&lt;p&gt;GitHub Copilot Compliance: SOC 2, Type 1 Report and ISO/IEC 27001:2013 Certification Scope&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-03-github-copilot-compliance-soc-2-type-1-report-and-iso-iec-270012013-certification-scope&quot;&gt;GitHub Copilot Compliance: SOC 2, Type 1 Report and ISO/IEC 27001:2013 Certification Scope&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub Copilot Business および Copilot Enterprise でコンプライアンス レポートが利用可能になったことを発表できることを嬉しく思います。具体的には、GitHub は、Copilot Business の SOC 2 Type I レポート (IDE でのコード補完、IDE、CLI、およびモバイルでのチャットを含む) を公開しました。このタイプ 1 レポートは、Copilot Business がサービスのセキュリティを保護するために必要な制御を備えていることを示しています。 Copilot Business と Copilot Enterprise は、2024 年後半に予定されている次回の SOC 2 Type 2 レポートに含まれる予定で、対象期間は 2024 年 4 月 1 日から 9 月 30 日までです。&lt;/p&gt;
&lt;p&gt;さらに、2024 年 5 月 9 日に更新された ISO 27001 認証に反映されているように、Copilot Business と Copilot Enterprise は GitHub の情報セキュリティ管理システムの範囲に含まれるようになりました。この認証は、Copilot Business と Copilot Enterprise が同じものを使用して開発および運用されていることを示しています。セキュリティ プロセスと標準は、GitHub の他の製品と同様です。&lt;/p&gt;
&lt;p&gt;これらのレポートは、セキュリティとコンプライアンスの高い基準をお客様に実証するという GitHub の取り組みを反映しています。詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/overview/accessing-compliance-reports-for-your-enterprise&quot;&gt;企業&lt;/a&gt;または&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/accessing-compliance-reports-for-your-organization&quot;&gt;組織の&lt;/a&gt;コンプライアンス レポートおよび認証にアクセスする方法に関するドキュメントを参照してください。&lt;/p&gt;
&lt;p&gt; The post &lt;a href=&quot;https://github.blog/changelog/2024-06-03-github-copilot-compliance-soc-2-type-1-report-and-iso-iec-270012013-certification-scope&quot;&gt;GitHub Copilot Compliance: SOC 2, Type 1 Report and ISO/IEC 27001:2013 Certification Scope&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78284</post-id></item><item><title>dependabot がプライベート Cargo レジストリをサポートするようになりました</title><link>https://github.blog/changelog/2024-06-03-dependabot-now-supports-private-cargo-registries</link><dc:creator>Allison</dc:creator><pubDate>Mon, 03 Jun 2024 19:25:04 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-03-dependabot-now-supports-private-cargo-registries</guid><description>&lt;p&gt;Dependabot now supports private Cargo registries&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-03-dependabot-now-supports-private-cargo-registries&quot;&gt;Dependabot now supports private Cargo registries&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;dependabot は、Cargo プライベート レジストリにアクセスすることで、Rust の依存関係に更新を提供できるようになりました。&lt;/p&gt;
&lt;p&gt;詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/working-with-dependabot/guidance-for-the-configuration-of-private-registries-for-dependabot#about-configuring-private-registries-for-dependabot&quot;&gt;Dependabot のプライベート レジストリの構成&lt;/a&gt;に関するドキュメントを参照してください。&lt;/p&gt;
&lt;p&gt;この記事は&lt;a href=&quot;https://github.blog/changelog/2024-06-03-dependabot-now-supports-private-cargo-registries&quot;&gt;、Dependabot がプライベート Cargo レジストリをサポートするようになり&lt;/a&gt;ました appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; 。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78283</post-id></item><item><title>アクション: 企業はネットワーク構成を組織に委任できるようになりました</title><link>https://github.blog/changelog/2024-06-03-actions-enterprises-can-now-delegate-network-configurations-to-their-organizations</link><dc:creator>Allison</dc:creator><pubDate>Mon, 03 Jun 2024 17:48:13 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-03-actions-enterprises-can-now-delegate-network-configurations-to-their-organizations</guid><description>&lt;p&gt;Actions: Enterprises can now delegate network configurations to their organizations&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-03-actions-enterprises-can-now-delegate-network-configurations-to-their-organizations&quot;&gt;Actions: Enterprises can now delegate network configurations to their organizations&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;企業内の組織が、企業とは独立して Azure プライベート ネットワーク用のネットワーク構成を作成できるようになったということを発表できることをうれしく思います。 Azure プライベート ネットワークは、セキュリティやパフォーマンスを犠牲にすることなく、Azure 仮想ネットワークに接続された GitHub でホストされているランナー上でアクション ワークフローを実行できる強力な機能です。以前は、チーム プランに関連付けられた企業および組織のみがネットワーク構成を作成できました。これにより、ネットワーク構成の管理を委任された管理者にとってボトルネックが発生しました。&lt;/p&gt;
&lt;p&gt;今後、エンタープライズ管理者は、エンタープライズ ポリシーの [ホスト型コンピューティング ネットワーク] セクションに移動し、[有効] を選択することで、この機能を有効にすることができます。この設定が保存されると、企業に関連付けられたすべての組織が独自のネットワーク構成を作成できるようになります。 &lt;/p&gt;
&lt;p&gt;&lt;img fetchpriority=&quot;high&quot; decoding=&quot;async&quot; class=&quot;width-fit alignnone wp-image-78278 size-full&quot; src=&quot;https://github.blog/wp-content/uploads/2024/06/335248701-0d102867-14f3-46f8-a6ef-2304dc809e21.png?resize=782%2C261&quot; alt=&quot;&quot; width=&quot;782&quot; height=&quot;261&quot; srcset=&quot;https://github.blog/wp-content/uploads/2024/06/335248701-0d102867-14f3-46f8-a6ef-2304dc809e21.png?resize=782%2C261?w=782 782w, https://github.blog/wp-content/uploads/2024/06/335248701-0d102867-14f3-46f8-a6ef-2304dc809e21.png?resize=782%2C261?w=300 300w, https://github.blog/wp-content/uploads/2024/06/335248701-0d102867-14f3-46f8-a6ef-2304dc809e21.png?resize=782%2C261?w=768 768w&quot; sizes=&quot;(max-width: 782px) 100vw, 782px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt; Actions で Azure プライベート ネットワークの使用を開始するには、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/configuration/configuring-private-networking-for-hosted-compute-products/configuring-private-networking-for-github-hosted-runners-in-your-enterprise&quot;&gt;このガイド&lt;/a&gt;に従って Azure リソースを構成し、Actions ネットワーク構成を作成する手順を説明します。詳細については、 &lt;a href=&quot;https://docs.github.com/en/actions/using-github-hosted-runners/connecting-to-a-private-network/about-private-networking-with-github-hosted-runners#using-an-azure-virtual-network-vnet&quot;&gt;こちらの&lt;/a&gt;ドキュメントをご覧ください。 Azure プライベート ネットワーキングは GitHub Enterprise Cloud および Team プランで利用できることに注意してください。&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-06-03-actions-enterprises-can-now-delegate-network-configurations-to-their-organizations&quot;&gt;「アクション: 企業はネットワーク構成を組織に委任できるようになりました」&lt;/a&gt; first appeared on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78276</post-id></item><item><title>新しい Enterprise アカウントでは、Git LFS の従量課金が行われます</title><link>https://github.blog/changelog/2024-06-03-new-enterprise-accounts-have-metered-billing-for-git-lfs</link><dc:creator>Allison</dc:creator><pubDate>Mon, 03 Jun 2024 16:56:16 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-03-new-enterprise-accounts-have-metered-billing-for-git-lfs</guid><description>&lt;p&gt;New Enterprise accounts have metered billing for Git LFS&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-03-new-enterprise-accounts-have-metered-billing-for-git-lfs&quot;&gt;New Enterprise accounts have metered billing for Git LFS&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;2024 年 6 月 2 日以降に作成された GitHub.com のエンタープライズ アカウントと、これらのアカウントが所有する組織は、強化された課金プラットフォームにアクセスできます。これには&lt;strong&gt;、Git Large File Storage (LFS) の強化された課金&lt;/strong&gt;が含まれます。ベータ プログラムに参加した企業もこのプラットフォームにアクセスできます。 GitHub.com の他の Enterprise アカウント、Free、Pro、Team アカウントは、今後数か月以内に強化された課金プラットフォームにアクセスできるようになります。&lt;/p&gt;
&lt;p&gt;強化された課金プラットフォームにより、Git LFS は前払いの割り当てベースのモデル (データ パック) から後払いの使用量ベースのモデル (従量課金) に移行します。この新しいプラットフォームは、より優れた支出管理と詳細な可視性を提供し、よりきめ細かい管理で使用状況をより明確に理解できるようになります。&lt;/p&gt;
&lt;p&gt;さらに、GitHub は、強化された課金プラットフォーム上のエンタープライズ アカウント向けに、無料で含まれる Git LFS リソースの量を増やしています。今後は、毎月 250 GiB のストレージと 250 GiB のダウンロード帯域幅を無料で利用できるようになります。これらの金額を超えると、Git LFS ファイルのストレージの費用は GiB あたり月額 0.07 ドル (USD)、ダウンロード帯域幅の費用は GiB あたり月額 0.0875 ドル (USD) になります。&lt;/p&gt;
&lt;p&gt;詳細については、「 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/billing/using-the-enhanced-billing-platform-for-enterprises/about-enhanced-billing-for-git-large-file-storage&quot;&gt;Git Large File Storage の拡張課金について&lt;/a&gt;」および「 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/billing/using-the-enhanced-billing-platform-for-enterprises&quot;&gt;エンタープライズ向けの拡張課金プラットフォームの使用&lt;/a&gt;」を参照してください。&lt;/p&gt;
&lt;p&gt;ご質問またはご提案はありますか? &lt;a class=&quot;c-link&quot; href=&quot;https://github.com/orgs/community/discussions/126753&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; data-stringify-link=&quot;https://github.com/orgs/community/discussions/125067&quot; data-sk=&quot;tooltip_parent&quot;&gt;コミュニティディスカッション&lt;/a&gt;の会話に参加してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-06-03-new-enterprise-accounts-have-metered-billing-for-git-lfs&quot;&gt;新しいエンタープライズ アカウントで Git LFS の課金が従量制になったという&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78275</post-id></item><item><title>アクション: Arm ベースの Linux および Windows ランナーがパブリック ベータ版になりました</title><link>https://github.blog/changelog/2024-06-03-actions-arm-based-linux-and-windows-runners-are-now-in-public-beta</link><dc:creator>Allison</dc:creator><pubDate>Mon, 03 Jun 2024 16:39:15 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-03-actions-arm-based-linux-and-windows-runners-are-now-in-public-beta</guid><description>&lt;p&gt;Actions: Arm-based linux and windows runners are now in public beta&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-03-actions-arm-based-linux-and-windows-runners-are-now-in-public-beta&quot;&gt;Actions: Arm-based linux and windows runners are now in public beta&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;本日、GitHub は、GitHub Actions 用の ArmⓇ ベースの Linux および Windows ホスト ランナーの&lt;a href=&quot;https://github.blog/2024-06-03-arm64-on-github-actions-powering-faster-more-efficient-build-systems/&quot;&gt;パブリック ベータ版を発表しました&lt;/a&gt;。&lt;br /&gt;
ホストされたランナーのスイートに新たに追加されたこの機能により、すべてのアクション ジョブのパワー、パフォーマンス、持続可能性が向上します。開発者は、GitHub がホストする Arm ベースのハードウェアを利用して、Arm アーキテクチャが使用されているあらゆる場所でリリース アセットを構築およびデプロイできるようになりました。これらのランナーの価格は、x64 Linux および Windows ランナーより 37% 低くなっています。&lt;/p&gt;
&lt;p&gt; Arm64 ランナーは、開発者が開始するために必要なすべてのツールを含む Arm によって構築されたイメージを使用して、GitHub によって完全に管理されます。インストールされているソフトウェアのリストを表示したり、フィードバックを送信したり、イメージに関する問題を報告したりするには、新しい&lt;a href=&quot;https://github.com/actions/partner-runner-images&quot;&gt;パートナー ランナー イメージ&lt;/a&gt;リポジトリにアクセスしてください。&lt;/p&gt;
&lt;p&gt;アーム ランナーは、チーム プランおよびエンタープライズ クラウド プランのお客様にご利用いただけます。年末までに、オープンソースおよび個人アカウント向けの Arm ランナーの提供を開始する予定です。&lt;/p&gt;
&lt;h2 id=&quot;get-started&quot;&gt;始めましょう&lt;a href=&quot;#get-started&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Get Started&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;お客様は、組織/企業内で Arm ランナーを作成し、アクション ワークフロー ファイル内の&lt;code&gt;runs-on&lt;/code&gt;構文を更新してそのランナー名を呼び出すことで、今すぐこれらのランナーの使用を開始できます。&lt;br /&gt;
 Arm ホスト ランナーのセットアップ方法の詳細については、公開&lt;a href=&quot;https://docs.github.com/en/actions/using-github-hosted-runners/about-larger-runners/about-larger-runners&quot;&gt;ドキュメント&lt;/a&gt;を参照してください。&lt;br /&gt;
ホストされるランナーの 1 分あたりの料金の詳細については、 &lt;a href=&quot;https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions#per-minute-rates&quot;&gt;料金表&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;これらのランナーに関するフィードバックをお待ちしています。GitHub&lt;a href=&quot;https://github.com/orgs/community/discussions/127102&quot;&gt;コミュニティ ディスカッション&lt;/a&gt;でご意見をお聞かせください。&lt;/p&gt;
&lt;p&gt; The post &lt;a href=&quot;https://github.blog/changelog/2024-06-03-actions-arm-based-linux-and-windows-runners-are-now-in-public-beta&quot;&gt;Actions: Arm-based linux and Windowsrunner are now in public beta&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; 。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78274</post-id></item><item><title>スポンサーシップの支払いオプションとしての請求書が簡単に</title><link>https://github.blog/changelog/2024-06-03-invoice-as-a-payment-option-for-sponsorships-made-easy</link><dc:creator>Allison</dc:creator><pubDate>Mon, 03 Jun 2024 16:06:42 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-06-03-invoice-as-a-payment-option-for-sponsorships-made-easy</guid><description>&lt;p&gt;Invoice as a Payment Option for Sponsorships Made Easy&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-06-03-invoice-as-a-payment-option-for-sponsorships-made-easy&quot;&gt;Invoice as a Payment Option for Sponsorships Made Easy&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;組織が GitHub スポンサーの支払いオプションとして請求書をリクエストするプロセスを合理化しました。請求書による支払いのサービス契約は請求書リクエスト フローから除外され、 &lt;a href=&quot;https://docs.github.com/site-policy/github-terms/github-sponsors-additional-terms&quot;&gt;GitHub スポンサーの追加条件&lt;/a&gt;に追加されました。&lt;/p&gt;
&lt;p&gt;あなたの組織がすでにスポンサーシップの請求書を受け取っている場合でも、心配する必要はありません。請求書発行と現在の契約は変更されません。&lt;/p&gt;
&lt;p&gt; GitHub スポンサーへの請求書支払いの詳細については、 &lt;a href=&quot;https://docs.github.com/sponsors/sponsoring-open-source-contributors/paying-for-github-sponsors-by-invoice&quot;&gt;「請求書による GitHub スポンサーへの支払い&lt;/a&gt;」を参照してください。&lt;/p&gt;
&lt;p&gt;投稿「 &lt;a href=&quot;https://github.blog/changelog/2024-06-03-invoice-as-a-payment-option-for-sponsorships-made-easy&quot;&gt;スポンサーシップの支払いオプションとしての請求書を簡単に作成」&lt;/a&gt; first appeared on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">78272</post-id></item></channel></rss>