<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Tue, 18 Apr 2023 22:46:38 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>REST API を使用して非公開の脆弱性レポートを開く</title><link>https://github.blog/changelog/2023-04-18-open-a-private-vulnerability-report-with-rest-api</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 18 Apr 2023 22:46:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-18-open-a-private-vulnerability-report-with-rest-api</guid><description>Open a private vulnerability report with REST API</description><content:encoded>&lt;p&gt;REST API を使用して、この機能が有効になっているオープンソース リポジトリで&lt;a href=&quot;https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability&quot;&gt;非公開の脆弱性レポート&lt;/a&gt;を開くことができるようになりました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/rest/security-advisories/repository-advisories?apiVersion=2022-11-28&quot;&gt;リポジトリ セキュリティ アドバイザリ REST API&lt;/a&gt;の詳細&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71429</post-id></item><item><title>ホバーカード URL を使用してリポジトリの名前、説明、星の数を表示できるバグを修正しました</title><link>https://github.blog/changelog/2023-04-17-fixed-bug-that-allowed-a-hovercard-url-to-be-used-to-display-the-name-description-and-star-count-of-any-repository</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 17 Apr 2023 20:04:40 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-17-fixed-bug-that-allowed-a-hovercard-url-to-be-used-to-display-the-name-description-and-star-count-of-any-repository</guid><description>Fixed bug that allowed a hovercard URL to be used to display the name, description, and star count of any repository</description><content:encoded>&lt;p&gt;2023 年 3 月 30 日、依存関係グラフのホバーカード URL を使用して、GitHub.com 上の任意のリポジトリの名前、説明、スター数を取得できるバグを修正しました。このバグは 2023 年 3 月 28 日に発生し、調査の結果、悪用された形跡は見つかりませんでした。バグを悪用するには、提供されたリポジトリの URL と数値 ID にリクエストを送信するときに、特定のヘッダーを設定する必要がありました。 URL は、ホバーカード UI 要素に使用するように設計された HTML コンテンツを返し、リポジトリ名、説明、星の数が応答に含まれます。&lt;/p&gt;
&lt;p&gt;このバグは、 &lt;a href=&quot;https://bounty.github.com&quot;&gt;GitHub バグ報奨金プログラム&lt;/a&gt;を通じて GitHub に報告されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71389</post-id></item><item><title>ディスカッション カテゴリをセクションに整理する</title><link>https://github.blog/changelog/2023-04-17-organize-discussions-categories-into-sections</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 17 Apr 2023 19:07:57 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-17-organize-discussions-categories-into-sections</guid><description>Organize Discussions Categories into Sections</description><content:encoded>&lt;p&gt;独自の&lt;a href=&quot;https://github.com/orgs/community/discussions/&quot;&gt;コミュニティ&lt;/a&gt;でコンテンツを整理するためにカテゴリ セクションが導入されて以来、ユーザーは、独自のディスカッションを整理するために同様の機能を求めてきました。本日、すべてのメンテナがディスカッション カテゴリをセクションにグループ化できる機能を導入します。これにより、ユーザーはコンテンツをより適切に整理し、新しいコンテンツをより簡単に見つけることができるようになると考えています。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;スクリーンショット 2023 年 4 月 17 日午前 8 時 28 分 12 時&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/3157267/232538320-ebc0040c-02e8-4116-84ab-9cb3250bbc9b.png?w=371&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;この機能の UI は、私たち自身のコミュニティのものと似ていますが、ユーザーがカテゴリを編集するときに新しい UI が表示されるようになりました。ユーザーは、新しいカテゴリを作成できるだけでなく、[ディスカッション カテゴリの管理] ページから新しいセクションを作成することもできます。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;スクリーンショット 2023 年 4 月 17 日午前 8 時 30 分 22 時&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/3157267/232538584-f38cd2f9-0576-454d-99d9-cd07df245b52.png?w=277&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;単一のカテゴリを編集すると、既存のセクションに追加するオプションもユーザーに提供されるようになりました。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;スクリーンショット 2023 年 4 月 17 日午前 8 時 31 分 41 秒&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/3157267/232538661-611ee835-8622-4a74-a1c8-1ce6207558e4.png?w=729&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;質問やフィードバックについては、&lt;a href=&quot;https://github.com/orgs/community/discussions&quot;&gt;コミュニティ&lt;/a&gt;にアクセスしてください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71387</post-id></item><item><title>組織レベルのセキュリティ カバレッジ ページから複数のリポジトリのセキュリティ機能を有効にします</title><link>https://github.blog/changelog/2023-04-17-enable-security-features-for-multiple-repositories-from-your-organization-level-security-coverage-page</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 17 Apr 2023 17:34:42 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-17-enable-security-features-for-multiple-repositories-from-your-organization-level-security-coverage-page</guid><description>Enable security features for multiple repositories from your organization-level security coverage page</description><content:encoded>&lt;p&gt;本日公開ベータ版で利用できるようになったセキュリティ カバレッジ ページには、マルチリポジトリの有効化が含まれるようになりました。これにより、一度に複数のリポジトリにわたってセキュリティ機能を有効または無効にすることができます。この機能は、組織内のすべてのリポジトリに対して一度に 1 つのセキュリティ機能のみを有効にできる「すべてを有効にする」機能を改善します。&lt;/p&gt;
&lt;p&gt;マルチリポジトリの有効化により、チームやリポジトリのトピックなどの属性に基づいてリポジトリをフィルタリングし、数回クリックするだけでそれらのリポジトリのみのセキュリティ機能を有効または無効にすることもできます。 &lt;br /&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;セキュリティ カバレッジ ページのマルチリポジトリ有効化パネル&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/2262535/232230535-8b916a4e-7622-4459-8588-63a276fe8359.png?ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;
&lt;/p&gt;
&lt;p&gt;マルチリポジトリの有効化を使用して、次のセキュリティ機能を有効/無効にすることができます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;依存関係グラフ&lt;/li&gt;
&lt;li&gt;Dependabot アラート&lt;/li&gt;
&lt;li&gt;Dependabot のセキュリティ アップデート&lt;/li&gt;
&lt;li&gt;GitHub の高度なセキュリティ&lt;/li&gt;
&lt;li&gt;コードスキャンのデフォルト設定&lt;/li&gt;
&lt;li&gt;シークレットスキャン&lt;/li&gt;
&lt;li&gt;プッシュ保護&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの改善は、パブリック ベータとして GitHub.com に出荷されており、GitHub Enterprise Server 3.10 で利用できるようになります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/security-overview/enabling-security-features-for-multiple-repositories&quot;&gt;マルチリポジトリの有効化の詳細を確認し&lt;/a&gt;、&lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;フィードバックをお送りください&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;a href=&quot;https://github.com/features/security&quot;&gt;GitHub の高度なセキュリティについて詳しく知る&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71384</post-id></item><item><title>リポジトリ ルールのパブリック ベータ版の紹介</title><link>https://github.blog/changelog/2023-04-17-introducing-repository-rules-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 17 Apr 2023 15:38:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-17-introducing-repository-rules-public-beta</guid><description>Introducing Repository Rules Public Beta</description><content:encoded>&lt;p&gt;本日、リポジトリ ルールのパブリック ベータ版を発表します。 &lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f389.png&quot; alt=&quot;🎉&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;リポジトリ ルールは、ブランチ保護の GitHub の次の進化であり、リポジトリのセキュリティとコンプライアンスを大規模に強化するのに役立ちます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/7575792/229238416-32e3a767-2d4a-404a-a28a-5a778c3371db.png?ssl=1&quot; alt=&quot;ルールセットの概要のスクリーンショット&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;ルールを使用すると、リポジトリ内のブランチとタグの保護を簡単に定義できます。また、GitHub Enterprise Cloud の顧客であれば、それらを組織全体に適用できます。また、リポジトリで共同作業しているすべての人が、どのようなルールが適用されているかを簡単に知ることができます。&lt;/p&gt;
&lt;h1 id=&quot;creating-rules&quot; id=&quot;creating-rules&quot; &gt;ルールの作成&lt;a href=&quot;#creating-rules&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Creating rules&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/7575792/229236946-f91a103c-112f-4f84-b3e0-e8393703e4b8.png?ssl=1&quot; alt=&quot;ルールセット作成のスクリーンショット&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;ルールの中核となるのは、ルールセットを定義する機能です。ルールセットは、まとめて適用されるルールの集まりです。たとえば、ブランチへのすべてのコミットが署名されていること、およびそれらのコミットに 2 人のレビュー担当者がいることが要求される場合があります。ルールセットはタグにも適用できるため、リリースにルールを適用できます。&lt;/p&gt;
&lt;p&gt;ルールセット ページは、リポジトリのすべてのルールを表示および管理するための中心的な場所です。現在適用されているルールが表示され、新しいルールセットを追加したり、既存のルールセットを編集したりできます。&lt;/p&gt;
&lt;p&gt;ルールセットを作成するときは、その施行ステータスを&lt;code&gt;active&lt;/code&gt;または&lt;code&gt;disabled&lt;/code&gt;として定義します。アクティブなルールセットは、コミットがマージされるために合格する必要がありますが、 &lt;code&gt;disabled&lt;/code&gt;ルールセットは強制されません。マージを妨げることはありませんが、管理者はルールを適用する前にルールを作成できます。Enterprise Cloud のお客様は、ルールセットを&lt;code&gt;evaluate&lt;/code&gt;こともできます。これは、新しいルールが&lt;code&gt;active&lt;/code&gt;なって適用される前に、その影響を理解するための「予行演習」モードです。&lt;/p&gt;
&lt;p&gt;デフォルトのブランチ、すべてのブランチ、および&lt;em&gt;fnmatch&lt;/em&gt;パターンに一致するブランチまたはタグを選択するオプションを使用して、ルールセットでブランチとタグをターゲットにすることも簡単です。ルールセットに複数のパターンを追加して、さまざまなブランチやタグの命名スタイルに適用できます。&lt;/p&gt;
&lt;h1 id=&quot;viewing-the-rules&quot; id=&quot;viewing-the-rules&quot; &gt;ルールの表示&lt;a href=&quot;#viewing-the-rules&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Viewing the rules&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;リポジトリにどのようなルールが適用されているかを常に知ることができます。&lt;/p&gt;
&lt;p&gt;リポジトリへの読み取りアクセス権を持つユーザーは誰でも、そのルールとその意味を表示できます。ルールセットの概要は、シールド アイコンをクリックしてブランチ ページから、プル リクエストから、およびルールがプッシュをブロックする場合の Git CLI の出力からリンクされます。&lt;/p&gt;
&lt;p&gt;ここから、ブランチまたはタグでルールをフィルタリングして、次のプッシュでルールがどのように適用されるかを理解できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/7575792/229240158-4a0f407f-3211-4a78-95f8-d5bfa56c77f4.png?ssl=1&quot; alt=&quot;ルールの読み取り専用ビューのスクリーンショット&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;getting-started&quot; id=&quot;getting-started&quot; &gt;入門&lt;a href=&quot;#getting-started&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Getting Started&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt; GitHub クラウドのすべてのお客様がリポジトリ ルールを利用できるようになりました。開始するには、 &lt;a href=&quot;https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets&quot;&gt;ドキュメントに&lt;/a&gt;アクセスして、ルールを有効にして使用する方法を確認してください。 Enterprise Cloud のお客様は、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets&quot;&gt;ドキュメント&lt;/a&gt;にアクセスして、組織のルールセットなどについて学習してください。&lt;/p&gt;
&lt;p&gt;リポジトリ ルールを改善する方法について、ご意見をお聞かせください。リポジトリ ルール&lt;a href=&quot;https://github.com/orgs/community/discussions/52652&quot;&gt;パブリック ベータ ディスカッション&lt;/a&gt;の会話に参加してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71381</post-id></item><item><title>スレッド化されたコメントを回答としてマークする</title><link>https://github.blog/changelog/2023-04-17-marking-a-threaded-comment-as-the-answer</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 17 Apr 2023 15:05:29 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-17-marking-a-threaded-comment-as-the-answer</guid><description>Marking a threaded comment as the answer</description><content:encoded>&lt;p&gt;2020 年に&lt;a href=&quot;https://github.blog/changelog/2020-12-08-github-discussions-now-available-as-a-public-beta/&quot;&gt;GitHub ディスカッションを導入した&lt;/a&gt;とき、ユーザーが「Q&amp;A」ディスカッション カテゴリで質問への回答をマークできるようにしました。この機能の利用が増えるにつれ、質問に対する本当の答えは、答えへの返信にあることが多いことに気付きました。本日、スレッド化された返信を質問への回答としてマークする機能を導入します。&lt;/p&gt;
&lt;p&gt;すべての返信に、質問者が回答としてマークできるボタンが表示されるようになりました。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;スクリーンショット 2023 年 4 月 5 日 3 11 51 PM&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/3157267/230223264-5e87c0ee-c0aa-4dd1-8ebf-8a96b5ff418d.png?w=951&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;返信を回答としてマークすると、それが強調表示され、元の質問に対する本当の回答がどこにあるのかが読者に明確になります。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;スクリーンショット 2023-04-05 at 3 12 33 PM&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/3157267/230223509-603303e7-ed2d-4ae4-ba50-a6707fcb0420.png?w=951&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;この機能により、マークされた回答の精度が向上すると同時に、ユーザーが回答を正しいとマークするためにテキストを複製する負担が軽減されます。&lt;/p&gt;
&lt;p&gt;質問やフィードバックについては、&lt;a href=&quot;https://github.com/community/community/discussions/categories/discussions&quot;&gt;コミュニティに&lt;/a&gt;アクセスしてください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71377</post-id></item><item><title>非推奨: GitHub Importer を使用した非 Git リポジトリのインポート</title><link>https://github.blog/changelog/2023-04-17-deprecation-importing-non-git-repositories-with-github-importer</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 17 Apr 2023 12:13:36 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-17-deprecation-importing-non-git-repositories-with-github-importer</guid><description>Deprecation&amp;#058; Importing non-Git repositories with GitHub Importer</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/migrations/importing-source-code/using-github-importer/about-github-importer&quot;&gt;GitHub Importer を&lt;/a&gt;使用すると、 &lt;a href=&quot;https://github.com/new/import&quot;&gt;UI&lt;/a&gt;または&lt;a href=&quot;https://docs.github.com/en/rest/migrations/source-imports?apiVersion=2022-11-28#about-source-imports&quot;&gt;REST API&lt;/a&gt;を使用して、他のコード ホスティング プラットフォームから GitHub.com にリポジトリをインポートできます。&lt;/p&gt;
&lt;p&gt;現在、GitHub Importer は、Git、Mercurial、Subversion、および Team Foundation Version Control (TFVC) リポジトリをサポートしています。&lt;/p&gt;
&lt;p&gt; 2023 年 10 月 17 日以降、Mercurial、Subversion、および Team Foundation Version Control (TFVC) リポジトリのインポートはサポートされなくなります。使用率が非常に低いため、この機能のサポートを終了します。&lt;/p&gt;
&lt;p&gt; GitHub Importer がなくても、優れたオープン ソース ツールのおかげで、これらの代替バージョン管理システムから Git への移行は簡単です。詳細については、ドキュメントの記事&lt;a href=&quot;https://docs.github.com/migrations/importing-source-code/using-the-command-line-to-import-source-code&quot;&gt;「コマンド ラインを使用してソース コードをインポートする」を&lt;/a&gt;参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71376</post-id></item><item><title>Dependabot プル リクエストの自動リベースは、非アクティブ状態が 30 日間続くと停止します</title><link>https://github.blog/changelog/2023-04-13-automatic-rebases-on-dependabot-pull-requests-stop-after-30-days-of-inactivity</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 13 Apr 2023 19:57:29 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-13-automatic-rebases-on-dependabot-pull-requests-stop-after-30-days-of-inactivity</guid><description>Automatic rebases on Dependabot pull requests stop after 30 days of inactivity</description><content:encoded>&lt;p&gt;リポジトリの変更によって Dependabot プル リクエストが古くなると、Dependabot は自動的にリベースし、手作業なしでマージできるようにします。このリリースでは、PR が 30 日間マージされていない場合、Dependabot はそのリベースを停止し、これに関するメモを PR 本文に含めます。プル リクエストを手動でリベースおよびマージすることは引き続き可能です。 Dependabot のうるささについてのフィードバックを聞いており、Dependabot をより静かにし、関心のあるリポジトリに集中できるようにしています。企業のお客様にとって、この改善により、セルフホストの GitHub Actions ランナーの効率が向上するという追加の利点があります。 Enterprise Server のお客様は、この更新プログラムを GHES 3.10 で利用できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/working-with-dependabot/managing-pull-requests-for-dependency-updates&quot;&gt;Dependabot プル リクエストの詳細&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71345</post-id></item><item><title>エンタープライズ レベルの Dependabot、シークレット スキャン、コード スキャン ページのリポジトリ トピックとチーム フィルター</title><link>https://github.blog/changelog/2023-04-13-repository-topics-and-team-filters-for-enterprise-level-dependabot-secret-scanning-and-code-scanning-pages</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 13 Apr 2023 17:57:52 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-13-auto-draft</guid><description>You can now filter by repository topic or team on the enterprise-level Dependabot, code scanning, and secret scanning pages in security overview. These improvements have shipped to GitHub.com and will be available in GitHub Enterprise Server 3.9. Learn more security overview and send us your feedback Learn more about GitHub Advanced Security</description><content:encoded>&lt;p&gt;セキュリティ概要のエンタープライズ レベルの Dependabot、コード スキャン、およびシークレット スキャンのページで、リポジトリのトピックまたはチームでフィルター処理できるようになりました。 &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;リポジトリのトピックでフィルタリングされ、チームのドロップダウンを表示するコード スキャン エンタープライズ レベルのページ&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/2262535/231641301-1ab28528-01fc-4b6d-9a8a-49c7520c9965.png?ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;
&lt;/p&gt;
&lt;p&gt;これらの改善は GitHub.com に出荷されており、GitHub Enterprise Server 3.9 で利用できるようになります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/security-overview/about-the-security-overview&quot;&gt;セキュリティの概要の詳細を確認し&lt;/a&gt;、&lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;フィードバックをお送りください&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;a href=&quot;https://github.com/features/security&quot;&gt;GitHub の高度なセキュリティについて詳しく知る&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71335</post-id></item><item><title>Dependabot が Docker イメージのリリース ノートと変更ログのフェッチをサポートするようになりました</title><link>https://github.blog/changelog/2023-04-13-dependabot-now-supports-fetching-release-notes-and-changelogs-for-docker-images</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 13 Apr 2023 16:43:56 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-04-13-dependabot-now-supports-fetching-release-notes-and-changelogs-for-docker-images</guid><description>Dependabot now supports fetching release notes and changelogs for Docker images</description><content:encoded>&lt;p&gt;Dependabot を使用して、Docker 更新プル リクエストのリリース ノート、変更ログ、コミット履歴を取得できるようになりました。これにより、依存関係のアップグレードの安定性リスクをすばやく評価できます。サポートを有効にするには、ソース リポジトリの URL を含む&lt;code&gt;org.opencontainers.image.source&lt;/code&gt;ラベルを Dockerfile に追加します。さらに、リポジトリは、公開された Docker イメージと同じタグでタグ付けする必要があります。これにより、Dependabot は、どのリポジトリとコミットが Docker イメージの各バージョン/タグに関連付けられているかを理解できます。&lt;a href=&quot;https://github.com/dependabot-fixtures/docker-with-source&quot;&gt;この設定を示すリポジトリの例を&lt;/a&gt;次に示します。&lt;/p&gt;
&lt;p&gt;知ってますか？&lt;a href=&quot;https://github.com/dependabot/dependabot-core&quot;&gt;依存関係の更新を識別するための Dependabot の内部ライブラリ&lt;/a&gt;はオープン ソースです。 Dependabot プル リクエストにメタデータが不足していることに気付いた場合は、オープン ソースの透明性を利用して根本原因をデバッグできます。たとえば、パッケージ メンテナーがメタデータ アノテーションを修正する必要がある場合などです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/code-security/dependabot&quot;&gt;ディペンダボットの詳細&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71332</post-id></item></channel></rss>