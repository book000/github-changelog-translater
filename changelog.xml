<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Tue, 26 Jul 2022 17:51:53 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.0.1</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>シークレットスキャン：管理者はカスタムパターンを並べ替えてフィルタリングできるようになりました</title><link>https://github.blog/changelog/2022-07-26-secret-scanning-admins-can-now-sort-and-filter-their-custom-patterns</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 26 Jul 2022 17:51:53 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-07-26-secret-scanning-admins-can-now-sort-and-filter-their-custom-patterns</guid><description>Secret scanning&amp;#058; Admins can now sort and filter their custom patterns</description><content:encoded>&lt;p&gt;GitHub Advanced Securityのお客様は、リポジトリ、組織、エンタープライズレベルでカスタムパターンのリストを並べ替えてフィルタリングできるようになりました。このエクスペリエンスへのアップグレードは、数十または数百のカスタムパターンを管理する必要がある管理者をサポートします。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/defining-custom-patterns-for-secret-scanning&quot;&gt;GitHubAdvancedSecurityのカスタムパターンの詳細&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66295</post-id></item><item><title>検証可能なGitHubとTwitterアカウントのリンクのベータリリース</title><link>https://github.blog/changelog/2022-07-26-beta-release-of-verifiable-github-and-twitter-account-linking</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 26 Jul 2022 16:52:52 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-07-26-auto-draft</guid><description>You can now link your GitHub and Twitter accounts with your npm account using an official OAuth integration with these services. Prior to this, GitHub and Twitter account linking used a plain text field which was not verified or validated. The new experience creates a verified link, making it possible for developers to audit identities [&amp;#8230;]</description><content:encoded>&lt;p&gt;これらのサービスとの公式のOAuth統合を使用して、GitHubアカウントとTwitterアカウントをnpmアカウントにリンクできるようになりました。これ以前は、GitHubとTwitterのアカウントリンクでは、検証も検証もされていないプレーンテキストフィールドが使用されていました。&lt;/p&gt;
&lt;p&gt;新しいエクスペリエンスにより、検証済みのリンクが作成され、開発者はIDを監査して、アカウントが本人であると信頼できるようになります。確認済みのリンクにより、ログインできなくなった場合にnpmアカウントを回復する機能も大幅に向上します。&lt;/p&gt;
&lt;p&gt;レガシーデータはパブリックnpmプロファイルに表示されなくなり、データはnpmCLIを介して設定できなくなります。検証済みのリンクが作成され、アカウントの復旧目的で使用できるようになるまで、レガシーデータは引き続きプライベートプロファイルに保持されます。&lt;/p&gt;
&lt;p&gt;ドキュメントページからGitHubとTwitterアカウントのリンクの詳細をご覧ください：「 &lt;a href=&quot;https://docs.npmjs.com/managing-your-profile-settings#managing-user-account-profile-settings-from-the-web&quot;&gt;Webからのユーザーアカウントプロファイル設定の管理&lt;/a&gt;」&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66292</post-id></item><item><title>npmでの改善された2FAエクスペリエンスの一般提供</title><link>https://github.blog/changelog/2022-07-26-general-availability-of-improved-2fa-experience-in-npm</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 26 Jul 2022 16:51:09 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-07-26-auto-draft</guid><description>Enhanced Two-Factor Authentication (2FA) experience is now Generally Available. Previously, we had announced a set of improvements in our public beta. Further to this we have made the following new changes to streamline the CLI login experience. As of npm 8.15.0 Login and Publish authentication from CLI can now be managed by the browser with [&amp;#8230;]</description><content:encoded>&lt;p&gt;強化された2要素認証（2FA）エクスペリエンスが一般提供になりました。以前、 &lt;a href=&quot;https://github.blog/changelog/2022-05-10-enhanced-2fa-experience-for-npm-accounts-public-beta/&quot;&gt;パブリックベータ&lt;/a&gt;で一連の改善を発表しました。これに加えて、CLIログインエクスペリエンスを合理化するために、次の新しい変更を加えました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; npm 8.15.0以降、CLIからのログインおよび公開認証は、 &lt;code&gt;--auth-type=web&lt;/code&gt;フラグを使用してブラウザーで管理できるようになりました。&lt;/li&gt;
&lt;li&gt;ログインは既存のWebセッションを使用でき、新しいCLIセッションを作成するために2番目の要素または電子メール検証OTPの入力を求めるだけです。&lt;/li&gt;
&lt;li&gt;公開は「5分間記憶してください」をサポートするようになり、同じIP +アクセストークンからの後続の公開が可能になり、5分間の2FAプロンプトを回避できます。&lt;/li&gt;
&lt;li&gt; npmjs.comで高特権操作を実行しながら、再検証要求に2FAを使用できるようになりました。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.npmjs.com/about-two-factor-authentication&quot;&gt;二要素認証について&lt;/a&gt;もっと読む&lt;a href=&quot;https://docs.npmjs.com/about-two-factor-authentication&quot;&gt;&lt;br /&gt;
&lt;/a&gt;私たちのドキュメントから。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66290</post-id></item><item><title>npmパッケージの整合性を検証するための新しいnpm`auditsignatures`コマンド</title><link>https://github.blog/changelog/2022-07-26-a-new-npm-audit-signatures-command-to-verify-npm-package-integrity</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 26 Jul 2022 16:50:00 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-07-26-auto-draft</guid><description>The public npm registry is migrating away from the existing PGP signatures to ECDSA signatures that are more compact and can be verified without extra dependencies in the npm CLI. Ensure the integrity of packages you download from the public npm registry, or any registry that supports signatures, by verifying the registry signatures of downloaded [&amp;#8230;]</description><content:encoded>&lt;p&gt;パブリックnpmレジストリは、既存の&lt;a href=&quot;https://docs.npmjs.com/about-pgp-signatures-for-packages-in-the-public-registry&quot;&gt;PGP署名&lt;/a&gt;から、よりコンパクトで、npmCLIで追加の依存関係なしに検証できる&lt;a href=&quot;https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm&quot;&gt;ECDSA署名&lt;/a&gt;に移行しています。&lt;/p&gt;
&lt;p&gt;次のnpmCLIコマンドを使用して、ダウンロードしたパッケージのレジストリ署名を確認することにより、パブリックnpmレジストリまたは署名をサポートするレジストリからダウンロードしたパッケージの整合性を確認します。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;npm audit signatures
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一部のパッケージに署名がないか無効な場合、CLIはエラーになります。これは、それらのパッケージが改ざんされている可能性があることを示している可能性があります。&lt;/p&gt;
&lt;p&gt;この機能の詳細については、ドキュメントからお読みください：&lt;a href=&quot;https://docs.npmjs.com/about-registry-signatures&quot;&gt;レジストリの署名について&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66287</post-id></item><item><title>依存関係グラフは、Rust依存関係のパッケージメタデータを追加します</title><link>https://github.blog/changelog/2022-07-22-dependency-graph-adds-package-metadata-for-rust-dependencies</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 22 Jul 2022 14:42:08 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-07-22-auto-draft</guid><description>The dependency graph now shows additional metadata for Rust dependencies, and listed dependencies link back to the GitHub repositories for the package if available. Learn more about the dependency graph.</description><content:encoded>&lt;p&gt;依存関係グラフに、Rust依存関係の追加のメタデータが表示されるようになりました。リストされた依存関係は、利用可能な場合、パッケージのGitHubリポジトリにリンクします。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph&quot;&gt;依存関係グラフの詳細をご覧ください。&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66232</post-id></item><item><title>GitHub Actions macOS 10.15 Actionsランナーイメージは非推奨になり、8/30/22までに削除されます</title><link>https://github.blog/changelog/2022-07-20-github-actions-the-macos-10-15-actions-runner-image-is-being-deprecated-and-will-be-removed-by-8-30-22</link><dc:creator>Natalie Rodriguez-Jackson</dc:creator><pubDate>Thu, 21 Jul 2022 00:24:58 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-07-20-auto-draft</guid><description>The macOS 10.15 Actions runner image started our deprecation process on 5/31/22 and will be fully unsupported by 8/30/22. To raise awareness of the upcoming removal, jobs using macOS 10.15 will temporarily fail during scheduled time periods defined below: July 21, 12:00 UTC &amp;#8211; July 22, 18:00 UTC July 27, 00:00 UTC &amp;#8211; July 28, [&amp;#8230;]</description><content:encoded>&lt;p&gt;macOS 10.15アクションランナーイメージは5/31/22に&lt;a href=&quot;https://github.com/actions/virtual-environments/issues/5583&quot;&gt;非推奨プロセスを開始&lt;/a&gt;し、8/30/22までに完全にサポートされなくなります。今後の削除の認識を高めるために、macOS 10.15を使用するジョブは、以下に定義されたスケジュールされた期間中に一時的に失敗します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; 7月21日12:00UTC–7月22日18:00UTC&lt;/li&gt;
&lt;li&gt; 7月27日00:00UTC–7月28日00:00UTC&lt;/li&gt;
&lt;li&gt; 8月3日00:00UTC–8月4日00:00UTC&lt;/li&gt;
&lt;li&gt; 8月15日00:00UTC–8月16日00:00UTC&lt;/li&gt;
&lt;li&gt; 8月26日00:00UTC–8月27日00:00UTC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;するべきこと&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;macos-10.15&lt;/code&gt; YAMLワークフローラベルを使用するワークフローは、 &lt;code&gt;macos-11&lt;/code&gt; 、 &lt;code&gt;macos-12&lt;/code&gt; 、または&lt;code&gt;macos-latest&lt;/code&gt;に更新する必要があります。 GitHub Actions仮想環境の&lt;a href=&quot;https://github.com/actions/virtual-environments&quot;&gt;ソフトウェア&lt;/a&gt;について読むことで、ツールに関する最新情報をいつでも入手できます。問題が発生した場合やサポートが必要な場合は、GitHub &lt;a href=&quot;https://support.github.com/contact?form%5Bsubject%5D=Re%3A+GitHub+Actions&amp;tags=dotcom-contact-params&quot;&gt;サポート&lt;/a&gt;にお問い合わせください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66214</post-id></item><item><title>トリガーアクターと実行アクターの区別</title><link>https://github.blog/changelog/2022-07-19-differentiating-triggering-actor-from-executing-actor</link><dc:creator>Natalie Rodriguez-Jackson</dc:creator><pubDate>Tue, 19 Jul 2022 18:33:51 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-07-19-auto-draft</guid><description>Starting next week, workflow re-runs in GitHub Actions will use the initial run&amp;#8217;s actor for privilege evaluation. The actor who triggered the re-run will continue to be displayed in the UI, and can be accessed in a workflow via the triggering_actor field in the github context. Currently, the privileges (e.g. &amp;#8211; secrets, permissions) of a [&amp;#8230;]</description><content:encoded>&lt;p&gt;来週から、GitHub Actionsでワークフローを再実行すると、最初の実行のアクターが特権の評価に使用されます。再実行をトリガーしたアクターは引き続きUIに表示され、 &lt;a href=&quot;https://docs.github.com/en/actions/learn-github-actions/contexts#github-context&quot;&gt;&lt;code&gt;github&lt;/code&gt;コンテキスト&lt;/a&gt;の&lt;code&gt;triggering_actor&lt;/code&gt;フィールドを介してワークフローでアクセスできます。&lt;/p&gt;
&lt;p&gt;現在、実行の特権（たとえば、シークレット、パーミッション）は、トリガーアクターから派生しています。これは、再実行をトリガーするアクターが元の実行アクターとは異なる状況で問題を引き起こします。今後の変更により、最初に実行するアクターとトリガーするアクターが区別され、再実行の安定した実行が可能になります。&lt;/p&gt;
&lt;p&gt;詳細については &lt;a href=&quot;https://docs.github.com/en/actions/managing-workflow-runs/re-running-workflows-and-jobs&quot;&gt;、ワークフローとジョブの再実行を&lt;/a&gt;参照してください。&lt;/p&gt;
&lt;p&gt;質問について&lt;a href=&quot;https://github.community/c/code-to-cloud/github-actions/41&quot;&gt;は、GitHubActionsコミュニティ&lt;/a&gt;にアクセスしてください。&lt;/p&gt;
&lt;p&gt;アクションの次のステップを確認するには&lt;a href=&quot;https://github.com/orgs/github/projects/4247/views/1?filterQuery=actions&quot;&gt;、公開ロードマップにアクセスしてください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66192</post-id></item><item><title>コードスキャンエンタープライズレベルのRESTAPI</title><link>https://github.blog/changelog/2022-07-18-code-scanning-enterprise-level-rest-api</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 18 Jul 2022 18:20:51 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-07-18-auto-draft</guid><description>GitHub Advanced Security customers can now retrieve repository code scanning results at the enterprise level via the GitHub REST API. This new endpoint supplements the existing repository-level and organization-level endpoints. Learn more about the code scanning enterprise-level REST API and send us your feedback. Learn more about GitHub Advanced Security</description><content:encoded>&lt;p&gt;GitHub Advanced Securityのお客様は、GitHubRESTAPIを介してエンタープライズレベルでリポジトリコードのスキャン結果を取得できるようになりました。この新しいエンドポイントは、既存の&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/rest/code-scanning#list-code-scanning-alerts-for-a-repository&quot;&gt;リポジトリレベル&lt;/a&gt;および&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/rest/code-scanning#list-code-scanning-alerts-for-an-organization&quot;&gt;組織レベル&lt;/a&gt;のエンドポイントを補完します。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/rest/code-scanning#list-code-scanning-alerts-for-an-enterprise&quot;&gt;コードスキャンエンタープライズレベルのRESTAPIの詳細を&lt;/a&gt;&lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;確認し、フィードバックを送信してください。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/features/security&quot;&gt;GitHubAdvancedSecurityの詳細&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66162</post-id></item><item><title>Dependabotアラートが最も重要な優先度でランク付けされるようになりました</title><link>https://github.blog/changelog/2022-07-15-dependabot-alerts-are-now-ranked-by-most-important-priority</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 15 Jul 2022 20:24:20 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-07-15-auto-draft</guid><description>Dependabot alerts will now be easier to prioritize with a new “Most Important” sort. For the alerts repository list view, by default, alerts will be sorted in a way to help you determine which alerts matter most. You will still be able to access additional sort options, like sort by Newest, CVSS severity, and Manifest [&amp;#8230;]</description><content:encoded>&lt;p&gt;Dependabotアラートは、新しい「最も重要な」並べ替えで優先順位を付けるのが簡単になりました。アラートリポジトリリストビューの場合、デフォルトでは、アラートは、どのアラートが最も重要であるかを判断するのに役立つ方法で並べ替えられます。 UIで、 &lt;code&gt;Newest&lt;/code&gt;の並べ替え、CVSSの&lt;code&gt;severity&lt;/code&gt; 、 &lt;code&gt;Manifest path&lt;/code&gt;などの追加の並べ替えオプションに引き続きアクセスできます。&lt;/p&gt;
&lt;p&gt;この「最も重要な」ソートでは、脆弱性の影響（潜在的なリスク）、関連性、およびアクション可能性（脆弱性の修正がいかに簡単か）全体にわたる追加の要因とともに、CVSSスコアを主要な要因と見なします。たとえば、サポートされている場合、この並べ替えの計算では&lt;a href=&quot;https://github.blog/2022-04-14-dependabot-alerts-now-surface-if-code-is-calling-vulnerability/&quot;&gt;、脆弱な関数を呼び出して&lt;/a&gt;いるかどうか、および&lt;a href=&quot;https://github.blog/changelog/2022-06-23-dependabot-alerts-filter-alerts-by-the-scope-of-the-dependency-runtime-and-development/&quot;&gt;依存関係のスコープ&lt;/a&gt;（たとえば、アラートが&lt;code&gt;devDependency&lt;/code&gt;である場合）が考慮されます。この計算は、時間の経過とともに改善されます。&lt;/p&gt;
&lt;p&gt;この機能は、Dependabotプルリクエスト、Dependabotアラートの組織レベルのリストビュー、またはGraphQLAPIには影響しません。&lt;/p&gt;
&lt;p&gt;詳細については、Dependabotアラートの&lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/managing-vulnerabilities-in-your-projects-dependencies/about-alerts-for-vulnerable-dependencies&quot;&gt;ドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66157</post-id></item><item><title>ZuploはGitHubシークレットスキャンパートナーになりました</title><link>https://github.blog/changelog/2022-07-13-zuplo-is-now-a-github-secret-scanning-partner</link><dc:creator>Sidi Merzouk</dc:creator><pubDate>Wed, 13 Jul 2022 15:54:01 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-07-13-zuplo-is-now-a-github-secret-scanning-partner</guid><description>Zuplo is now a GitHub secret scanning partner</description><content:encoded>&lt;p&gt;GitHubシークレットスキャンは、リポジトリで既知のタイプのシークレットを検索することでユーザーを保護します。これらの秘密を特定してフラグを立てることにより、スキャンはデータ漏洩や詐欺を防ぐのに役立ちます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://zuplo.com/&quot;&gt;Zuplo&lt;/a&gt;と提携して、Zuplo API Gatewayに接続されたAPIキーをスキャンしました。これにより、ユーザーはAPIキー認証をAPIに追加できます。パブリックリポジトリにあるアクセストークンをZuploに転送します。Zuploは、顧客の好みに従って、電子メールで顧客に通知するか、トークンを自動的に取り消します。 Zuplo APIトークンの詳細については、こちらを&lt;a href=&quot;https://zuplo.com/docs/guides/api-key-management#api-key-leak-prevention&quot;&gt;ご覧ください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;パブリックリポジトリのシークレットスキャンの新しいパートナーを引き続き歓迎します。 GitHub Advanced Securityのお客様は、プライベートリポジトリをスキャンしてシークレットが漏洩していないかどうかを確認し、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/protecting-pushes-with-secret-scanning&quot;&gt;プッシュプロテクション&lt;/a&gt;を使用してZuploキーが誤って漏洩するのを防ぐこともできます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/github/administering-a-repository/about-secret-scanning&quot;&gt;シークレットスキャンの詳細&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/developers/overview/secret-scanning/&quot;&gt;シークレットスキャンでGitHubと提携する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">66105</post-id></item></channel></rss>