<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>Changelogs Archive - The GitHub Blog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Thu, 11 Apr 2024 21:50:31 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.5.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Changelogs Archive - The GitHub Blog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>Google Cloud Platform、Slack の検出と検証に対するシークレット スキャンの変更</title><link>https://github.blog/changelog/2024-04-11-secret-scanning-changes-to-detection-and-validation-for-google-cloud-platform-slack</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 11 Apr 2024 21:50:31 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-11-secret-scanning-changes-to-detection-and-validation-for-google-cloud-platform-slack</guid><description>&lt;p&gt;Secret scanning changes to detection and validation for Google Cloud Platform, Slack&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-11-secret-scanning-changes-to-detection-and-validation-for-google-cloud-platform-slack&quot;&gt;Secret scanning changes to detection and validation for Google Cloud Platform, Slack&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub シークレット スキャンでは、Google Cloud Platform (GCP) アカウント認証情報と Slack Webhook の有効性チェックがサポートされるようになりました。この改善には、GCP のアカウント認証情報の検出とアラートの方法の変更が含まれます。&lt;/p&gt;
&lt;h3 id=&quot;whats-changing&quot;&gt;何が変わっているのか&lt;a href=&quot;#whats-changing&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What&amp;#8217;s changing&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; Slack Webhook のシークレット スキャン アラートは、以前にサポートされていた Slack API トークンに加えて、有効性チェックもサポートするようになりました。&lt;/p&gt;
&lt;p&gt;さらに、シークレット スキャンでは、完全に一致する秘密キー、秘密キー ID、証明書 URL を含む完全な GCP サービス アカウント認証情報オブジェクトについてもアラートが生成されるようになりました。これらのアラートは有効性チェックをサポートします。この変更の一環として、GCP 秘密キー ID に関するアラートは受信されなくなります。&lt;/p&gt;
&lt;h3 id=&quot;about-validity-checks&quot;&gt;有効性チェックについて&lt;a href=&quot;#about-validity-checks&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;About validity checks&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有効性チェックは、漏洩した認証情報がアクティブであり、依然として悪用される可能性があるかどうかを示します。以前に特定のリポジトリの検証チェックを有効にしている場合、GitHub は&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-patterns#supported-secrets&quot;&gt;サポートされているトークン タイプ&lt;/a&gt;のアラートの有効性を自動的にチェックするようになります。&lt;/p&gt;
&lt;p&gt;有効性チェックは、Enterprise Cloud 上の GitHub Advanced Security を使用してリポジトリで利用できます。この機能をエンタープライズ、組織、またはリポジトリ レベルで有効にするには、「コード セキュリティと分析」設定ページで、「関連するパートナーにシークレットを送信することでシークレットが有効かどうかを自動的に検証する」オプションをオンにします。&lt;/p&gt;
&lt;h3 id=&quot;share-feedback&quot;&gt;フィードバックを共有する&lt;a href=&quot;#share-feedback&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Share feedback&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;シークレット スキャンに関する&lt;a href=&quot;https://calendar.app.google/WBMehwLaSg7w3Lmi7&quot;&gt;60 分間のフィードバック セッション&lt;/a&gt;にサインアップすると、時間の補償を受けられます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャン&lt;/a&gt;や&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-patterns#supported-secrets&quot;&gt;有効性チェックでサポートされているパターン&lt;/a&gt;の詳細については、こちらをご覧ください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-11-secret-scanning-changes-to-detection-and-validation-for-google-cloud-platform-slack&quot;&gt;Google Cloud Platform、Slack の検出と検証に対するシークレット スキャンの変更の&lt;/a&gt;投稿 最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77505</post-id></item><item><title>GitHub ネイティブ IP 許可リストが EMU ユーザー名前空間に拡張 – プライベート ベータ版</title><link>https://github.blog/changelog/2024-04-11-github-native-ip-allow-list-expands-to-emu-user-namespaces-private-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 11 Apr 2024 19:39:28 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-11-github-native-ip-allow-list-expands-to-emu-user-namespaces-private-beta</guid><description>&lt;p&gt;GitHub Native IP Allow List expands to EMU User Namespaces - Private Beta&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-11-github-native-ip-allow-list-expands-to-emu-user-namespaces-private-beta&quot;&gt;GitHub Native IP Allow List expands to EMU User Namespaces &amp;#8211; Private Beta&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;Enterprise Managed Users (EMU) を備えた GitHub Enterprise Cloud の企業所有者は、ユーザー名前空間をカバーする GitHub のネイティブ IP 許可リスト構成を導入するプライベート ベータに参加できるようになりました。この機能は、企業が管理するユーザー名前空間へのアクセスを、所有する企業の IP 許可リストに制限します。 Web UI、git プロトコル、および API を介したアクセスはすべて、IP 許可リストによってフィルターされます。このポリシーは、個人アクセス トークン、アプリ トークン、SSH キーを含むすべての認証情報に適用されます。&lt;/p&gt;
&lt;p&gt;このプライベート ベータに登録してこの機能を企業で​​利用できるようにするには、GitHub アカウント マネージャーに連絡するか、&lt;a href=&quot;https://github.com/enterprise/contact&quot;&gt;営業チームに連絡してください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-11-github-native-ip-allow-list-expands-to-emu-user-namespaces-private-beta&quot;&gt;「GitHub ネイティブ IP 許可リストが EMU ユーザー名前空間に拡張 – プライベート ベータ」という&lt;/a&gt;記事は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77490</post-id></item><item><title>CodeQL 2.17.0: Java 22、Swift 5.10、TS 5.4、C# 12 のサポート</title><link>https://github.blog/changelog/2024-04-11-codeql-2-17-0-support-for-java-22-swift-5-10-ts-5-4-c-12</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 11 Apr 2024 13:00:25 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-11-codeql-2-17-0-support-for-java-22-swift-5-10-ts-5-4-c-12</guid><description>&lt;p&gt;CodeQL 2.17.0: Support for Java 22, Swift 5.10, TS 5.4, C# 12&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-11-codeql-2-17-0-support-for-java-22-swift-5-10-ts-5-4-c-12&quot;&gt;CodeQL 2.17.0: Support for Java 22, Swift 5.10, TS 5.4, C# 12&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;CodeQL は、GitHub コード スキャンを強化する静的分析エンジンです。 CodeQL バージョン&lt;code&gt;2.17.0&lt;/code&gt;がリリースされ、GitHub.com でコード スキャン ユーザーに公開されました。&lt;/p&gt;
&lt;p&gt;このリリースの重要な変更点は次のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.0/#c-3&quot;&gt;C# 12 および .NET 8 の完全サポート&lt;/a&gt;(残りのマイナーな問題を修正)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.0/#java-4&quot;&gt;Java 22のサポート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.0/#swift&quot;&gt;Swift 5.10のサポート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.0/#javascript-typescript-2&quot;&gt;TypeScript 5.4のサポート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;最近リリースされた&lt;a href=&quot;https://github.blog/changelog/2024-04-10-codeql-threat-model-settings-are-now-available-for-c-beta/&quot;&gt;脅威モデル設定機能&lt;/a&gt;(ベータ版) を有効にするための&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.0/#c&quot;&gt;C# クエリへの小規模な変更&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.0/#golang-2&quot;&gt;Go 依存関係の取得の改善&lt;/a&gt;(最大 27% 高速化)&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.0/#new-queries&quot;&gt;3 つの新しいクエリが追加されました&lt;/a&gt;。そのうち 2 つはコミュニティへの貢献でした。
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;cpp/type-confusion&lt;/code&gt;無効な型へのキャストを検出します&lt;/li&gt;
&lt;li&gt;&lt;code&gt;go/uncontrolled-allocation-size&lt;/code&gt;過剰なサイズ値によるスライス メモリ割り当てを検出します&lt;/li&gt;
&lt;li&gt;&lt;code&gt;java/unvalidated-url-forward&lt;/code&gt;安全でない URL 構築による情報漏洩を防止します&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;変更の完全なリストについては、&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.0/&quot;&gt;バージョン 2.17.0&lt;/a&gt;の完全な変更ログを参照してください。すべての新機能は GHES 3.13 にも含まれます。 GHES 3.12 以前のユーザーは&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.12/admin/code-security/managing-github-advanced-security-for-your-enterprise/configuring-code-scanning-for-your-appliance#configuring-codeql-analysis-on-a-server-without-internet-access&quot;&gt;、CodeQL バージョンをアップグレード&lt;/a&gt;できます。&lt;/p&gt;
&lt;p&gt; The post &lt;a href=&quot;https://github.blog/changelog/2024-04-11-codeql-2-17-0-support-for-java-22-swift-5-10-ts-5-4-c-12&quot;&gt;CodeQL 2.17.0: Support for Java 22, Swift 5.10, TS 5.4, C# 12&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77467</post-id></item><item><title>GitHub でホストされるランナー イメージの非推奨に関する通知: Docker Compose v1</title><link>https://github.blog/changelog/2024-04-10-github-hosted-runner-images-deprecation-notice-docker-compose-v1</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 10 Apr 2024 17:00:36 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-10-github-hosted-runner-images-deprecation-notice-docker-compose-v1</guid><description>&lt;p&gt;GitHub-hosted runner images deprecation notice: Docker Compose v1&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-10-github-hosted-runner-images-deprecation-notice-docker-compose-v1&quot;&gt;GitHub-hosted runner images deprecation notice: Docker Compose v1&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;Docker Compose v1 は、2023 年 7 月時点で&lt;a href=&quot;https://docs.docker.com/compose/migrate/&quot;&gt;非推奨に&lt;/a&gt;なりました。GitHub でホストされているランナーで Compose v1 を利用しているすべてのお客様は、Compose v2 に移行することをお勧めします。 GitHub の&lt;a href=&quot;https://github.com/actions/runner-images?tab=readme-ov-file#support-policy&quot;&gt;サポート ポリシー&lt;/a&gt;に従って、このツールは 2024 年 7 月 9 日付けで GitHub 管理のランナー イメージから削除されます。&lt;/p&gt;
&lt;p&gt;重大な変更を避けるために、お客様はアクション ワークフロー ファイルを&lt;code&gt;docker-compose&lt;/code&gt;使用から&lt;code&gt;docker compose&lt;/code&gt;に更新する必要があります。 7 月 9 日以降、以前の構文を使用しているワークフローは失敗し始めます。お客様には&lt;a href=&quot;https://docs.docker.com/compose/migrate/#what-are-the-differences-between-compose-v1-and-compose-v2&quot;&gt;、移行手順を&lt;/a&gt;参照して、必要な変更がすべて行われていることを確認することをお勧めします。&lt;/p&gt;
&lt;p&gt; GitHub 管理イメージの詳細については、&lt;a href=&quot;https://github.com/actions/runner-images&quot;&gt;ランナーイメージ&lt;/a&gt;リポジトリを参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-10-github-hosted-runner-images-deprecation-notice-docker-compose-v1&quot;&gt;GitHub でホストされるランナー イメージの非推奨に関する通知: Docker Compose v1 の&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77424</post-id></item><item><title>CodeQL 脅威モデル設定が C# (ベータ版) で利用可能になりました</title><link>https://github.blog/changelog/2024-04-10-codeql-threat-model-settings-are-now-available-for-c-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 10 Apr 2024 11:16:31 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-10-codeql-threat-model-settings-are-now-available-for-c-beta</guid><description>&lt;p&gt;CodeQL threat model settings are now available for C# (beta)&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-10-codeql-threat-model-settings-are-now-available-for-c-beta&quot;&gt;CodeQL threat model settings are now available for C# (beta)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;C# 用の CodeQL 脅威モデル設定 (ベータ版) を使用して、CodeQL のコード スキャン分析を適応させ、コード内の最も関連性の高いセキュリティ脆弱性を検出します。&lt;/p&gt;
&lt;p&gt; CodeQL のデフォルトの脅威モデルは、大部分のコードベースで機能します。リモート ソースからのデータ (HTTP リクエストなど) は汚染されていると見なされます。以前に&lt;a href=&quot;https://github.blog/changelog/2023-12-20-code-scanning-is-now-more-adaptable-to-your-codebase-with-codeql-threat-model-settings-for-java-beta/&quot;&gt;Java 用の CodeQL 脅威モデル設定&lt;/a&gt;をリリースしました。これにより、セキュリティ チームや開発者が汚染されたデータを発見しやすくするために、ローカル データ ソース (ローカル ファイル、コマンド ライン引数、環境変数、データベースのデータなど) をオプションで汚染済みとしてマークできるようになりました。コード内の潜在的なセキュリティ脆弱性をさらに修正します。 CodeQL 脅威モデル設定が C# でも利用できるようになりました。これは、C# で書かれたコードのコード スキャン分析で同様のローカル汚染源を有効にできることを意味します。&lt;/p&gt;
&lt;p&gt;リポジトリが C# または Java コードでコード スキャンのデフォルト セットアップを実行している場合は、&lt;strong&gt;コード セキュリティと分析の&lt;/strong&gt;設定に移動し、&lt;strong&gt;コード スキャンのデフォルト セットアップ&lt;/strong&gt;で&lt;strong&gt;[構成の編集] を&lt;/strong&gt;クリックします。ここで、脅威モデルを&lt;strong&gt;リモートおよびローカル ソース&lt;/strong&gt;に変更できます。詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/managing-your-code-scanning-configuration/editing-your-configuration-of-default-setup#including-local-sources-of-tainted-data-in-default-setup&quot;&gt;汚染されたデータのローカル ソースをデフォルトのセットアップに含めるに関するドキュメント&lt;/a&gt;を参照してください。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/42464962/e4e10910-1d6d-4d7e-9a98-8878c73ab4e7&quot; alt=&quot;CodeQL のデフォルト設定での脅威モデルの設定&quot; /&gt;&lt;/p&gt;
&lt;p&gt;リポジトリが C# または Java コードでコード スキャンの詳細設定を実行している場合は、コード スキャン ワークフロー ファイルを編集して CodeQL 脅威モデルをカスタマイズできます。詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning#extending-codeql-coverage-with-threat-models&quot;&gt;脅威モデルによる CodeQL 適用範囲の拡張に関するドキュメント&lt;/a&gt;を参照してください。コマンドラインまたはサードパーティの CI/CD で CodeQL CLI を実行する場合、コード スキャン分析を実行するときに&lt;code&gt;--threat-model&lt;/code&gt;を指定できます。詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/codeql-cli/getting-started-with-the-codeql-cli/analyzing-your-code-with-codeql-queries#including-model-packs-to-add-potential-sources-of-tainted-data&quot;&gt;CodeQL CLI ドキュメントを&lt;/a&gt;参照してください。&lt;/p&gt;
&lt;p&gt;この作業の一環として、ローカルおよびリモートの脅威モデル設定との整合性を高めるために、C# のデフォルトのコード スキャン スイートに含まれるクエリの一部に変更を加えました。その結果、リモート ソースに対してデフォルトの脅威モデルを使用すると、表示されるアラートがわずかに少なくなる可能性があります。どのクエリが影響を受けるかについて詳しくは、 &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.17.0/#c&quot;&gt;CodeQL 2.17.0 の変更ログ&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;コード スキャンのデフォルト設定の CodeQL 脅威モデル設定 (ベータ版) は、Java および C# コードを含むリポジトリ用の GitHub.com で入手できます。 C# の脅威モデル設定のサポートは、GitHub Enterprise Server 3.14 で提供される予定です。 GHES 3.12 以前のユーザーは&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.12/admin/code-security/managing-github-advanced-security-for-your-enterprise/configuring-code-scanning-for-your-appliance#configuring-codeql-analysis-on-a-server-without-internet-access&quot;&gt;、コード スキャンで使用される CodeQL のバージョンをアップグレードする&lt;/a&gt;こともできます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-10-codeql-threat-model-settings-are-now-available-for-c-beta&quot;&gt;CodeQL 後の脅威モデル設定が C# で利用できるようになりました (ベータ版)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77418</post-id></item><item><title>GitHub モバイルでの拡張コードレビューの導入</title><link>https://github.blog/changelog/2024-04-09-introducing-enhanced-code-review-on-github-mobile</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 09 Apr 2024 17:31:49 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-09-introducing-enhanced-code-review-on-github-mobile</guid><description>&lt;p&gt;Introducing Enhanced Code Review on GitHub Mobile&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-09-introducing-enhanced-code-review-on-github-mobile&quot;&gt;Introducing Enhanced Code Review on GitHub Mobile&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img fetchpriority=&quot;high&quot; decoding=&quot;async&quot; src=&quot;https://github.blog/wp-content/uploads/2024/04/mobile.png?w=1024&amp;#038;resize=1024%2C538&quot; alt=&quot;PR レビューの改善&quot; width=&quot;1024&quot; height=&quot;538&quot; class=&quot;alignnone size-large wp-image-77421 width-fit&quot; srcset=&quot;https://github.blog/wp-content/uploads/2024/04/mobile.png?w=2400 2400w, https://github.blog/wp-content/uploads/2024/04/mobile.png?w=300 300w, https://github.blog/wp-content/uploads/2024/04/mobile.png?w=768 768w, https://github.blog/wp-content/uploads/2024/04/mobile.png?w=1024&amp;#038;resize=1024%2C538 1024w, https://github.blog/wp-content/uploads/2024/04/mobile.png?w=1536 1536w, https://github.blog/wp-content/uploads/2024/04/mobile.png?w=2048 2048w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;いくつかのエキサイティングなニュースがありますので、お知らせします。私たちは皆さんのフィードバックに注意深く耳を傾けてきましたが、多くの皆さんが直面した共通の課題の 1 つは、プル リクエストのレビューを GitHub Mobile でレビューして送信することでした。皆さんの声は大きく聞こえ、今日、PR の承認がこれまでよりも簡単になったことを発表できることを嬉しく思います。&lt;/p&gt;
&lt;p&gt;最新のアップデートにより、外出先でもコード レビューの開始、継続、送信が簡単になりました。&lt;/p&gt;
&lt;p&gt;電車に乗っているときも、コーヒーを飲んでいるときも、単にデスクから離れているときも、簡単にプロジェクトに貢献し、勢いを維持することができます。&lt;/p&gt;
&lt;p&gt;今すぐ&lt;a href=&quot;https://apps.apple.com/us/app/github/id1477376905&quot;&gt;Apple App Store&lt;/a&gt;または&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.github.android&quot;&gt;Google Play ストア&lt;/a&gt;から GitHub Mobile をダウンロードまたは更新して開始してください。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/mobile&quot;&gt;GitHub Mobile について詳しく学び&lt;/a&gt;、改善に役立てるために&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/mobile&quot;&gt;フィードバックを共有してください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-09-introducing-enhanced-code-review-on-github-mobile&quot;&gt;GitHub Mobile での強化されたコード レビューの紹介という&lt;/a&gt;投稿は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77415</post-id></item><item><title>セキュリティ概要ダッシュボードの高度なフィルタリング機能</title><link>https://github.blog/changelog/2024-04-04-advanced-filtering-capabilities-for-the-security-overview-dashboard</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 04 Apr 2024 21:24:01 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-04-advanced-filtering-capabilities-for-the-security-overview-dashboard</guid><description>&lt;p&gt;Advanced filtering capabilities for the security overview dashboard&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-04-advanced-filtering-capabilities-for-the-security-overview-dashboard&quot;&gt;Advanced filtering capabilities for the security overview dashboard&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;本日、セキュリティ概要ダッシュボードとシークレット スキャン メトリクス ページ用のセキュリティ ツール固有のフィルターをリリースしました。 &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;概要ダッシュボードのフィルター バー ドロップダウンのセキュリティ ツール中心のフィルター&quot; src=&quot;https://github.com/kellyarwine/github-actions-continuous-delivery/assets/2262535/99b847e6-0f54-42c3-b0ce-386836b5797a&quot; width=&quot;700&quot;&gt;
&lt;/p&gt;
&lt;p&gt; 「私の組織は SQL インジェクションをどの程度うまく処理しているだろうか?」と疑問に思ったことはありませんか?または「[パートナー名] の機密漏洩にどれくらい早く対応していますか?」おそらく、 &lt;code&gt;npm&lt;/code&gt;の依存関係の更新ペースに興味があるかもしれません。まあ、もう不思議ではありません！&lt;/p&gt;
&lt;p&gt;新しいセキュリティ ツール フィルターを使用すると、関心のある詳細に合わせて検索を調整し、ニーズに合わせてより焦点を絞った関連性の高いレポートを提供できます。&lt;/p&gt;
&lt;p&gt;セキュリティ分析を変革するように設計された新しいフィルターをご覧ください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;dependabot フィルター&lt;/strong&gt;: 特定の&lt;strong&gt;エコシステム&lt;/strong&gt;、&lt;strong&gt;パッケージ&lt;/strong&gt;、および依存関係の&lt;strong&gt;スコープに焦点を当てます。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;CodeQL/サードパーティフィルター&lt;/strong&gt;: 自分にとって最も重要な&lt;strong&gt;ルール&lt;/strong&gt;までドリルダウンします。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;シークレット スキャン フィルター&lt;/strong&gt;:&lt;strong&gt;シークレット タイプ&lt;/strong&gt;、&lt;strong&gt;プロバイダー&lt;/strong&gt;、プッシュ保護&lt;strong&gt;バイパス&lt;/strong&gt;ステータスと&lt;strong&gt;有効性&lt;/strong&gt;のフィルターを詳細に設定できます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの機能は現在、GitHub Enterprise Cloud でパブリック ベータ版として利用可能であり、GitHub Enterprise Server 3.14 で利用できるようになる予定です。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/security-overview/about-security-overview&quot;&gt;セキュリティの概要について詳しく知り&lt;/a&gt;、&lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;フィードバックをお送りください&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;「 &lt;a href=&quot;https://github.blog/changelog/2024-04-04-advanced-filtering-capabilities-for-the-security-overview-dashboard&quot;&gt;セキュリティ概要ダッシュボードの高度なフィルタリング機能」という&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77295</post-id></item><item><title>アクション: 自己ホスト型ランナーで実行されるジョブは 5 日でタイムアウトするようになりました。</title><link>https://github.blog/changelog/2024-04-04-actions-jobs-executing-on-self-hosted-runners-will-now-timeout-in-5-days</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 04 Apr 2024 16:22:01 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-04-auto-draft</guid><description>&lt;p&gt;To ensure that the Actions runners are truly ephemeral and more secure, we are now limiting execution timeouts on self hosted jobs to 5 days. If a job reaches this limit, the job is terminated and fails to complete. Learn more about using self-hosted runners with GitHub Actions&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-04-actions-jobs-executing-on-self-hosted-runners-will-now-timeout-in-5-days&quot;&gt;Actions: Jobs executing on self hosted runners will now timeout in 5 days&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;アクション ランナーが本当に一時的でより安全であることを保証するために、 &lt;a href=&quot;https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners/about-self-hosted-runners#usage-limits&quot;&gt;自己ホスト ジョブの実行タイムアウトを&lt;/a&gt;5 日に制限するようになりました。ジョブがこの制限に達すると、ジョブは終了し、完了できません。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners/about-self-hosted-runners&quot;&gt;GitHub Actions でのセルフホスト ランナーの使用の詳細については、こちらをご覧ください。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-04-04-actions-jobs-executing-on-self-hosted-runners-will-now-timeout-in-5-days&quot;&gt;アクション: 自己ホスト ランナーで実行中のジョブは 5 日でタイムアウトするようになりました&lt;/a&gt;first appeared on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77292</post-id></item><item><title>シークレット スキャンで GitHub wiki のシークレットが検出されるようになりました</title><link>https://github.blog/changelog/2024-04-03-secret-scanning-now-detects-secrets-in-github-wikis</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 03 Apr 2024 17:26:54 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-03-secret-scanning-now-detects-secrets-in-github-wikis</guid><description>&lt;p&gt;Secret scanning now detects secrets in GitHub wikis&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-03-secret-scanning-now-detects-secrets-in-github-wikis&quot;&gt;Secret scanning now detects secrets in GitHub wikis&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;シークレット スキャンの対象範囲が&lt;a href=&quot;https://docs.github.com/en/communities/documenting-your-project-with-wikis/about-wikis&quot;&gt;GitHub wiki&lt;/a&gt;コンテンツに拡大されています。リポジトリでシークレット スキャンが有効になっている場合は、GitHub Wiki で見つかった新しく導入されたシークレットに関するアラートの受信が自動的に開始されます。&lt;/p&gt;
&lt;p&gt; GitHub Wiki で公開された秘密は&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-partner-program&quot;&gt;、シークレット スキャン パートナー プログラム&lt;/a&gt;に参加しているシークレット スキャン パートナーにも送信されます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;フィードバックを共有したり、詳細を確認したりできます&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;シークレット スキャンに関する&lt;a href=&quot;https://calendar.app.google/YbAHr5Cnai2uhENr9&quot;&gt;60 分間のフィードバック セッション&lt;/a&gt;にサインアップすると、時間の補償を受けられます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンでリポジトリを保護する&lt;/a&gt;方法、または&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-partner-program#joining-the-secret-scanning-program-on-github&quot;&gt;シークレット スキャン パートナーになる&lt;/a&gt;方法を学びます。&lt;/p&gt;
&lt;p&gt; The post &lt;a href=&quot;https://github.blog/changelog/2024-04-03-secret-scanning-now-detects-secrets-in-github-wikis&quot;&gt;シークレット スキャンにより GitHub wiki のシークレットが検出されるようになりまし&lt;/a&gt;た appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; 。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77281</post-id></item><item><title>GitHub Actions: ハードウェア アクセラレーションによる Android 仮想化が利用可能になりました</title><link>https://github.blog/changelog/2024-04-02-github-actions-hardware-accelerated-android-virtualization-now-available</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 02 Apr 2024 17:08:40 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-02-github-actions-hardware-accelerated-android-virtualization-now-available</guid><description>&lt;p&gt;GitHub Actions: Hardware accelerated Android virtualization now available&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-02-github-actions-hardware-accelerated-android-virtualization-now-available&quot;&gt;GitHub Actions: Hardware accelerated Android virtualization now available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;現在、2 vCPU GitHub でホストされている Linux ランナーの Actions ユーザーは、Android テストにハードウェア アクセラレーションを利用できるようになります。以前は、この機能は 4 つ以上の vCPU を備えたランナーでのみ利用可能でした。&lt;/p&gt;
&lt;p&gt; Linux でこれを利用するには、Actions ユーザーは、runner ユーザーを KVM ユーザー グループに追加する必要があります。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; - name: Enable KVM group perms
 run: |
 echo &amp;#39;KERNEL==&quot;kvm&quot;, GROUP=&quot;kvm&quot;, MODE=&quot;0666&quot;, OPTIONS+=&quot;static_node=kvm&quot;&amp;#39; | sudo tee /etc/udev/rules.d/99-kvm4all.rules
 sudo udevadm control --reload-rules
 sudo udevadm trigger --name-match=kvm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;これにより、 &lt;a href=&quot;http://github.com/reactivecircus/android-emulator-runner&quot;&gt;reactivecircus/android-emulator-runner&lt;/a&gt;などの Android エミュレータ アクションを使用するときにハードウェア アクセラレーションを利用できるようになります。&lt;/p&gt;
&lt;p&gt;ハードウェア アクセラレーションのセットアップ方法の詳細については、 &lt;a href=&quot;https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources&quot;&gt;ドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; The post &lt;a href=&quot;https://github.blog/changelog/2024-04-02-github-actions-hardware-accelerated-android-virtualization-now-available&quot;&gt;GitHub Actions: ハードウェア アクセラレーションによる Android 仮想化が利用可能になりまし&lt;/a&gt;た first appeared on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77235</post-id></item></channel></rss>