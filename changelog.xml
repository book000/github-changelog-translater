<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Fri, 30 Jun 2023 14:23:41 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.2.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>GitHub Actions – アクションランナーの一般提供</title><link>https://github.blog/changelog/2023-06-30-github-actions-actions-runner-general-availability</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 30 Jun 2023 14:23:41 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-30-github-actions-actions-runner-general-availability</guid><description>GitHub Actions - Actions Runner General availability </description><content:encoded>&lt;p&gt;Actions ランナー コントローラーと&lt;a href=&quot;https://github.com/actions/actions-runner-controller/releases/tag/gha-runner-scale-set-0.4.0&quot;&gt;ランナー スケール セット&lt;/a&gt;を使用した自動スケーリングのセルフホスト ランナーが一般提供されるようになりました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/quickstart-for-actions-runner-controller&quot;&gt;自己ホスト ランナーの呼び出しについて詳しく学び&lt;/a&gt;、&lt;a href=&quot;https://github.com/orgs/community/discussions/59735&quot;&gt;コミュニティ ディスカッション&lt;/a&gt;でフィードバックを共有してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72837</post-id></item><item><title>dependabot パブリック ベータ版のグループ化されたバージョン更新</title><link>https://github.blog/changelog/2023-06-30-grouped-version-updates-for-dependabot-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 30 Jun 2023 12:02:32 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-30-grouped-version-updates-for-dependabot-public-beta</guid><description>Grouped version updates for Dependabot public beta</description><content:encoded>&lt;p&gt;dependabot のバージョン更新は、依存関係をアップグレードできるときにプル リクエストをオープンすることで、依存関係を最新の状態に保つのに役立ちます。本日のリリースでは、バージョン更新を依存関係名ごとにグループ化できるようになりました。&lt;/p&gt;
&lt;p&gt;今日まで、Dependabot は、 &lt;code&gt;dependabot.yml&lt;/code&gt;の設定に従って、依存関係の更新ごとに常に個別のプル リクエストをオープンしていました。これにより、Dependabot のプル リクエストが大量に発生する可能性があるだけでなく、いくつかの依存関係は相互に並行して更新する必要があり、そうしないと更新が失敗します。このような場合、手動で更新を行うまで、個々の dependabot プル リクエストは常に失敗します。&lt;/p&gt;
&lt;p&gt;これで、 &lt;code&gt;dependabot.yml&lt;/code&gt;構成ファイルで、パッケージ名のパターン マッチングに基づいて、Dependabot のカスタム グループ化ルールを設定できるようになりました。これらのルールを設定する方法の例を次に示します。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;version: 2
 updates:
 - package-ecosystem: &quot;bundler&quot;
 directory: &quot;/&quot;
 schedule:
 interval: weekly
 # New!
 groups:
 # This is the name of your group, it will be used in PR titles and branch names
 dev-dependencies:
 # A pattern can be...
 patterns:
 - &quot;rubocop&quot; # a single dependency name
 - &quot;aws*&quot; # or a wildcard string that matches multiple dependencies
 # If you&amp;#39;d simply like to group as many dependencies together as possible,
 # you can use the wildcard * - but keep in mind this may open a very large PR!
 # Additionally, you can specify any dependencies to be excluded from the group
 exclude-patterns:
 - &quot;aws-sdk&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;この構成は、定期的にスケジュールされた dependabot バージョンの更新にのみ適用されます。 dependabot のセキュリティ更新プログラムは、構成されたグループ化ルールに一致する場合でも、引き続き個別のプル リクエストとして開かれます。&lt;/p&gt;
&lt;p&gt;この機能はベータ版であるため、不安定になる可能性があり、機能セットは現在制限されています。発生したバグは&lt;a href=&quot;https://github.com/dependabot/dependabot-core/issues/new?assignees=&amp;labels=T%3A+bug+%F0%9F%90%9E,grouped-updates-beta&amp;template=bug-report.yml&quot;&gt;dependabot-core リポジトリ&lt;/a&gt;に記録できます。&lt;/p&gt;
&lt;p&gt; dependabot バージョン更新のグループ化ルールの詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file&quot;&gt;ドキュメントを参照してください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72806</post-id></item><item><title>2FA の TOTP コードは使い捨てになりました</title><link>https://github.blog/changelog/2023-06-29-totp-codes-for-2fa-are-now-single-use</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 29 Jun 2023 21:56:12 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-29-totp-codes-for-2fa-are-now-single-use</guid><description>TOTP codes for 2FA are now single-use</description><content:encoded>&lt;p&gt;2 要素認証中、および GitHub.com で &lt;a href=&quot;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/sudo-mode&quot;&gt;機密性の高いアクションのために&lt;code&gt;sudo&lt;/code&gt;モード&lt;/a&gt;に入るとき、有効期間内に TOTP コードが複数回正常に使用される可能性がありました。セキュリティを向上させるため、この再利用は GitHub.com では許可されなくなり、GHES ではバージョン 3.10 で更新されます。&lt;/p&gt;
&lt;p&gt;複数の並列ジョブにわたってログイン フローのスクリプトを作成しようとしたシステムは、この変更の結果として機能しなくなる可能性があります。&lt;/p&gt;
&lt;p&gt; TOTP による 2 要素認証の&lt;a href=&quot;https://docs.github.com/en/authentication/securing-your-account-with-two-factor-authentication-2fa/configuring-two-factor-authentication#configuring-two-factor-authentication-using-a-totp-mobile-app&quot;&gt;詳細については、こちらをご覧ください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72803</post-id></item><item><title>セキュリティ リスクと適用範囲のページが一般提供され、エンタープライズ レベルの概要ページに置き換わります。</title><link>https://github.blog/changelog/2023-06-29-security-risk-and-coverage-pages-are-now-generally-available-and-replace-the-enterprise-level-overview-page</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 29 Jun 2023 21:22:02 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-29-security-risk-and-coverage-pages-are-now-generally-available-and-replace-the-enterprise-level-overview-page</guid><description>Security risk and coverage pages are now generally available and replace the enterprise-level overview page</description><content:encoded>&lt;p&gt;本日、組織およびエンタープライズ レベルのセキュリティ リスクと補償ページの一般公開を発表します。&lt;/p&gt;
&lt;p&gt;さらに、Dependabot、コード スキャン、およびシークレット スキャンのアラート中心のページも、組織レベルとエンタープライズ レベルの両方で一般提供されるようになりました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2023-06-15-risk-and-coverage-views-on-the-code-security-tab-for-enterprises-public-beta/&quot;&gt;以前に発表された&lt;/a&gt;ように、エンタープライズ レベルのセキュリティの概要ページは、リスクと適用範囲のページに置き換えられました。リスク ページは、セキュリティの危険性を評価するのに役立つように設計されており、カバレッジ ビューは、セキュリティ機能の有効化を管理するのに役立つように設計されています。&lt;/p&gt;
&lt;p&gt;新しいエンタープライズレベルのリスクと補償ページにアクセスするには、次の手順に従います。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; GitHub.com の右上隅にあるプロフィール写真に移動します。&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;[貴社]&lt;/strong&gt;をクリックします。&lt;/li&gt;
&lt;li&gt;企業一覧からご覧になりたい企業を選択してください。&lt;/li&gt;
&lt;li&gt;エンタープライズ アカウントのサイドバーで、 &lt;strong&gt;[Code Security]&lt;/strong&gt;をクリックします。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;これらの改善点は GitHub.com に提供されており、GitHub Enterprise Server 3.10 で利用できるようになります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/security-overview/about-the-security-overview&quot;&gt;新しいリスクと補償ページの詳細をご覧になり&lt;/a&gt;、&lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;フィードバックをお送りください。&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72802</post-id></item><item><title>Copilot 2023 年 6 月の更新</title><link>https://github.blog/changelog/2023-06-29-copilot-june-2023-update</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 29 Jun 2023 20:17:03 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-29-auto-draft</guid><description>With GitHub Copilot being used by over 20K organizations &amp;#127881; and the increased momentum of our Chat functionality, we wanted to take this opportunity to highlight recent updates and ships. GitHub Copilot Chat (Visual Studio Code) Note: To get access to the new chat-based GitHub Copilot features, you&amp;#8217;ll need to sign up for the GitHub [&amp;#8230;]</description><content:encoded>&lt;p&gt;GitHub Copilot は&lt;strong&gt;20,000 を超える組織&lt;/strong&gt;で使用されています&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8&quot; alias=&quot;tada&quot;&gt; 🎉&lt;/g-emoji&gt;そして、チャット機能の勢いが増していることから、この機会に最近のアップデートとリリースに焦点を当てたいと思いました。&lt;/p&gt;
&lt;h3 id=&quot;github-copilot-chat-visual-studio-code&quot;&gt; GitHub コパイロット チャット (Visual Studio コード) &lt;a href=&quot;#github-copilot-chat-visual-studio-code&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;GitHub Copilot Chat (Visual Studio Code)&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;: 新しいチャットベースの GitHub Copilot 機能にアクセスするには、 &lt;a href=&quot;https://github.com/github-copilot/chat_waitlist_signup/join&quot;&gt;GitHub Copilot チャット待機リスト&lt;/a&gt;にサインアップする必要があります。&lt;/p&gt;
&lt;p&gt; GitHub Copilot Chat 拡張機能は、 &lt;a href=&quot;https://code.visualstudio.com/updates/v1_79#_github-copilot&quot;&gt;Visual Studio Code v1.79&lt;/a&gt;のリリースにより Insider から Stable に卒業しました。主な内容は次のとおりです。&lt;br /&gt;
 –&lt;strong&gt;エディター チャット&lt;/strong&gt;の改善。最も注目すべき点は、デフォルト モードを「livePreview」に変更したことです。このモードでは、変更はドキュメントに直接適用され、&lt;a href=&quot;https://code.visualstudio.com/assets/updates/1_79/copilot-editor-chat.png&quot;&gt;埋め込まれた差分ビューで表示されます。&lt;/a&gt;&lt;br /&gt;
 –&lt;strong&gt;ノートブック ドキュメント&lt;/strong&gt;で Copilot を使用する場合、Copilot はノートブック コンテキストを使用して、より関連性の高い提案を提供できます。&lt;br /&gt;
 – ノートブック セルを実行する場合、Copilot は&lt;strong&gt;セル実行の失敗&lt;/strong&gt;に関する提案を提供します。&lt;br /&gt;
 – レビュー スレッドを表示しているときに、Copilot を使用して&lt;strong&gt;レビュー コメントを直接適用&lt;/strong&gt;できるようになりました。&lt;br /&gt;
 – チャットを使用して、コンテキストを離れることなく&lt;strong&gt;簡単なプログラミングの質問&lt;/strong&gt;をする実験。&lt;br /&gt;
 –&lt;strong&gt;チャット リクエストの [X] アイコンをクリックして、チャット リクエストと応答のペアを削除&lt;/strong&gt;できるようになりました。&lt;br /&gt;
 – サイドバーとエディターの間で&lt;strong&gt;チャットセッションを前後に移動する機能が&lt;/strong&gt;追加されました。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; alt=&quot;VSCode-副操縦士-チャット&quot; src=&quot;https://i0.wp.com/github-production-user-asset-6210df.s3.amazonaws.com/884366/249854281-4384520a-f3f3-4f57-b3a7-7e1ee9ea84ac.png&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;以前の更新については、Insiders&lt;a href=&quot;https://github.com/microsoft/vscode-docs/blob/vnext/release-notes/v1_78.md#github-copilot&quot;&gt;2023 年 4 月 (v1.78)&lt;/a&gt;リリース ノートを参照してください。&lt;/p&gt;
&lt;p&gt; GitHub Copilot、ヒント、コツ、ベスト プラクティスの詳細については、 &lt;a href=&quot;https://www.youtube.com/playlist?list=PLj6YeMhvp2S5_hvBl2SE-7YCHYlLQ0bPt&quot;&gt;VS Code YouTube チャンネル&lt;/a&gt;をご覧ください。ここでは、GitHub Copilot の&lt;a href=&quot;https://www.youtube.com/watch?v=Fi3AJZZregI&amp;list=PLj6YeMhvp2S5_hvBl2SE-7YCHYlLQ0bPt&amp;index=1&quot;&gt;概要&lt;/a&gt;、 &lt;a href=&quot;https://www.youtube.com/watch?v=VsUQlSyQn1E&amp;list=PLj6YeMhvp2S5_hvBl2SE-7YCHYlLQ0bPt&amp;index=6&quot;&gt;言語固有の&lt;/a&gt;使用法、開発に Copilot を使用する場合の&lt;a href=&quot;https://www.youtube.com/watch?v=ImWfIDTxn7E&amp;list=PLj6YeMhvp2S5_hvBl2SE-7YCHYlLQ0bPt&amp;index=9&quot;&gt;効果的なプロンプト&lt;/a&gt;に関するガイダンスが記載されています。&lt;/p&gt;
&lt;h3 id=&quot;copilot-with-your-debugger-visual-studio&quot;&gt;デバッガーを使用したコパイロット (Visual Studio) &lt;a href=&quot;#copilot-with-your-debugger-visual-studio&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Copilot with your debugger (Visual Studio)&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; Visual Studio の Copilot Chat は、例外が発生したときに問題を解決する方法を見つけるのに役立ちます。例外ダイアログのリンクをクリックすると、例外の説明と考えられる原因、および問題をインラインで解決するための推奨コード解決策が表示されます。 Copilot は、例外、コード、変数値に関するデータを収集して、正確な質問を作成し、優れた回答を得るのに役立ちます。これをホット リロードなどの機能と組み合わせると、提案された変更をテストして、はるかに速く作業を進めることができます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; alt=&quot;VS-コパイロット-デバッガー&quot; src=&quot;https://i0.wp.com/github-production-user-asset-6210df.s3.amazonaws.com/884366/249854323-ce51d8db-011e-4b75-897e-fac81d0db646.png&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;visual-studios-intellisense-list-can-now-steer-github-copilot-code-completions&quot;&gt; Visual Studio の IntelliSense リストが GitHub Copilot のコード補完を制御できるようになりました&lt;a href=&quot;#visual-studios-intellisense-list-can-now-steer-github-copilot-code-completions&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Visual Studio&amp;#8217;s IntelliSense list can now steer GitHub Copilot code completions&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; GitHub Copilot と Visual Studio の組み込み AI 支援機能の連携が強化されました。最新リリース (バージョン 1.84 以降) では、IntelliSense が開いているときに Copilot の予測が表示されるだけでなく、IntelliSense の選択によって&lt;a href=&quot;https://devblogs.microsoft.com/visualstudio/github-copilot-visual-studio-intellisense/&quot;&gt;Copilot によって提供される予測も制御されます&lt;/a&gt;。これは、必要なコード補完を探索して取得するのに役立ちます。これは、Visual Studio の組み込み IntelliCode AI が IntelliSense リスト内のメンバー ランキングを提供する、スター付き補完機能で特に役立ちます。&lt;/p&gt;
&lt;h3 id=&quot;code-completion-improvements&quot;&gt;コード補完の改善&lt;a href=&quot;#code-completion-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Code completion improvements&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt; OpenAI、Azure AI、GitHub の連携による GPT-3.5 Turbo を搭載した新しいモデルのおかげで、GitHub Copilot は開発者にとってさらに強力で応答性が向上し、レイテンシが 13% 改善されました。&lt;/li&gt;
&lt;li&gt;コード補完では、提案と受け入れ率を向上させる 8K コンテキスト ウィンドウを使用します。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;bug-fixes-and-improvements&quot;&gt;バグ修正と改善&lt;a href=&quot;#bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Bug fixes and improvements&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;組織のすべてのユーザーの CSV をエクスポートする機能が追加されました。シート管理ページから、すべてのユーザーのフラット リストをエクスポートできます。これは、ページごとにスクロールすることを避け、チーム内の誰が Copilot を使用しているかをより正確に把握したい管理者にとって、重大な問題点に対処するのに役立ちます。&lt;/li&gt;
&lt;li&gt; Copilot のサインアップ フローを更新し、GitHub アカウントと Copilot へのサインアップを 1 つの流動的なエクスペリエンスで簡単にできるようにしました。&lt;/li&gt;
&lt;li&gt;フランスは Copilot コード補完リクエストを提供する最新の地域であり、ヨーロッパの顧客のレイテンシーを改善します。これは当社の既存のスイス拠点に追加されるものです。&lt;/li&gt;
&lt;li&gt; Visual Studio では、コード補完に使用するのと同じ灰色のテキストのアプローチを使用して、コードへのコード挿入をプレビューする機能を追加しました。&lt;/li&gt;
&lt;li&gt; Visual Studio でチャット リクエストを削除できるようになりました&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72798</post-id></item><item><title>企業内で非アクティブな場合、Dependabot のプル リクエストが一時停止される</title><link>https://github.blog/changelog/2023-06-29-dependabot-pull-requests-pause-for-inactivity-in-enterprises</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 29 Jun 2023 14:25:13 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-29-dependabot-pull-requests-pause-for-inactivity-in-enterprises</guid><description>Dependabot pull requests pause for inactivity in enterprises</description><content:encoded>&lt;p&gt;エンタープライズ ユーザーは、Dependabot のセキュリティとバージョンの更新がリポジトリに対して一時停止される可能性がある追加機能に気づくでしょう。&lt;/p&gt;
&lt;p&gt; dependabot の更新を使用するエンタープライズ ユーザーで、リポジトリ内で 90 日を超える期間、Dependabot のプル リクエストとのマージ、クローズ、その他の操作などのアクティビティがなかった場合、更新は一時停止されます。アクティビティを再開するには、Dependabot のプル リクエストの 1 つをマージまたは閉じるか、リポジトリ内の dependabot 構成ファイルを変更するだけです。&lt;/p&gt;
&lt;p&gt;この変更により、Dependabot は関心のあるリポジトリにさらに集中し、非アクティブな dependabot プル リクエストでの GitHub Actions の使用時間を削減できます。&lt;/p&gt;
&lt;p&gt; GitHub Advanced Security でセキュリティの概要を使用している場合は、組織内のどのリポジトリが一時停止されているかをセキュリティ カバレッジ ビューから確認できます。&lt;/p&gt;
&lt;p&gt;また&lt;code&gt;/repos/{owner}/{repo}/automated-security-fixes&lt;/code&gt; REST API エンドポイントをクエリすることで、Dependabot がリポジトリに対して一時停止されているかどうかを確認することもできます。これにより、リポジトリの有効化ステータスと一時停止ステータスの両方が返されます。リポジトリ。&lt;/p&gt;
&lt;h3 id=&quot;when-will-dependabot-become-paused&quot; id=&quot;when-will-dependabot-become-paused&quot; &gt; dependabot はいつ一時停止されますか? &lt;a href=&quot;#when-will-dependabot-become-paused&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;When will Dependabot become paused?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;この変更は、Dependabot プル リクエストが存在するものの変更されていないリポジトリにのみ適用されます。オープンされている Expandabot プル リクエストがない場合、Dependabot は一時停止されません。&lt;/p&gt;
&lt;p&gt;以下のことが少なくとも 90 日間当てはまる必要があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; dependabot PR がマージされていない&lt;/li&gt;
&lt;li&gt;dependabot 構成ファイルに変更が加えられていない&lt;/li&gt;
&lt;li&gt;@dependabot のコメント操作は実行されていません&lt;/li&gt;
&lt;li&gt;ユーザーによって閉じられたDependabot PRがありません&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;90 日以内に少なくとも 1 つの dependabot PR を受信して​​いる&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;90 日のウィンドウの終わりに少なくとも 1 つの dependabot PR が開いている&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;この期間全体にわたって、Dependabot が有効になっている&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;how-will-dependabot-let-me-know&quot; id=&quot;how-will-dependabot-let-me-know&quot; &gt;dependabot はどのように私に知らせてくれますか? &lt;a href=&quot;#how-will-dependabot-let-me-know&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How will Dependabot let me know?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; dependabot は、開いているすべての dependabot プル リクエストの本文に通知を追加し、それらに&lt;code&gt;dependabot-paused&lt;/code&gt;ラベルを追加します。また、Dependabot は、リポジトリ設定ページ (「Dependabot」の下) と、Dependabot アラート ページ (Dependabot のセキュリティ更新が影響を受ける場合) の UI にバナー通知を追加します。&lt;/p&gt;
&lt;h3 id=&quot;who-can-use-this-feature&quot; id=&quot;who-can-use-this-feature&quot; &gt;この機能は誰が使用できますか? &lt;a href=&quot;#who-can-use-this-feature&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Who can use this feature?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;この変更は、Dependabot アラートやその後の通知には適用&lt;em&gt;されません&lt;/em&gt;。したがって、Dependabot のバージョン更新またはセキュリティ更新を自動化しているが、しばらくこれらのプル リクエストとやり取りしていないリポジトリのみが影響を受けます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/2023-01-12-a-smarter-quieter-dependabot&quot;&gt;この変更について&lt;/a&gt;詳しくはこちら&lt;br /&gt;
&lt;a href=&quot;https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28&quot;&gt;REST API と対話する方法の詳細については、&lt;/a&gt;こちらをご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72778</post-id></item><item><title>コード スキャンのデフォルト設定が、Swift を除くすべての CodeQL でサポートされている言語で利用できるようになりました。</title><link>https://github.blog/changelog/2023-06-29-code-scanning-default-setup-is-now-available-for-all-codeql-supported-languages-excluding-swift</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 29 Jun 2023 12:39:39 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-29-code-scanning-default-setup-is-now-available-for-all-codeql-supported-languages-excluding-swift</guid><description>Code scanning default setup is now available for all CodeQL supported languages, excluding Swift</description><content:encoded>&lt;p&gt;コード スキャンのデフォルト設定は、Swift を除くすべての&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/&quot;&gt;CodeQL でサポートされる言語&lt;/a&gt;で利用できるようになりました。これには、リポジトリ レベルでの JavaScript/TypeScript、Ruby、Python、Go、Java/Kotlin、C/C++、C# のサポートが含まれます。まもなくサポートを拡張して Swift を含める予定です。また、すべての CodeQL 言語サポートを組織レベルに拡張することにも取り組んでいます。&lt;/p&gt;
&lt;p&gt;デフォルトのセットアップでは、リポジトリ内の言語が検出され、JavaScript/TypeScript、Ruby、Python、Go が自動的に分析されます。この機能強化により、構成をカスタマイズして Java/Kotlin、C/C++、C# も分析できるようになりました。構成は、セットアップ中またはセットアップ後にいつでも表示および編集できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/rest/code-scanning?apiVersion=2022-11-28#update-a-code-scanning-default-setup-configuration&quot;&gt;REST API&lt;/a&gt;を使用して、CodeQL でサポートされる言語をデフォルトのセットアップ構成に含めることもできます。 &lt;/p&gt;

&lt;h3 id=&quot;what-if-the-analysis-for-a-language-fails-in-default-setup&quot; id=&quot;what-if-the-analysis-for-a-language-fails-in-default-setup&quot; &gt;デフォルト設定で言語の分析が失敗した場合はどうなりますか? &lt;a href=&quot;#what-if-the-analysis-for-a-language-fails-in-default-setup&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What if the analysis for a language fails in default setup?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;コードをコンパイルできない場合など、特定の言語の CodeQL 分析が失敗する可能性があります。デフォルト設定で言語の CodeQL 分析が失敗した場合、リポジトリの設定ページのコード セキュリティと分析セクションにエラー メッセージが表示されます。この状況を解決するには、次のことができます。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;構成から言語の選択を解除し、成功した言語のデフォルト設定を引き続き使用します。&lt;/li&gt;
&lt;/ol&gt;

&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning-for-a-repository#creating-an-advanced-setup&quot;&gt;詳細設定&lt;/a&gt;に変換します。高度なセットアップでは&lt;code&gt;yml&lt;/code&gt;ファイルを使用し、CodeQL 分析が成功するために必要なビルド情報を提供できます。&lt;/li&gt;
&lt;/ol&gt;

&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;言語障害の原因をデバッグして修正します。アクション ログには失敗の理由が示されるため、これを解決して分析を成功させることができます。 &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;why-arent-some-languages-automatically-included-in-the-default-setup-configuration-&quot; id=&quot;why-arent-some-languages-automatically-included-in-the-default-setup-configuration-&quot; &gt;一部の言語がデフォルトのセットアップ構成に自動的に含まれないのはなぜですか? &lt;a href=&quot;#why-arent-some-languages-automatically-included-in-the-default-setup-configuration-&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Why aren&amp;#039;t some languages automatically included in the default setup configuration ?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; Java (Kotlin を含む)、C/C++、および C# は、多くの場合、より高度な構成が必要となるため、デフォルトのセットアップ構成には自動的に含まれません。 CodeQL 分析を続行するには、これらの言語で書かれたコードをコンパイルする必要があります。 CodeQL はコードを自動的にビルドしようとしますが、コードにオーダーメイドのビルド手順が必要な場合は失敗する可能性があります。&lt;/p&gt;
&lt;p&gt; Java (Kotlin を含む)、C/C++、および C# は、組織レベルの一括コード スキャン設定には含まれません。私たちは、すべての CodeQL 言語サポートを組織レベルに間もなく拡張することに取り組んでいます。&lt;/p&gt;
&lt;p&gt;コード スキャンのデフォルト設定の詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning-for-a-repository#configuring-code-scanning-automatically&quot;&gt;「コード スキャンを自動的に設定する」&lt;/a&gt;を参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72771</post-id></item><item><title>新しい拡張可能なイベント ペイロード ビューがすべての監査ログで一般的に利用可能になりました</title><link>https://github.blog/changelog/2023-06-28-new-expandable-event-payload-view-is-generally-available-in-all-audit-logs</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 28 Jun 2023 20:49:44 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-28-new-expandable-event-payload-view-is-generally-available-in-all-audit-logs</guid><description>New expandable event payload view is generally available in all audit logs</description><content:encoded>&lt;p&gt;エンタープライズおよび組織の監査ログ UI とユーザー セキュリティ ログ UI には、各イベントの完全な監査ログ ペイロードを表示する展開可能なビューが含まれるようになりました。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/github-production-user-asset-6210df.s3.amazonaws.com/95828167/249559721-9b55efce-e9b7-44bf-9e3d-0f8590ab8ff8.png?ssl=1&quot; alt=&quot;画像&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;お客様は、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/accessing-the-audit-log-for-your-enterprise&quot;&gt;U/I 経由で監査ログを検索したり&lt;/a&gt;、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/exporting-audit-log-activity-for-your-enterprise&quot;&gt;監査ログを JSON ファイルにエクスポートしたり&lt;/a&gt;、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/using-the-audit-log-api-for-your-enterprise_&quot;&gt;監査ログ API をクエリし&lt;/a&gt;たり、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/streaming-the-audit-log-for-your-enterprise&quot;&gt;サポートされているストリーミング エンドポイントの 1 つに監査ログをストリーミングしたりする&lt;/a&gt;ときに、同じイベント メタデータを確認できるようになりました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72743</post-id></item><item><title>マージオルト戦略を使用して作成されたコミットをリベースするようになりました</title><link>https://github.blog/changelog/2023-06-28-rebase-commits-now-created-using-the-merge-ort-strategy</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 28 Jun 2023 13:48:04 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-28-rebase-commits-now-created-using-the-merge-ort-strategy</guid><description>Rebase commits now created using the merge-ort strategy</description><content:encoded>&lt;p&gt;昨年、私たちは&lt;a href=&quot;https://github.blog/2021-08-16-highlights-from-git-2-33/#merge-ort-a-new-merge-strategy&quot;&gt;&lt;code&gt;merge-ort&lt;/code&gt;&lt;/a&gt;戦略を使用することで、 &lt;a href=&quot;https://github.blog/changelog/2022-09-12-merge-commits-now-created-using-the-merge-ort-strategy/&quot;&gt;プル リクエストのマージを大幅に高速&lt;/a&gt;化しました。現在、リベース コミットは同じ&lt;code&gt;merge-ort&lt;/code&gt;処理を受けます。これにより、速度が大幅に向上しました。P99 (最も遅い外れ値 1% を除いたリベースの完了までの平均時間) は、約 3.6 秒かかっていました。新しい戦略での P99 は 0.35 秒です。高速化により、タイムアウトにより失敗する PR リベースの割合は 1.3% から 0.14% に減少しました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://git-scm.com/docs/merge-strategies#Documentation/merge-strategies.txt-ort&quot;&gt;Git &lt;code&gt;merge-ort&lt;/code&gt;戦略&lt;/a&gt;と&lt;a href=&quot;https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/about-merge-methods-on-github&quot;&gt;プル リクエストのマージ方法&lt;/a&gt;について詳しくは、こちらをご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72724</post-id></item><item><title>GitHub アクション – OIDC と AWS の統合に関する最新情報</title><link>https://github.blog/changelog/2023-06-27-github-actions-update-on-oidc-integration-with-aws</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 27 Jun 2023 20:31:32 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-06-27-auto-draft</guid><description>We have received customers reporting errors with Actions’ OIDC integration with AWS. This happens for customers who are pinned to a single intermediary thumbprint from the Certificate Authority (CA) of the Actions SSL certificate. There are two possible intermediary certificates for the Actions SSL certificate and either can be returned by our servers, requiring customers [&amp;#8230;]</description><content:encoded>&lt;p&gt;Actions の&lt;a href=&quot;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services&quot;&gt;OIDC と AWS の統合に関する&lt;/a&gt;エラーをお客様から報告を受けています。&lt;br /&gt;
これは、Actions SSL 証明書の認証局 (CA) からの単一の中間サムプリントに固定されている顧客に発生します。&lt;/p&gt;
&lt;p&gt; Actions SSL 証明書には 2 つの中間証明書があり、どちらも当社のサーバーから返される可能性があるため、顧客は両方を信頼する必要があります。これは、中間証明書が CA によって相互署名されている場合の既知の動作です。&lt;/p&gt;
&lt;p&gt; OIDC を介した AWS での認証で問題が発生しているお客様は&lt;a href=&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc.html&quot;&gt;、AWS ポータルで両方のサムプリントを信頼できるように設定する&lt;/a&gt;必要があります。&lt;br /&gt;
現時点で既知の中間サムプリントは次の 2 つです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;6938fd4d98bab03faadb97b34396831e3780aea1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;1c58a3a8518e8759bf075b76b750d4f2df264fcd&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect&quot;&gt;GitHub Actions での OIDC の使用について詳しくは、こちらをご覧ください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">72718</post-id></item></channel></rss>