<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Mon, 25 Nov 2024 21:58:59 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.6.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>Copilot ユーザー管理 REST API のシート `created_at` タイムスタンプを更新 [パブリック プレビュー]</title><link>https://github.blog/changelog/2024-11-22-update-to-seat-created_at-timestamp-in-the-copilot-user-management-rest-api-public-preview</link><dc:creator>Allison</dc:creator><pubDate>Fri, 22 Nov 2024 17:51:17 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-11-22-update-to-seat-created_at-timestamp-in-the-copilot-user-management-rest-api-public-preview</guid><description>&lt;p&gt;Update to seat `created_at` timestamp in the Copilot user management REST API [Public Preview]&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-11-22-update-to-seat-created_at-timestamp-in-the-copilot-user-management-rest-api-public-preview&quot;&gt;Update to seat `created_at` timestamp in the Copilot user management REST API [Public Preview]&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;お客様からのフィードバックに基づいて、次の REST API エンドポイントからの応答の Copilot シート詳細部分での&lt;code&gt;created_at&lt;/code&gt;タイムスタンプの動作方法を更新しました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;/organization/{org}/billing/copilot/seats&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;/enterprises/{enterprise}/billing/copilot/seats&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;/organization/{org}/members/{username}/copilot&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;code&gt;created_at&lt;/code&gt;タイムスタンプには、チーム、エンタープライズ チーム、または組織にアクセス権が付与されたときではなく、ユーザーが Copilot アクセス権を受け取ったときが表示されるようになりました。これは、監査ログ内のシートの対応する&lt;code&gt;seat_added&lt;/code&gt;イベントのタイムスタンプと一致します。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-11-22-update-to-seat-created_at-timestamp-in-the-copilot-user-management-rest-api-public-preview&quot;&gt;Copilot ユーザー管理 REST API [パブリック プレビュー] のシート `created_at` タイムスタンプを更新するという&lt;/a&gt;投稿は、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">81392</post-id></item><item><title>プログラムによる監査ログ構成とマルチエンドポイントストリーミング</title><link>https://github.blog/changelog/2024-11-21-programmatic-audit-log-configuration-and-multi-endpoint-streaming</link><dc:creator>Allison</dc:creator><pubDate>Thu, 21 Nov 2024 21:53:23 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-11-21-programmatic-audit-log-configuration-and-multi-endpoint-streaming</guid><description>&lt;p&gt;Programmatic audit log configuration and multi-endpoint streaming&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-11-21-programmatic-audit-log-configuration-and-multi-endpoint-streaming&quot;&gt;Programmatic audit log configuration and multi-endpoint streaming&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;監査ログは、企業のセキュリティを確保し、コンプライアンスに向けた企業活動を監査する上で重要な役割を果たします。監査ログ ストリーミングは、2022 年 1 月に一般提供されて以来、 &lt;strong&gt;2,000 を超える企業&lt;/strong&gt;が監査ログを企業の優先&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/streaming-the-audit-log-for-your-enterprise#setting-up-audit-log-streaming&quot;&gt;ストリーミング エンドポイントに送信するために使用してきました。&lt;/a&gt;選択した複数のエンドポイントへの監査ログ ストリーミングをプログラムで構成するのに役立つ 3 つの新機能を発表できることを嬉しく思います。そうすることで、お客様がセキュリティとコンプライアンスの目標を最適にサポートするツールを選択して使用できるようにすることを目指しています。&lt;/p&gt;
&lt;h3 id=&quot;audit-log-steaming-to-a-user-defined-https-event-collector&quot;&gt;ユーザー定義の HT​​TPS イベント コレクターへの監査ログ ストリーミング&lt;a href=&quot;#audit-log-steaming-to-a-user-defined-https-event-collector&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Audit log steaming to a user defined HTTPS event collector&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;プライベート プレビューに登録できるようになりました。これにより、監査ログをユーザー定義の HT​​TPS イベント コレクターにストリーミングできるようになります。これにより、HTTP ポストを受け入れることができる任意のエンドポイントに監査ログを書き込むことができ、 &lt;a href=&quot;https://github.com/orgs/community/discussions/144970#discussion-7508381&quot;&gt;GitHub 監査ログのストリーミングに関する要件を満たします。&lt;/a&gt;ユーザー定義の HT​​TPS イベント コレクターを導入すると、企業のニーズを最もよくサポートすると思われるツールに監査ログをストリーミングできるようになります。 &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/b15693c2-4101-4060-b69f-a296092c0aae&quot; alt=&quot;エンタープライズ監査ログのログ ストリーミング設定ページで、HTTPS イベント コレクターへの監査ログ ストリーミングを構成します。&quot; width=&quot;700&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;このプライベート プレビューは、GitHub Enterprise Cloud の顧客のみが利用できます。プライベート ベータへの参加に興味のある企業管理者は、GitHub アカウント マネージャーに連絡するか、&lt;a href=&quot;https://github.com/enterprise/contact&quot;&gt;営業チームに問い合わせて&lt;/a&gt;、企業でこの機能を有効にしてもらう必要があります。&lt;a href=&quot;https://github.com/orgs/community/discussions/144970&quot;&gt;コミュニティのディスカッション投稿&lt;/a&gt;にフィードバックを提供して、ご意見をお聞かせください。&lt;/p&gt;
&lt;h3 id=&quot;enterprise-audit-logs-can-be-streamed-to-two-endpoints&quot;&gt;エンタープライズ監査ログは 2 つのエンドポイントにストリーミング可能&lt;a href=&quot;#enterprise-audit-logs-can-be-streamed-to-two-endpoints&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Enterprise audit logs can be streamed to two endpoints&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;パブリック プレビューに参加して、エンタープライズの監査ログを GitHub でサポートされている 2 つのストリーミング エンドポイントにストリーミングできます。監査ログを同じタイプの 2 つのエンドポイントにストリーミングすることも、2 つの異なるプロバイダーにストリーミングすることもできます。 &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/4c40485e-f557-4c5e-b325-9973fc833f29&quot; alt=&quot;構成された 2 つのストリームを示すログ ストリーミング設定ページ。 1 つは Datadog へ、もう 1 つは Splunk へ&quot; width=&quot;700&quot; /&gt;&lt;/p&gt;
&lt;p&gt;このアップデートにより、ログの保存と分析に好みのツールを選択して使用できるようになります。企業を管理する場合、コンプライアンスを確保し、強力なセキュリティ体制を維持するために複数のツールを採用する必要がある場合があります。これには、企業のセキュリティとコンプライアンスの要件をサポートするという目的を達成するために、さまざまなチームが関与し、さまざまなレベルのアクセスを必要とし、さまざまなテクノロジーを採用する可能性があります。監査ログを 2 つのエンドポイントにストリーミングすることで、複雑なログ ルーティング アーキテクチャを必要としたり、遅延の増加に対処したりすることなく、複数のログ ストレージおよび分析ツールを使用できます。&lt;/p&gt;
&lt;p&gt;このパブリック プレビューは、すべての GitHub Enterprise Cloud 顧客が利用できます。この機能が一般提供としてリリースされたら、この機能を GitHub Enterprise Server に出荷する予定です。複数のストリームを設定するには、各プロバイダーの&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/streaming-the-audit-log-for-your-enterprise#setting-up-audit-log-streaming&quot;&gt;監査ログ ストリーミングの設定手順に従ってください。&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;configure-audit-log-streaming-via-githubs-rest-api&quot;&gt; GitHub の REST API を介して監査ログ ストリーミングを構成する&lt;a href=&quot;#configure-audit-log-streaming-via-githubs-rest-api&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Configure audit log streaming via GitHub&amp;#8217;s REST API&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; REST API を介して監査ログのストリーミングを構成できるようになりました。このプライベート ベータでは、次の監査ログ ストリーミング アクションのための新しい API エンドポイントへのアクセスが許可されます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;エンドポイント構成の取得: エンタープライズの監査ログ ストリーミング構成を取得します。&lt;/li&gt;
&lt;li&gt;ストリーム キー エンドポイント: 顧客に監査ストリーミング キーを提供します。このキーは、お客様が API 呼び出し経由で送信する前にシークレットを暗号化するために不可欠です。&lt;/li&gt;
&lt;li&gt; POST エンドポイント: 新しい監査ログ ストリーム構成を作成します。&lt;/li&gt;
&lt;li&gt; PUT エンドポイント: 既存の監査ログ ストリーム構成を更新します。&lt;/li&gt;
&lt;li&gt;エンドポイントの削除: 既存の監査ログ ストリーム構成を削除します。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの新しい REST API エンドポイントの導入により、エンタープライズ所有者は、エンタープライズの監査ログ ストリームをプログラムで作成、更新、削除、一覧表示できるようになります。監査ログ ストリーミング構成へのプログラムによる更新を許可することで、お客様は監査ログ ストリーミング シークレットのローテーションなどのタスクを自動化できます。&lt;/p&gt;
&lt;p&gt;これらの新しい監査ログ ストリーミング エンドポイントでは、監査ログ ストリーミング サービスの可用性を保護するために、1 時間あたり 15 API リクエストのレート制限が課されます。現時点では、これらのエンドポイントには、クラシック パーソナル アクセス トークン (PAT) および&lt;code&gt;admin:enterprise&lt;/code&gt;スコープの OAuth トークンを介してのみアクセスできます。&lt;/p&gt;
&lt;p&gt;この機能は GitHub Enterprise Cloud (GHEC) で一般提供されており、GitHub Enterprise Server (GHES) バージョン 3.16 のリリースに含まれる予定です。詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/rest/enterprise-admin/audit-log?apiVersion=2022-11-28&quot;&gt;エンタープライズ監査ログの REST API エンドポイント&lt;/a&gt;に関するドキュメントをご覧ください。&lt;/p&gt;
&lt;p&gt;この投稿&lt;a href=&quot;https://github.blog/changelog/2024-11-21-programmatic-audit-log-configuration-and-multi-endpoint-streaming&quot;&gt;「プログラムによる監査ログ構成とマルチエンドポイント ストリーミング」&lt;/a&gt;は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">81368</post-id></item><item><title>GitHub 所有の BLOB ストレージを使用して GitHub Enterprise Importer でリポジトリを移行する – プライベート プレビュー</title><link>https://github.blog/changelog/2024-11-21-migrate-repositories-with-github-enterprise-importer-using-github-owned-blob-storage-private-preview</link><dc:creator>Allison</dc:creator><pubDate>Thu, 21 Nov 2024 20:42:30 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-11-21-migrate-repositories-with-github-enterprise-importer-using-github-owned-blob-storage-private-preview</guid><description>&lt;p&gt;Migrate repositories with GitHub Enterprise Importer using GitHub owned blob storage - Private Preview&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-11-21-migrate-repositories-with-github-enterprise-importer-using-github-owned-blob-storage-private-preview&quot;&gt;Migrate repositories with GitHub Enterprise Importer using GitHub owned blob storage &amp;#8211; Private Preview&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub Enterprise Importer (GEI) を使用してリポジトリを GitHub Enterprise Cloud に移行するときに、プライベート プレビューに登録して GitHub 所有のストレージを使用できるようになりました。これは、リポジトリの移行を実行するために、共有アクセス キーを介して顧客所有のストレージ アカウントへのアクセスを GEI に提供する必要がなくなったことを意味します。代わりに、GitHub.com に直接アップロードされたリポジトリ アーカイブを使用して移行を実行できるようになりました。&lt;/p&gt;
&lt;p&gt;プレビューに登録すると、 &lt;code&gt;--use-github-storage&lt;/code&gt;フラグを渡すことで、 &lt;code&gt;gh gei&lt;/code&gt;および&lt;code&gt;gh bbs2gh&lt;/code&gt;コマンド ライン拡張機能を介して GitHub 所有のストレージを使用するリポジトリの移行を開始できます。 &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img data-recalc-dims=&quot;1&quot; fetchpriority=&quot;high&quot; decoding=&quot;async&quot; class=&quot; width-fit  aligncenter wp-image-81365 size-full&quot; src=&quot;https://github.blog/wp-content/uploads/2024/11/388263102-26c49634-0cc8-48d2-a1ed-0b8902c6a1ed.png?resize=1263%2C771&quot; alt=&quot;gh gei コマンドライン拡張を使用し、 --use-github-storage フラグを渡すリポジトリの移行&quot; width=&quot;1263&quot; height=&quot;771&quot; srcset=&quot;https://github.blog/wp-content/uploads/2024/11/388263102-26c49634-0cc8-48d2-a1ed-0b8902c6a1ed.png?w=1263 1263w, https://github.blog/wp-content/uploads/2024/11/388263102-26c49634-0cc8-48d2-a1ed-0b8902c6a1ed.png?w=300 300w, https://github.blog/wp-content/uploads/2024/11/388263102-26c49634-0cc8-48d2-a1ed-0b8902c6a1ed.png?w=768 768w, https://github.blog/wp-content/uploads/2024/11/388263102-26c49634-0cc8-48d2-a1ed-0b8902c6a1ed.png?w=1024 1024w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;このプライベート プレビューへの参加に興味がある場合は、GitHub アカウント マネージャーに連絡するか、&lt;a href=&quot;https://github.com/enterprise/contact&quot;&gt;営業チームに問い合わせて&lt;/a&gt;、企業でこの機能を有効にしてください。その他の技術的な詳細、GitHub 所有のストレージを使用してリポジトリ移行を実行する手順、またはこの機能に関するフィードバックについては、&lt;a href=&quot;https://github.com/orgs/community/discussions/144948&quot;&gt;コミュニティ ディスカッションの投稿&lt;/a&gt;を確認してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-11-21-migrate-repositories-with-github-enterprise-importer-using-github-owned-blob-storage-private-preview&quot;&gt;「GitHub 所有の BLOB ストレージを使用して GitHub Enterprise Importer でリポジトリを移行する – プライベート プレビュー」&lt;/a&gt;という記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">81362</post-id></item><item><title>組織および企業向けの 2FA 管理の強化 [パブリック プレビュー]</title><link>https://github.blog/changelog/2024-11-21-enhanced-2fa-management-for-orgs-and-enterprises-public-preview</link><dc:creator>Allison</dc:creator><pubDate>Thu, 21 Nov 2024 20:15:50 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-11-21-enhanced-2fa-management-for-orgs-and-enterprises-public-preview</guid><description>&lt;p&gt;Enhanced 2FA Management for Orgs and Enterprises [Public Preview]&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-11-21-enhanced-2fa-management-for-orgs-and-enterprises-public-preview&quot;&gt;Enhanced 2FA management for orgs and enterprises [Public Preview]&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p align=&quot;center&quot;&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/7fed1aeb-7ee7-46f0-9894-698a41aa6723&quot; alt=&quot;企業内のすべての組織に対して 2 要素認証を有効にするオプションが選択された企業設定ページ。安全な認証方法のみを強制するオプションも選択されています。 2 要素認証を持たないメンバーが再度アクセスするには認証を追加する必要があることを管理者に通知する警告が表示されます。&quot; width=&quot;700&quot; /&gt;&lt;/p&gt;
&lt;p&gt;企業は、GitHub で強化された 2FA 登録エクスペリエンスを通じて、組織のすべてのメンバーに対する 2 要素認証 (2FA) ポリシーをより詳細に制御できるようになりました。&lt;br /&gt;
この更新により、企業および組織の管理者は、ユーザーが企業および組織のリソースにアクセスする際に安全な 2FA メソッドを維持していることを確認できます。現在、GitHub は SMS/テキスト メッセージを 2FA の安全でない方法として定義し、TOTP 認証アプリケーション、GitHub モバイル アプリ、セキュリティ キー、およびパスキーを安全な方法として定義しています。 2FA の安全な方法が構成されていないメンバー、または安全でない 2FA が構成されているメンバーは、リソースへのアクセスを許可される前に、安全な 2FA を構成するように求められます。&lt;/p&gt;
&lt;p&gt;企業は、メンバーに対する一般的な 2FA 要件と並行して、この新しい 2FA ポリシーを有効にすることができます。また、2FA 要件を持つ現在の企業は、2FA 設定を更新して、この安全な方法の適用を追加できます。新しい 2FA ポリシーに準拠していないメンバーは組織から削除されなくなり、企業レベルまたは組織レベルでの 2FA ポリシーの適用に関する歴史的な摩擦が軽減され、代わりに非準拠の間は企業または組織のリソースにアクセスできなくなります。&lt;/p&gt;
&lt;p&gt;この新しいポリシーにより、企業は、組織のメンバーシップの整合性を損なうことなく、必要なセキュリティ標準を満たすユーザーのみにアクセスを許可することでリソースを保護できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/admin/enforcing-policies/enforcing-policies-for-your-enterprise/enforcing-policies-for-security-settings-in-your-enterprise#requiring-two-factor-authentication-for-organizations-in-your-enterprise&quot;&gt;2 要素認証の安全な方法のみを要求する新しいエンタープライズ ポリシー&lt;/a&gt;と、 &lt;a href=&quot;https://github.blog/security/supply-chain-security/securing-millions-of-developers-through-2fa/&quot;&gt;GitHub が 2FA を使用して開発者アカウントを保護する&lt;/a&gt;方法について詳しく説明します。&lt;/p&gt;
&lt;p&gt; The post &lt;a href=&quot;https://github.blog/changelog/2024-11-21-enhanced-2fa-management-for-orgs-and-enterprises-public-preview&quot;&gt;組織および企業向けの 2FA 管理の強化 [パブリック プレビュー]&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">81361</post-id></item><item><title>セキュリティの概要に関するアクセシビリティの向上</title><link>https://github.blog/changelog/2024-11-20-accessibility-improvements-for-security-overview</link><dc:creator>Allison</dc:creator><pubDate>Wed, 20 Nov 2024 16:53:50 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-11-20-accessibility-improvements-for-security-overview</guid><description>&lt;p&gt;Accessibility improvements for security overview&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-11-20-accessibility-improvements-for-security-overview&quot;&gt;Accessibility improvements for security overview&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;セキュリティ概要データのビジュアルに対する新しいアクセシビリティの強化により、誰もがコード セキュリティの洞察を操作して理解することがより簡単かつ包括的になりました。 &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img decoding=&quot;async&quot; width=&quot;700&quot; alt=&quot;アクセシビリティが強化された、セキュリティ概要ダッシュボード上の未解決のアラートを重大度別に示すグラフ&quot; src=&quot;https://github.com/user-attachments/assets/e7cf685f-d46e-4c2d-99ce-5c3d35b47fb6&quot; /&gt;
&lt;/p&gt;
&lt;h3 id=&quot;whats-new&quot;&gt;新着情報？&lt;a href=&quot;#whats-new&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What&amp;#8217;s new?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;視覚的なアクセシビリティの向上:&lt;/strong&gt;色のコントラストが強化され、視覚障害を持つユーザーのサポートが向上し、データの視覚的な解釈が容易になります。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;キーボード ナビゲーションの強化:&lt;/strong&gt;はっきりと見えるフォーカス インジケーターを含む、キーボードのみの完全なナビゲーションにより、マウスを使わずにスムーズな操作が可能になります。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支援技術のサポート:&lt;/strong&gt;スクリーン リーダーとの互換性が向上し、ナビゲーションとコンテンツの理解が向上しました。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらのアップデートは現在 GitHub Enterprise Cloud で一般提供されており、GitHub Enterprise Server 3.16 に含まれる予定です。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/accessibility&quot;&gt;GitHub コミュニティ&lt;/a&gt;のディスカッションに参加し、&lt;a href=&quot;https://accessibility.github.com/&quot;&gt;アクセシビリティに対する GitHub の取り組み&lt;/a&gt;について詳しく読んでください。&lt;/p&gt;
&lt;p&gt;この記事は、&lt;a href=&quot;https://github.blog/changelog/2024-11-20-accessibility-improvements-for-security-overview&quot;&gt;セキュリティの概要に関するアクセシビリティの改善が&lt;/a&gt;最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">81238</post-id></item><item><title>dependabot が .NET SDK のバージョン更新を実行できるようになりました</title><link>https://github.blog/changelog/2024-11-19-dependabot-can-now-perform-version-updates-for-the-net-sdk</link><dc:creator>Allison</dc:creator><pubDate>Tue, 19 Nov 2024 19:11:18 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-11-19-dependabot-can-now-perform-version-updates-for-the-net-sdk</guid><description>&lt;p&gt;Dependabot can now perform version updates for the .NET SDK&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-11-19-dependabot-can-now-perform-version-updates-for-the-net-sdk&quot;&gt;Dependabot can now perform version updates for the .NET SDK&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;dependabot は、リポジトリ内の&lt;code&gt;global.json&lt;/code&gt;ファイルを更新することで、.NET SDK の最新バージョンを常に最新の状態に保つことができるようになりました。 &lt;code&gt;dotnet-sdk&lt;/code&gt;エントリを&lt;code&gt;dependabot.yml&lt;/code&gt;ファイルに追加することで、.NET SDK の更新を有効にできます。現時点では、Dependabot は .NET SDK のセキュリティ アラートを作成しませんが、定期的なバージョン更新を実行することで、常に最新の .NET SDK を使用できるようになります。&lt;/p&gt;
&lt;p&gt; dependabot の構成の詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/ecosystems-supported-by-dependabot/supported-ecosystems-and-repositories&quot;&gt;ドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-11-19-dependabot-can-now-perform-version-updates-for-the-net-sdk&quot;&gt;「Dependabot が .NET SDK のバージョン更新を実行できるようになりました」という&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">81230</post-id></item><item><title>スキルセットを使用して Copilot Extensions をより迅速に構築する</title><link>https://github.blog/changelog/2024-11-19-build-copilot-extensions-faster-with-skillsets</link><dc:creator>Allison</dc:creator><pubDate>Tue, 19 Nov 2024 17:12:40 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-11-19-build-copilot-extensions-faster-with-skillsets</guid><description>&lt;p&gt;Build Copilot Extensions faster with skillsets&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-11-19-build-copilot-extensions-faster-with-skillsets&quot;&gt;Build Copilot Extensions faster with skillsets&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/4aa8d9f4-3ac2-4bd5-8b2f-554482200164&quot; alt=&quot;スキルセットのヘッダー画像&quot; /&gt;&lt;/p&gt;
&lt;p&gt;本日は、既存のエージェント アプローチと並行して GitHub アプリベースの Copilot Extensions を構築するための新しい軽量な方法であるスキルセットを紹介します。エージェントはユーザー インタラクションを完全に制御できますが、スキルセットを使用すると、シンプルな API エンドポイントを定義することで外部ツールやサービスを Copilot Chat に簡単に統合できます。AI の専門知識は必要ありません。&lt;/p&gt;
&lt;h3 id=&quot;whats-new-%e2%9c%a8&quot;&gt;新着情報&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/2728.png&quot; alt=&quot;✨&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;a href=&quot;#whats-new-%e2%9c%a8&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What&amp;#8217;s new &amp;#x2728;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;すべての AI インタラクションと応答のフォーマットを Copilot に処理させます&lt;/li&gt;
&lt;li&gt;Copilot が呼び出すことができるスキル エンドポイントを最大 5 つ定義します&lt;/li&gt;
&lt;li&gt;シンプルなJSONスキーマ構成&lt;/li&gt;
&lt;li&gt;最小限のコードで迅速なセットアップ&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;benefits-for-builders-%e2%9a%a1%ef%b8%8f&quot;&gt;建設業者にとってのメリット&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/26a1.png&quot; alt=&quot;⚡&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;a href=&quot;#benefits-for-builders-%e2%9a%a1%ef%b8%8f&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Benefits for builders &amp;#x26a1;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;開発の迅速化: AI インタラクションではなく、コア機能に集中します。&lt;/li&gt;
&lt;li&gt;シンプルな実装: LLM ロジックを管理せずに、API エンドポイントを定義するだけです&lt;/li&gt;
&lt;li&gt;最小限のセットアップ: 複雑なサーバー インフラストラクチャは必要なく、オプションで既存の API を使用できます。&lt;/li&gt;
&lt;li&gt;一貫したエクスペリエンス: Copilot は自然なチャット インタラクションを自動的に維持します。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;choosing-your-integration-path-%f0%9f%9b%a0&quot;&gt;統合パスの選択&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/1f6e0.png&quot; alt=&quot;🛠&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;a href=&quot;#choosing-your-integration-path-%f0%9f%9b%a0&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Choosing your integration path &amp;#x1f6e0;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;スキルセット: データの取得や基本的なアクションなどの簡単な統合に最適です。 API エンドポイントを提供すると、Copilot がプロンプトの作成や応答の生成などのワークロードを処理します。&lt;/li&gt;
&lt;li&gt;エージェント: カスタム ロジック、柔軟なプロンプト作成、または特定の LLM モデルを必要とする複雑なワークフローに最適です。インタラクション全体をコントロールするのはあなたです。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;how-it-works-%f0%9f%8f%97%ef%b8%8f&quot;&gt;仕組み&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/1f3d7.png&quot; alt=&quot;🏗&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;a href=&quot;#how-it-works-%f0%9f%8f%97%ef%b8%8f&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How it works &amp;#x1f3d7;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;エンド ユーザーは、他の Copilot 拡張機能と同様に、スキルセット ベースの拡張機能を操作します。 @ に続いて拡張機能名を入力し、自然言語で質問するだけです。舞台裏で副操縦士はこう言っています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;クエリを分析してどのスキルを呼び出すかを決定します&lt;/li&gt;
&lt;li&gt;JSON スキーマに基づいて API リクエストを構造化します&lt;/li&gt;
&lt;li&gt;エンドポイントを呼び出してデータを取得します&lt;/li&gt;
&lt;li&gt;チャットでの応答をフォーマットして生成します&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;architecture&quot;&gt;建築&lt;a href=&quot;#architecture&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Architecture&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img data-recalc-dims=&quot;1&quot; decoding=&quot;async&quot; class=&quot;aligncenter size-large wp-image-81227 width-fit&quot; src=&quot;https://github.blog/wp-content/uploads/2024/11/387423978-d18e615e-bec8-496b-a6c0-089a21276d8d.png?w=946&amp;#038;resize=946%2C1024&quot; alt=&quot;アーキテクチャ図&quot; width=&quot;946&quot; height=&quot;1024&quot; srcset=&quot;https://github.blog/wp-content/uploads/2024/11/387423978-d18e615e-bec8-496b-a6c0-089a21276d8d.png?w=2955 2955w, https://github.blog/wp-content/uploads/2024/11/387423978-d18e615e-bec8-496b-a6c0-089a21276d8d.png?w=277 277w, https://github.blog/wp-content/uploads/2024/11/387423978-d18e615e-bec8-496b-a6c0-089a21276d8d.png?w=768 768w, https://github.blog/wp-content/uploads/2024/11/387423978-d18e615e-bec8-496b-a6c0-089a21276d8d.png?w=946 946w, https://github.blog/wp-content/uploads/2024/11/387423978-d18e615e-bec8-496b-a6c0-089a21276d8d.png?w=1418 1418w, https://github.blog/wp-content/uploads/2024/11/387423978-d18e615e-bec8-496b-a6c0-089a21276d8d.png?w=1891 1891w, https://github.blog/wp-content/uploads/2024/11/387423978-d18e615e-bec8-496b-a6c0-089a21276d8d.png?w=2000 2000w&quot; sizes=&quot;(max-width: 946px) 100vw, 946px&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;requirements-for-extension-builders&quot;&gt;拡張機能ビルダーの要件&lt;a href=&quot;#requirements-for-extension-builders&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Requirements for extension builders&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt; GitHub コパイロットへのアクセス&lt;/li&gt;
&lt;li&gt;組織構築の場合: 無料、チーム、またはサポートされている Enterprise Cloud 組織タイプ&lt;/li&gt;
&lt;li&gt;スキルセットは、GitHub アプリとして構築された拡張機能にのみ適用され、VS Code チャット参加者には適用されません。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;getting-started-%f0%9f%9a%80&quot;&gt;はじめる&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/1f680.png&quot; alt=&quot;🚀&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;a href=&quot;#getting-started-%f0%9f%9a%80&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Getting started &amp;#x1f680;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最初のスキルセットを構築する方法については、 &lt;a href=&quot;https://docs.github.com/en/copilot/building-copilot-extensions/building-a-copilot-skillset-for-your-copilot-extension/about-copilot-skillsets&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;p&gt;すでにエージェントとして Copilot Extension を構築していますか?既存のエージェント拡張機能はスキルセットに変換できますが、1 つの拡張機能をスキルセットとエージェントの両方にすることはできません。&lt;/p&gt;
&lt;p&gt;皆様のご意見をお聞かせください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高レベルの質問については、 &lt;a href=&quot;https://github.com/orgs/community/discussions/145052&quot;&gt;GitHub コミュニティ ディスカッション&lt;/a&gt;に参加してください&lt;/li&gt;
&lt;li&gt;Github (またはサードパーティのパブリッシャーやクライアント チーム) への詳細なフィードバック、機能リクエスト、バグ レポートについては、&lt;a href=&quot;https://github.com/copilot-extensions/user-feedback&quot;&gt;拡張性フィードバック リポジトリ&lt;/a&gt;で問題を開いてください。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この記事は、 &lt;a href=&quot;https://github.blog/changelog/2024-11-19-build-copilot-extensions-faster-with-skillsets&quot;&gt;スキルセットを使用してコパイロット拡張機能を迅速に構築するのに&lt;/a&gt;最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">81224</post-id></item><item><title>永続的なコミット署名検証がパブリック プレビュー中</title><link>https://github.blog/changelog/2024-11-13-persistent-commit-signature-verification-now-in-public-preview</link><dc:creator>Allison</dc:creator><pubDate>Wed, 13 Nov 2024 13:08:32 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-11-13-persistent-commit-signature-verification-now-in-public-preview</guid><description>&lt;p&gt;Persistent commit signature verification now in public preview&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-11-13-persistent-commit-signature-verification-now-in-public-preview&quot;&gt;Persistent commit signature verification now in public preview&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;リポジトリのコミット履歴のセキュリティと信頼性を高めるために設計された強力な新機能である永続的なコミット署名検証を導入できることを嬉しく思います。&lt;/p&gt;
&lt;p&gt;本日より、GitHub は最初にプッシュされるときにコミット署名を検証し、コミットの署名が検証されると、 &lt;a href=&quot;https://docs.github.com/en/repositories/viewing-activity-and-data-for-your-repository/understanding-connections-between-repositories&quot;&gt;リポジトリのネットワーク&lt;/a&gt;内で検証されたままになります。これにより、組織は、すべての署名の有効性を常に再確認することなく、安全かつ正確な貢献記録を維持できるようになります。これらの永続的な検証は GitHub で直接表示でき、&lt;strong&gt;検証済み&lt;/strong&gt;バッジにカーソルを合わせると、元の検証のタイムスタンプが表示されます。&lt;/p&gt;
&lt;h2 id=&quot;efficient-secure-and-transparent-verification&quot;&gt;効率的、安全、透明性のある検証&lt;a href=&quot;#efficient-secure-and-transparent-verification&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Efficient, Secure, and Transparent Verification&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以前は、コミット署名はオンデマンドで検証されていましたが、そのプロセスはパフォーマンスが悪く、サービスの停止やキーのローテーションなどのさまざまな理由により、以前に検証された署名が「未検証」になるリスクがありました。&lt;/p&gt;
&lt;p&gt;永続的なコミット署名検証は、コミット時に署名を検証し、検証の詳細を永続的に保存することで、これらの問題を解決します。また、git コミットは不変であり、キーのローテーションをネイティブにサポートしていないため、これによりコミット履歴に一貫性がもたらされます。&lt;/p&gt;
&lt;p&gt;コミット署名の管理は難しい場合がありますが、永続的な記録により、署名キーがローテーション、取り消され、または投稿者が組織を離れた場合でも、検証されたコミットは長期間にわたって検証されたままになります。&lt;/p&gt;
&lt;h3 id=&quot;how-to-tell-if-the-verification-has-a-persistent-record&quot;&gt;検証に永続的な記録があるかどうかを確認するにはどうすればよいですか? &lt;a href=&quot;#how-to-tell-if-the-verification-has-a-persistent-record&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How to tell if the verification has a persistent record?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; GitHub へのプッシュ時にコミットの署名が検証されると、検証レコードがコミットと一緒に保存されます。このレコードは不変であり、検証されたステータスが永続的に維持されることが保証されます。&lt;/p&gt;
&lt;p&gt;検証タイムスタンプは、GitHub の&lt;strong&gt;検証済み&lt;/strong&gt;バッジの上にマウスを移動するか、 &lt;code&gt;verified_at&lt;/code&gt;フィールドが追加された&lt;a href=&quot;https://docs.github.com/en/rest/commits/commits&quot;&gt;GitHub REST API&lt;/a&gt;経由で表示できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification&quot;&gt;コミット署名の検証の詳細については、GitHub をご覧ください&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;designed-for-real-world-key-rotation-and-contributor-management&quot;&gt;現実世界のキーローテーションと貢献者管理向けに設計&lt;a href=&quot;#designed-for-real-world-key-rotation-and-contributor-management&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Designed for Real-World Key Rotation and Contributor Management&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; S/MIME を使用する&lt;a href=&quot;https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key&quot;&gt;GPG&lt;/a&gt; 、 &lt;a href=&quot;https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key#telling-git-about-your-ssh-key&quot;&gt;SSH&lt;/a&gt; 、または&lt;a href=&quot;https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key#telling-git-about-your-x509-key-1&quot;&gt;X.509 キーの&lt;/a&gt;いずれであっても、署名検証を管理する組織にとって、永続的なコミット署名検証は、全体的な署名の整合性を確保するための堅牢な方法を提供します。これで、検証済みステータスを持つコミットは、署名キーがローテーションまたは削除された場合でも、そのステータスを保持できるようになります。&lt;/p&gt;
&lt;p&gt;永続的なコミット署名の検証は、新しいコミットにのみ適用されます。この更新前にプッシュされたコミットの場合、次回の検証時に永続レコードが作成されます。これは、検証済みバッジが表示されている GitHub 上の署名付きコミットを表示するとき、または&lt;a href=&quot;https://docs.github.com/en/rest/commits/commits&quot;&gt;REST API 経由で&lt;/a&gt;署名付きコミットを取得するときに発生します。これにより、リポジトリの安全性が確保されると同時に、検証の実践を柔軟に管理できるようになります。&lt;/p&gt;
&lt;p&gt;このアプローチは、GitHub 内のリポジトリの整合性とコントリビューションの信頼性を強化することを目的とした将来の改善の基礎を築きます。&lt;/p&gt;
&lt;h3 id=&quot;key-management-caveat-revocation-and-expiration&quot;&gt;キー管理に関する警告: 失効と有効期限&lt;a href=&quot;#key-management-caveat-revocation-and-expiration&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Key Management Caveat: Revocation and Expiration&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;永続的なコミット署名検証により、検証されたコミットのステータスが無期限に保持されます。これにより、コミット時の署名の状態が記録されることに注意することが重要です。署名キーが後で取り消されたり、期限切れになったり、その他の方法で変更された場合、GitHub は以前に署名されたコミットを再検証したり、検証ステータスを遡って変更したりすることはありません。&lt;/p&gt;
&lt;p&gt; S/MIME キーを使用している組織の場合、これにより小さな変更が導入されます。取り消された S/MIME キーは、&lt;em&gt;新しいコミット&lt;/em&gt;や既存の永続レコードのないコミットを検証しません。 git コミットは不変であるため、永続的なコミット署名検証は、元の検証ステータスを変更せずに維持することでこの概念と一致します。組織は、特にキーのローテーションや取り消しが頻繁に行われる場合には、セキュリティ ポリシーに合わせてキーの状態を直接管理する必要がある場合があります。&lt;/p&gt;
&lt;p&gt;このアプローチにより、コミットが検証されると、その時点の記録に基づいて信頼された状態が維持され、コミット履歴に一貫性と長期的な信頼性がもたらされます。&lt;/p&gt;
&lt;h2 id=&quot;moving-towards-a-future-with-secure-and-authentic-contributions&quot;&gt;安全で本物の貢献で未来に向けて&lt;a href=&quot;#moving-towards-a-future-with-secure-and-authentic-contributions&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Moving Towards a Future with Secure and Authentic Contributions&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;今回のリリースでは、脆弱性や一時的ではないコミット検証という重要な問題に取り組んでいます。チームは、過去の作業の検証済みステータスが失われることを心配することなく、署名キー ポリシーを実装できるようになりました。&lt;/p&gt;
&lt;p&gt;コミット検証の強化を継続していくため、さらなる更新にご期待ください。フィードバックや提案がある場合は、 &lt;a href=&quot;https://github.com/orgs/community/discussions/144702&quot;&gt;GitHub ディスカッション&lt;/a&gt;フォーラムを通じてお知らせください。&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-11-13-persistent-commit-signature-verification-now-in-public-preview&quot;&gt;永続的なコミット署名検証がパブリック プレビュー中&lt;/a&gt;最初に登場したのは&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;です。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">81096</post-id></item><item><title>GitHub Enterprise Server 3.15 リリース候補が利用可能になりました</title><link>https://github.blog/changelog/2024-11-12-the-github-enterprise-server-3-15-release-candidate-is-available</link><dc:creator>Allison</dc:creator><pubDate>Tue, 12 Nov 2024 19:14:43 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-11-12-the-github-enterprise-server-3-15-release-candidate-is-available</guid><description>&lt;p&gt;The GitHub Enterprise Server 3.15 Release Candidate is available&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-11-12-the-github-enterprise-server-3-15-release-candidate-is-available&quot;&gt;The GitHub Enterprise Server 3.15 Release Candidate is available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;h2 id=&quot;the-github-enterprise-server-3-15-release-candidate-is-here&quot;&gt;GitHub Enterprise Server 3.15 リリース候補はこちらです&lt;a href=&quot;#the-github-enterprise-server-3-15-release-candidate-is-here&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;The GitHub Enterprise Server 3.15 release candidate is here&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; GitHub Enterprise Server 3.15 リリース候補をダウンロードして、この最新バージョンの新機能を試すことができるようになりました。バージョン 3.15 では、導入要件とセキュリティ管理が強化されています。 3.15 リリースのその他のハイライトは次のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ルートディスクのサイズ要件を更新しました。 GitHub Enterprise Server バージョン 3.15 の新規インストールおよび 3.15 へのアップグレードには、少なくとも 400 GB のルート ディスク サイズが必要です。そうしないとシステムが起動しません。アプライアンスのルート ディスク サイズを増やす方法の詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.15/admin/monitoring-and-managing-your-instance/updating-the-virtual-machine-and-physical-resources/increasing-storage-capacity&quot;&gt;「ストレージ容量の増加」を&lt;/a&gt;参照してください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; GHES を実行するために推奨される&lt;strong&gt;最小サーバー仕様&lt;/strong&gt;も更新されました。詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.15/admin/installing-your-enterprise-server/setting-up-a-github-enterprise-server-instance/installing-github-enterprise-server-on-vmware#minimum-recommended-requirements&quot;&gt;「推奨される最小要件」&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; GraphQL と Webhook を使用して&lt;strong&gt;プロジェクトのステータス更新&lt;/strong&gt;を操作できるようになりました。これにより、プロジェクト ステータスの更新情報を提供および収集する方法を自動化する新しい方法が可能になります。詳細については、 &lt;a href=&quot;https://github.blog/changelog/2024-06-27-github-issues-projects-graphql-and-webhook-support-for-project-status-updates-and-more/&quot;&gt;「GitHub プロジェクト」&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;カスタム プロパティは、&lt;strong&gt;新しいプロパティ タイプ&lt;/strong&gt;(複数選択と true/false) をサポートするようになりました。組織リポジトリは、プロパティを介してクエリおよびフィルタリングできるようになりました。 UI と API の両方がサポートされています。 &lt;a href=&quot;https://github.blog/changelog/2024-07-31-repository-updates-july-31st-2024/#finding-repositories-in-your-organization-is-now-easier&quot;&gt;リポジトリのフィルタリング&lt;/a&gt;についてお読みください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;コードセキュリティ構成が&lt;/strong&gt;GHES で利用できるようになりました。これらの構成により、GitHub セキュリティ製品の大規模な展開が簡素化されます。これらは、セキュリティ設定のコレクションを定義し、リポジトリのグループ全体に適用するのに役立ちます。古い組織レベルのコード セキュリティ設定 UI エクスペリエンスと、それを補完する API パラメーターは廃止されました。詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.15/code-security/securing-your-organization/introduction-to-securing-your-organization-at-scale/about-enabling-security-features-at-scale&quot;&gt;「コード セキュリティ構成」&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;シークレット スキャン プッシュ保護&lt;/strong&gt;がコンテンツ アップロード REST API エンドポイントでサポートされるようになりました。BLOB&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.15/rest/git/blobs?apiVersion=2022-11-28&quot;&gt;の作成&lt;/a&gt;と&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.15/rest/repos/contents?apiVersion=2022-11-28#create-or-update-file-contents&quot;&gt;ファイル コンテンツの作成または更新です&lt;/a&gt;。プッシュ保護は、シークレットをリポジトリにプッシュすることをブロックし、ブロックをバイパスするたびにシークレット スキャン アラートを生成します。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; &lt;strong&gt;CodeQL&lt;/strong&gt;の Swift と Kotlin のサポートが一般提供になりました。 CodeQL は、GitHub コード スキャンを強化する静的分析エンジンです。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;組織の所有者は、ワンクリックで組織内のすべてのリポジトリへのアクセスをユーザーまたはチームに許可できるようになりました。新しい&lt;strong&gt;事前定義ロールが&lt;/strong&gt;組織設定の [組織ロール] &gt; [ロール管理] に追加され、すべての組織所有者がそれらを表示して割り当てることができます。これらをさらにカスタマイズして、組織全体に特定のリポジトリ権限を付与することもできます。詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.15/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles&quot;&gt;「組織の役割」&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;リリース候補は、最新の機能を早期に試すための方法であり、リリースがお客様の環境で動作することを確認するためのフィードバックを収集するのに役立ちます。これらは非実稼働環境でテストする必要があります。 &lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.15/admin/overview/about-upgrades-to-new-releases&quot;&gt;リリース候補プロセス&lt;/a&gt;の詳細を参照してください。&lt;/p&gt;
&lt;p&gt; GHES 3.15 の詳細については、&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.15/admin/release-notes&quot;&gt;リリース ノート&lt;/a&gt;を確認するか、3.15 リリース候補を今すぐ&lt;a href=&quot;https://enterprise.github.com/releases/3.15.0/download&quot;&gt;ダウンロードしてください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;リリース候補に関するフィードバックや質問がある場合は、&lt;a href=&quot;https://support.github.com/features/enterprise-administrators-server&quot;&gt;サポート チームまでご連絡&lt;/a&gt;ください。&lt;/p&gt;
&lt;p&gt; The post &lt;a href=&quot;https://github.blog/changelog/2024-11-12-the-github-enterprise-server-3-15-release-candidate-is-available&quot;&gt;GitHub Enterprise Server 3.15 Release Candidate is available&lt;/a&gt; first appeared on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">81095</post-id></item><item><title>シークレット スキャン: アラートを再度開くときにオプションのコメントを追加する機能</title><link>https://github.blog/changelog/2024-11-12-secret-scanning-ability-to-add-an-optional-comment-when-reopening-alerts</link><dc:creator>Allison</dc:creator><pubDate>Tue, 12 Nov 2024 19:07:04 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-11-12-secret-scanning-ability-to-add-an-optional-comment-when-reopening-alerts</guid><description>&lt;p&gt;Secret scanning: ability to add an optional comment when reopening alerts&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-11-12-secret-scanning-ability-to-add-an-optional-comment-when-reopening-alerts&quot;&gt;Secret scanning: ability to add an optional comment when reopening alerts&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;アラートをより効果的に修復および優先順位付けするために、シークレット スキャン アラートを再度開くときにオプションのコメントを追加できるようになりました。コメントはアラートのタイムラインに表示されます。以前は、アラートを閉じるときにのみコメントを追加できました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンを使用してリポジトリを保護する方法&lt;/a&gt;について詳しくは、こちらをご覧ください。 &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;GitHub コミュニティのディスカッション&lt;/a&gt;に参加するか、 &lt;a href=&quot;https://github.com/orgs/community/discussions/141497#:~:text=60%20minute%20feedback%20session&quot;&gt;60 分間のフィードバック セッション&lt;/a&gt;にサインアップして、ご意見をお聞かせください。&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-11-12-secret-scanning-ability-to-add-an-optional-comment-when-reopening-alerts&quot;&gt;「シークレット スキャン: アラートを再度開くときにオプションのコメントを追加する機能」&lt;/a&gt;は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">81092</post-id></item></channel></rss>