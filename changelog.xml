<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Wed, 26 Oct 2022 23:46:49 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.0.3</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>Codespaces カスタマイズ可能な初期エクスペリエンス</title><link>https://github.blog/changelog/2022-10-26-codespaces-customizable-initial-experience</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 26 Oct 2022 23:46:49 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-10-26-codespaces-customizable-initial-experience</guid><description>Codespaces Customizable Initial Experience</description><content:encoded>&lt;p&gt;&lt;img alt=&quot;openFiles、postAttachCommand、および onAutoForward が定義された devcontainer.json の写真&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/55998770/198056008-95229431-8683-47b9-8e71-8e0f7d3a080d.png?w=501&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;開発コンテナーを使用すると、コードスペースで使用するフル機能の開発環境を作成できます。コードスペースは&lt;code&gt;devcontainer.json&lt;/code&gt;ファイルを使用して、コードスペース内で作業する環境を定義します。 &lt;code&gt;devcontainers.json&lt;/code&gt;に新しい機能を追加して、codespace を開いたときの初期エクスペリエンスをカスタマイズできるようにしました。 &lt;/p&gt;
&lt;h2 id=&quot;define-the-initial-layout-of-your-codespace-with-openfiles&quot; id=&quot;define-the-initial-layout-of-your-codespace-with-openfiles&quot; &gt; &lt;code&gt;openFiles&lt;/code&gt;を使用してコードスペースの初期レイアウトを定義する&lt;a href=&quot;#define-the-initial-layout-of-your-codespace-with-openfiles&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Define the initial layout of your codespace with &lt;code&gt;openFiles&lt;/code&gt;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; &lt;code&gt;openFiles&lt;/code&gt;を使用して、デフォルトで開くファイルを定義できます。複数のファイルを指定した場合は、左から順にファイルが開きます。最初に定義されたファイルがフォーカスされたファイルになります。 &lt;code&gt;openFiles&lt;/code&gt;は Codespaces のカスタマイズに固有のもので、現時点では Codespaces Web エディターでのみ有効になっています。 &lt;code&gt;openFiles&lt;/code&gt;を使用してデフォルトの開発環境を改善し、コントリビューターを成功に導くようにしてください! &lt;/p&gt;
&lt;h2 id=&quot;run-scripts-after-your-client-connects-to-your-codespace-with-postattachcommand&quot; id=&quot;run-scripts-after-your-client-connects-to-your-codespace-with-postattachcommand&quot; &gt;クライアントが postAttachCommand を使用して&lt;code&gt;postAttachCommand&lt;/code&gt;に接続した後にスクリプトを実行する&lt;a href=&quot;#run-scripts-after-your-client-connects-to-your-codespace-with-postattachcommand&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Run scripts after your client connects to your codespace with &lt;code&gt;postAttachCommand&lt;/code&gt;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; &lt;code&gt;postAttachCommand&lt;/code&gt;を使用すると、クライアントが codespace に接続した後にターミナルでスクリプトを実行できます。この変更により、複数の&lt;code&gt;postAttachCommand&lt;/code&gt;定義を定義できるようになり、それらは別々の端末で実行されます。これにより、サーバーを起動し、起動後に&lt;code&gt;devcontainer.json&lt;/code&gt;から変更されたファイルを監視できます。 &lt;/p&gt;
&lt;h2 id=&quot;combine-these-features-into-a-full-initial-codespace-experience&quot; id=&quot;combine-these-features-into-a-full-initial-codespace-experience&quot; &gt;これらの機能を組み合わせて、完全な初期コードスペース エクスペリエンスを実現します&lt;a href=&quot;#combine-these-features-into-a-full-initial-codespace-experience&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Combine these features into a full initial codespace experience&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; &lt;code&gt;postAttachCommand&lt;/code&gt;これらの変更を、 &lt;code&gt;onAutoForward&lt;/code&gt;プロパティの既存の&lt;code&gt;openPreview&lt;/code&gt;オプションと組み合わせることで、デフォルト レイアウトで codespace を作成できるようになり、リポジトリのユーザーにとって優れた Codespaces 起動エクスペリエンスが保証されます。&lt;/p&gt;
&lt;p&gt;ドキュメント ページで、 &lt;a href=&quot;https://containers.dev/implementors/json_reference/#lifecycle-scripts&quot;&gt;&lt;code&gt;postAttachCommand&lt;/code&gt;&lt;/a&gt; 、 &lt;a href=&quot;https://containers.dev/implementors/json_reference/#port-attributes&quot;&gt;&lt;code&gt;onAutoForward&lt;/code&gt;&lt;/a&gt; 、 &lt;a href=&quot;https://docs.github.com/codespaces/setting-up-your-project-for-codespaces/automatically-opening-files-in-the-codespaces-for-a-repository&quot;&gt;&lt;code&gt;openFiles&lt;/code&gt;&lt;/a&gt; 、および&lt;a href=&quot;https://containers.dev/implementors/json_reference/#port-attributes&quot;&gt;&lt;code&gt;openPreview&lt;/code&gt;&lt;/a&gt;の詳細をお読みください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">68217</post-id></item><item><title>Chief Tools が GitHub シークレット スキャン パートナーになりました</title><link>https://github.blog/changelog/2022-10-26-chief-tools-is-now-a-github-secret-scanning-partner</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 26 Oct 2022 21:20:37 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-10-26-chief-tools-is-now-a-github-secret-scanning-partner</guid><description>Chief Tools is now a GitHub secret scanning partner</description><content:encoded>&lt;p&gt;GitHub シークレット スキャンは、リポジトリで既知のタイプのシークレットを検索することにより、ユーザーを保護します。これらの秘密を特定してフラグを立てることにより、当社のスキャンはデータの漏洩や詐欺を防ぐのに役立ちます。&lt;/p&gt;
&lt;p&gt;私たちは&lt;a href=&quot;https://chief.app/&quot;&gt;Chief Tools&lt;/a&gt;と提携してトークンをスキャンし、パブリック リポジトリで相互ユーザーを保護しています。 Chief Tools トークンを使用すると、ユーザーは Chief Tools API にアクセスし、トークンを作成したユーザーに代わって自動化されたアクションを実行できます。 GitHub は、パブリック リポジトリで見つかったアクセス トークンをチーフ ツールに転送します。チーフ ツールはすぐにトークンを取り消し、リークされたトークンの所有者に、次に何をすべきかについての指示を電子メールで送信します。 Chief Tools トークンの詳細については、&lt;a href=&quot;https://aka.chief.app/gh-secret-scanning&quot;&gt;こちら&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;p&gt; GitHub Advanced Security のお客様は、Chief Tools トークンをスキャンして、 &lt;a href=&quot;https://github.blog/changelog/2022-04-04-secret-scanning-prevents-secret-leaks-with-protection-on-push/&quot;&gt;プッシュ保護&lt;/a&gt;を使用してプライベートおよびパブリック リポジトリへのアクセスをブロックすることもできます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/github/administering-a-repository/about-secret-scanning&quot;&gt;シークレット スキャンの詳細&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/protecting-pushes-with-secret-scanning&quot;&gt;プッシュの保護の詳細&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/developers/overview/secret-scanning/&quot;&gt;シークレット スキャンで GitHub と提携する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">68208</post-id></item><item><title>過去のスポンサーシップと 1 回限りのスポンサーシップを表示する</title><link>https://github.blog/changelog/2022-10-26-displaying-past-and-one-time-sponsorships</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 26 Oct 2022 14:34:54 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-10-26-displaying-past-and-one-time-sponsorships</guid><description>Displaying Past and One-time Sponsorships</description><content:encoded>&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/user-images.githubusercontent.com/1305617/197990455-d401147a-378c-44e2-bc00-b6a94a006fbd.png?ssl=1&quot; alt=&quot;Homebrew プロジェクトの現在お​​よび過去のスポンサーシップのスクリーンショット&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;今日から、常に表示されている現在のスポンサーシップに加えて、プロジェクトまたはユーザーの過去のスポンサーシップ (1 回限りまたは定期的) がスポンサー プロファイルに表示されます。これにより、これまでのスポンサーシップ活動をよりよく把握できます。&lt;a href=&quot;https://github.com/orgs/community/discussions/37234&quot;&gt;フィードバック ディスカッション&lt;/a&gt;でご意見をお聞かせください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">68182</post-id></item><item><title>2FA デバイスを紛失した場合のアカウント復旧フローの改善</title><link>https://github.blog/changelog/2022-10-25-improved-account-recovery-flow-in-case-of-a-lost-2fa-device</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 25 Oct 2022 18:39:40 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-10-25-improved-account-recovery-flow-in-case-of-a-lost-2fa-device</guid><description>Improved account recovery flow in case of a lost 2FA device</description><content:encoded>&lt;p&gt;2 要素認証 (2FA) デバイスへのアクセスを失い、npm アカウントからロックアウトされた場合に身元を確認できるように、アカウント復旧フローを合理化しました。&lt;/p&gt;
&lt;p&gt; 2FA デバイスとリカバリ コードにアクセスできなくなった場合、ユーザー名とパスワードを使用して npm アカウントにサインインし、アカウントのリカバリをリクエストできるようになりました。以下に示すように、フォームに入力するよう求められます。アカウントの復元をリクエストする際は、できるだけ多くの情報を提供することをお勧めします。 &lt;br /&gt;
&lt;img alt=&quot;回復_アカウント&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/23190045/197789149-7f5366e5-e31b-41d1-848a-9081b68b99ab.png?w=375&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt; 2FA 対応のアカウントを復元する方法については、&lt;a href=&quot;https://docs.npmjs.com/recovering-your-2fa-enabled-account&quot;&gt;こちら&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;p&gt; 2FA を使用するアカウントの場合、プロファイル設定で&lt;a href=&quot;https://docs.npmjs.com/managing-your-profile-settings#linking-your-npm-and-github-accounts&quot;&gt;GitHub アカウント&lt;/a&gt;と&lt;a href=&quot;https://docs.npmjs.com/managing-your-profile-settings#linking-your-npm-ad-twitter-accounts&quot;&gt;Twitter アカウント&lt;/a&gt;をリンクすると、身元をすばやく確認できます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;: 新しいアカウント復旧フローでは、サポート チームがお客様のリクエストに迅速に対応できるように、お客様の ID に関する情報を収集してマッピングしようとします。手作業によるレビューが実施されているため、この復旧プロセスが完了するまでに数日かかります。ユーザーは、 &lt;a href=&quot;https://docs.npmjs.com/recovering-your-2fa-enabled-account#viewing-and-regenerating-recovery-code&quot;&gt;回復コード&lt;/a&gt;のコピーを生成して保管し、主要な回復オプションとして使用することをお勧めします。これにより、アカウントが長期間ロックアウトされることを回避できます。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">68164</post-id></item><item><title>CodeQL コード スキャンで、Go 分析のビルド構成のカスタマイズがサポートされるようになりました</title><link>https://github.blog/changelog/2022-10-25-codeql-code-scanning-now-supports-customizing-build-configurations-for-go-analysis</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 25 Oct 2022 18:00:47 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-10-25-codeql-code-scanning-now-supports-customizing-build-configurations-for-go-analysis</guid><description>CodeQL code scanning now supports customizing build configurations for Go analysis</description><content:encoded>&lt;p&gt;CodeQL は、Actions ワークフロー ファイルでの Go 分析&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-the-codeql-workflow-for-compiled-languages#adding-build-steps-for-a-compiled-language&quot;&gt;のビルド構成のカスタマイズを&lt;/a&gt;正式にサポートするようになりました。これにより、Go 構成エクスペリエンスが C/C++、C#、および Java 分析と連携します。新しいカスタマイズ オプションにより、ビルドが失敗した場合や、別のソース ファイルで分析が必要な場合など、柔軟性が向上します。&lt;/p&gt;
&lt;p&gt; Go 分析用の既存の CodeQL ワークフローはすべて引き続き機能し、引き続きサポートされます。 Go 分析を実行し続けるために、何もする必要はありません。 &lt;/p&gt;
&lt;h3 id=&quot;example-actions-workflow-steps-using-go-build-customization&quot; id=&quot;example-actions-workflow-steps-using-go-build-customization&quot; &gt; Go ビルドのカスタマイズを使用した Actions ワークフロー ステップの例&lt;a href=&quot;#example-actions-workflow-steps-using-go-build-customization&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Example Actions workflow steps using Go build customization&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt; &lt;code class=&quot;language-yml&quot;&gt;steps:
 - name: Checkout repository
 uses: actions/checkout@v3

 - name: Initialize CodeQL
 uses: github/codeql-action/init@v2
 with:
 languages: go

 - name: Build code
 run:
 # You can modify these commands or add new commands to customize the build process
 make bootstrap
 make release

 - name: Perform CodeQL Analysis
 uses: github/codeql-action/analyze@v2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/about-codeql/&quot;&gt;CodeQL&lt;/a&gt;と&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning&quot;&gt;コード スキャン&lt;/a&gt;の詳細をご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">68151</post-id></item><item><title>GitHub Enterprise Server 3.7 Release Candidate が利用可能になりました</title><link>https://github.blog/changelog/2022-10-25-the-github-enterprise-server-3-7-release-candidate-is-available</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 25 Oct 2022 17:09:50 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-10-25-the-github-enterprise-server-3-7-release-candidate-is-available</guid><description>The GitHub Enterprise Server 3.7 Release Candidate is available</description><content:encoded>&lt;h2 id=&quot;the-github-enterprise-server-37-release-candidate-is-here&quot; id=&quot;the-github-enterprise-server-37-release-candidate-is-here&quot; &gt; GitHub Enterprise Server 3.7 リリース候補はこちら&lt;a href=&quot;#the-github-enterprise-server-37-release-candidate-is-here&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;The GitHub Enterprise Server 3.7 release candidate is here&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; GitHub Enterprise Server 3.7 は、企業が安全なソフトウェアをより迅速に構築および配信するのに役立つ新しい機能をもたらします。 70 を超える新機能の一部をご紹介します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;GitHub Actions を安全かつ大規模にデプロイする方が簡単です。&lt;/strong&gt;再利用可能なワークフローでワークフローを標準化しようとしているチームは、再利用可能なワークフローを相互にネストし、 &lt;a href=&quot;https://docs.github.com/en/enterprise-server/actions/using-jobs/using-a-matrix-for-your-jobs&quot;&gt;マトリックス&lt;/a&gt;化を再利用可能なワークフローに構築する機能から恩恵を受けます。さらに、Actions は Google Cloud Storage をサポートするようになりました。セキュリティ チームは、Actions が大規模なクラウド デプロイをサポートするための OIDC 接続パターンの拡張機能を気に入るはずです。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;セキュリティ チームは、コードのセキュリティ体制を 1 つのビューで確認できるようになりました。&lt;/strong&gt;コードのセキュリティ アラートとリスクが一目でわかる [セキュリティの概要] ページは、 &lt;a href=&quot;https://github.blog/2022-08-08-all-github-enterprise-users-now-have-access-to-the-security-overview/&quot;&gt;すべてのお客様が利用できるようになりまし&lt;/a&gt;た。また、すべてのリポジトリが会社のポリシーでカバーされるようにするために、管理者は新しいリポジトリを組織のみに制限できるようになりました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;フォーキングは、特にインナーソースを採用している企業にとって、より明確でシンプルです。&lt;/strong&gt;開発者は、組織内でフォークする機能や内部リポジトリをフォークする機能など、フォークでの作業を容易にする&lt;a href=&quot;https://github.blog/2022-10-20-unboxing-fork-improvements-and-unwrapping-fork-docs/&quot;&gt;多くの拡張機能&lt;/a&gt;から恩恵を受けるでしょう。&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;GitHub Advanced Security のお客様向けのコード スキャン アラートは、プル リクエストにアラートが表示されるようになり、より協調的で関連性が高くなり&lt;/strong&gt;ました。また、依存関係を API 経由で依存関係グラフに直接送信することで、Dependabot アラートを改善し、カバレッジを更新できるようになりました。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;リリース候補は、最新の機能をできるだけ早く試す方法であり、フィードバックを早期に収集して、リリースがお客様の環境で機能することを確認するのに役立ちます。非実稼働環境でテストする必要があります。このリリースのハイライトをいくつか紹介します。 &lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.7/admin/overview/about-upgrades-to-new-releases&quot;&gt;リリース候補プロセスの詳細をお読みください&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.7/admin/release-notes&quot;&gt;リリース ノートで GitHub Enterprise Server 3.7 の詳細を読む&lt;/a&gt;&lt;a href=&quot;https://enterprise.github.com/releases/3.7.0/download&quot;&gt;か、今すぐリリース候補をダウンロードして&lt;/a&gt;ください。ご意見やご質問がございましたら&lt;a href=&quot;https://support.github.com/features/enterprise-administrators-server&quot;&gt;、サポート チームまでお問い合わせ&lt;/a&gt;ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">68150</post-id></item><item><title>Dependabot が Python PEP 621 標準のサポートを更新</title><link>https://github.blog/changelog/2022-10-24-dependabot-updates-support-for-the-python-pep-621-standard</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 24 Oct 2022 20:38:39 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-10-24-dependabot-updates-support-for-the-python-pep-621-standard</guid><description>Dependabot updates support for the Python PEP 621 standard</description><content:encoded>&lt;p&gt;Dependabot は、サポートされ&lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/about-dependabot-version-updates#supported-repositories-and-ecosystems&quot;&gt;ている Python パッケージ マネージャー&lt;/a&gt;の&lt;a href=&quot;https://peps.python.org/pep-0621/&quot;&gt;PEP 621 標準&lt;/a&gt;に準拠する&lt;code&gt;pyproject.toml&lt;/code&gt;ファイルの Python 依存関係の更新をサポートするようになりました。&lt;/p&gt;
&lt;p&gt; Dependabot で&lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/about-dependabot-version-updates#supported-repositories-and-ecosystems&quot;&gt;サポートされているエコシステムとパッケージ マネージャー&lt;/a&gt;の詳細をご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">68145</post-id></item><item><title>必要に応じて増やす戦略を使用して、Python プロジェクトでの Dependabot のバージョン更新を減らします</title><link>https://github.blog/changelog/2022-10-24-reduce-dependabot-version-updates-in-your-python-projects-with-the-increase-if-necessary-strategy</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 24 Oct 2022 18:59:06 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-10-24-reduce-dependabot-version-updates-in-your-python-projects-with-the-increase-if-necessary-strategy</guid><description>Reduce Dependabot version updates in your Python projects with the increase-if-necessary strategy</description><content:encoded>&lt;p&gt;Dependabot は、Python エコシステム&lt;code&gt;increase-if-necessary&lt;/code&gt;バージョン管理戦略をサポートするようになりました。&lt;/p&gt;
&lt;p&gt;これにより、現在の依存関係の要件が新しいバージョンによって既に満たされている場合に、Dependabot のバージョンの更新を減らすことができます。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;dependabot.yml&lt;/code&gt;ファイルで&lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file#versioning-strategy&quot;&gt;バージョン管理戦略&lt;/a&gt;を構成する方法については、こちらをご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">68130</post-id></item><item><title>npm v9.0.0 リリース</title><link>https://github.blog/changelog/2022-10-24-npm-v9-0-0-released</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 24 Oct 2022 16:56:39 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-10-24-npm-v9-0-0-released</guid><description>npm v9.0.0 released</description><content:encoded>&lt;p&gt;&lt;code&gt;npm&lt;/code&gt; CLI チームは、過去数か月にわたって懸命に取り組んできました。本日、次のメジャー バージョン&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v9.0.0&quot;&gt;&lt;code&gt;v9.0.0&lt;/code&gt;&lt;/a&gt;のリリースを発表できることをうれしく思います。&lt;/p&gt;
&lt;h3 id=&quot;installation&quot; id=&quot;installation&quot; &gt;インストール&lt;a href=&quot;#installation&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Installation&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;次のコマンドを実行して、今日から&lt;code&gt;npm&lt;/code&gt; &lt;code&gt;v9.0.0&lt;/code&gt;を使い始めることができます。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;$ npm i -g npm@9&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;about-this-release&quot; id=&quot;about-this-release&quot; &gt;このリリースについて&lt;a href=&quot;#about-this-release&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;About this release&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;このメジャー リリースでの私たちの目標は、適切なデフォルトを標準化し、可能な場合は従来の構成をクリーンアップすることでした。加えられた変更は、デフォルトの&lt;code&gt;npm&lt;/code&gt;エクスペリエンスを長期的に改善するための土台を築くものであると考えています。特に、Docker ユーザーは、ファイルのアクセス許可を簡素化するため、このリリースが有益であることに気付くはずです (ref. &lt;a href=&quot;https://github.com/npm/cli/pull/5703&quot;&gt;#5703&lt;/a&gt; &amp; &lt;a href=&quot;https://github.com/npm/cli/pull/5704&quot;&gt;#5704&lt;/a&gt; )。&lt;/p&gt;
&lt;h3 id=&quot;timeline-to-ga&quot; id=&quot;timeline-to-ga&quot; &gt; GA までのタイムライン&lt;a href=&quot;#timeline-to-ga&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Timeline to GA&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本日&lt;code&gt;v9.0.0&lt;/code&gt;を公開しましたが、npm レジストリでこのリリースをすぐに&lt;code&gt;latest&lt;/code&gt;に設定したり、この「一般公開」を検討したりすることはありません。私たちのチームは&lt;a href=&quot;https://github.com/nodejs/Release/issues/778&quot;&gt;、Node.js リリース WG と協力して、&lt;/a&gt; &lt;code&gt;v9&lt;/code&gt;を CLI の次のメジャー バージョンとして最も幅広いユーザーが利用できるようにするための段階的なアプローチを進めてきました。これは、 &lt;code&gt;v9&lt;/code&gt;をできるだけ多くの Node.js LTS バージョンに安全にバックポートできることを意味します。それを念頭に置いて、以下に概説する段階的なロールアウト計画をまとめました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;10月19日（水&lt;/strong&gt;）（本日）
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;npm@9.0.0&lt;/code&gt;がリリースされ、 &lt;code&gt;next-9&lt;/code&gt; dist-tag に設定されます (以前はプレリリースに使用されていました)。&lt;/li&gt;
&lt;li&gt; CLI チームは、 &lt;code&gt;v9.x&lt;/code&gt;のマイナー バージョンとパッチ バージョンを引き続き削減し、重大な変更 (以下に概説) から生じるフィードバックや予期しない問題に対処します。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;11 月 9 日水曜日&lt;/strong&gt;(一般提供)
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;npm@9.x&lt;/code&gt;が Node.js LTS に対して「非破壊的」と見なされるようにするために、&lt;a href=&quot;https://github.com/nodejs/release&quot;&gt;リリース WG&lt;/a&gt;と協力して一連の終了基準を成文化します。&lt;/li&gt;
&lt;li&gt; &lt;code&gt;npm@9.x&lt;/code&gt;は&lt;code&gt;latest&lt;/code&gt; dist-tag に設定されます ( &lt;code&gt;npm&lt;/code&gt;の最新の保守バージョンになります)&lt;/li&gt;
&lt;li&gt; &lt;code&gt;npm@9.x&lt;/code&gt;を&lt;code&gt;nodejs/node&lt;/code&gt;の&lt;code&gt;main&lt;/code&gt;ブランチに配置するための PR が開かれます (実験的/夜間ユーザーにこの最新バージョンを公開します)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;12 月 7 日水曜日&lt;/strong&gt;(GA から 4 週間後)
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;node@19&lt;/code&gt;の&lt;code&gt;npm@9.x&lt;/code&gt;をバックポートするための PR が開かれます&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1 月 18 日水曜日&lt;/strong&gt;( &lt;code&gt;node@19&lt;/code&gt;バックポートから 6 週間後)
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;node@18&lt;/code&gt;の&lt;code&gt;npm@9.x&lt;/code&gt;をバックポートする PR が開かれます&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;&amp;#x26a0;-notable-breaking-changes&quot; id=&quot;&amp;#x26a0;-notable-breaking-changes&quot; &gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/26a0.png&quot; alt=&quot;⚠&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;重大な変更点&lt;a href=&quot;#&amp;#x26a0;-notable-breaking-changes&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x26a0; Notable Breaking Changes&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;node&lt;/code&gt;の互換性のある semver 範囲が次のように更新されました: &lt;code&gt;^14.17.0 || ^16.13.0 || &gt;=18.0.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;npm&lt;/code&gt;は、作成したファイルの所有権を変更しようとしなくなりました&lt;/li&gt;
&lt;li&gt;構成ファイルで見つかった特定のレジストリにスコープされていない認証関連の設定の存在はサポートされなくなり、エラーがスローされます&lt;/li&gt;
&lt;li&gt;&lt;code&gt;login&lt;/code&gt; 、 &lt;code&gt;adduser&lt;/code&gt; 、および&lt;code&gt;auth-type&lt;/code&gt;変更
&lt;ul&gt;
&lt;li&gt;従来の認証タイプ&lt;code&gt;sso&lt;/code&gt; 、 &lt;code&gt;saml&lt;/code&gt; 、および&lt;code&gt;legacy&lt;/code&gt;は&lt;code&gt;&quot;legacy&quot;&lt;/code&gt;に統合されました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;auth-type&lt;/code&gt;デフォルトは&lt;code&gt;&quot;web&quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;login&lt;/code&gt;と&lt;code&gt;adduser&lt;/code&gt;は、異なるデータを送信する別のコマンドになりました&lt;br /&gt;
レジストリ。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt; &lt;code&gt;npm pack&lt;/code&gt;は、無視ルールを適用する際に操作の厳密な順序に従うようになりました。 &lt;code&gt;files&lt;/code&gt;配列が&lt;code&gt;package.json&lt;/code&gt;に存在する場合、ルートからの&lt;code&gt;.gitignore&lt;/code&gt;および&lt;code&gt;.npmignore&lt;/code&gt;ファイルのルールは無視されます。&lt;/li&gt;
&lt;li&gt; git URL から生成されたリンクは、デフォルトの参照として&lt;code&gt;master&lt;/code&gt;の代わりに&lt;code&gt;HEAD&lt;/code&gt;を使用するようになりました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timing&lt;/code&gt;と&lt;code&gt;loglevel&lt;/code&gt;変更
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--loglevel&lt;/code&gt;の値としての&lt;code&gt;timing&lt;/code&gt;が削除されました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--timing&lt;/code&gt;はタイミング情報を表示します。&lt;br /&gt;
 &lt;code&gt;--loglevel&lt;/code&gt; 、 &lt;code&gt;--silent&lt;/code&gt;の場合を除く&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--timing&lt;/code&gt;ファイルの変更:
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;--timing&lt;/code&gt;フラグを指定して実行すると、 &lt;code&gt;npm&lt;/code&gt;はタイミング データを&lt;br /&gt;
&lt;code&gt;logs-dir&lt;/code&gt;オプションを考慮して、デバッグ ログ データと一緒にファイル&lt;br /&gt;
フォールバック&lt;CACHE&gt;&lt;code&gt;/_logs/&lt;/code&gt; dir、直接内部ではなく&lt;br /&gt;
キャッシュ ディレクトリ。&lt;/li&gt;
&lt;li&gt;タイミング ファイルのデータは、改行で区切られた JSON ではなくなり、代わりに&lt;br /&gt;
実行するたびに、一意の名前の&lt;ID&gt;&lt;code&gt;-timing.json&lt;/code&gt;ファイル。&lt;br /&gt;
&lt;ID&gt;部分はデバッグ ログと同じです。&lt;/li&gt;
&lt;li&gt;最後に、ファイル内のデータには 3 つの最上位キーがあります。&lt;br /&gt;
すべての代わりに、 &lt;code&gt;metadata&lt;/code&gt; 、 &lt;code&gt;timers&lt;/code&gt; 、および&lt;code&gt;unfinishedTimers&lt;/code&gt;&lt;br /&gt;
トップレベルのキー。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt; &lt;code&gt;npm&lt;/code&gt;は標準出力にいくつかの json エラーを出力するようになりました。以前は、 &lt;code&gt;npm&lt;/code&gt;はすべての json 形式のエラーを stderr に出力していました。通常、stderr ストリームには既にログが書き込まれているため、解析が困難でした。&lt;/li&gt;
&lt;li&gt; &lt;code&gt;--install-strategy&lt;/code&gt;を優先する非推奨のブール型インストール フラグ
&lt;ul&gt;
&lt;li&gt;非推奨&lt;code&gt;--global-style&lt;/code&gt; 、 &lt;code&gt;--global&lt;/code&gt;が&lt;code&gt;--install-strategy=shallow&lt;/code&gt;設定するようになりました&lt;/li&gt;
&lt;li&gt;非推奨&lt;code&gt;--legacy-bundling&lt;/code&gt; 、 &lt;code&gt;--install-strategy=nested&lt;/code&gt;設定するようになりました&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm config set&lt;/code&gt;は、非推奨または無効な構成オプションを受け入れなくなりました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;install-links&lt;/code&gt; config のデフォルトは&lt;code&gt;&quot;true&quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;node-version&lt;/code&gt;設定が削除されました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm-version&lt;/code&gt;が削除されました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm access&lt;/code&gt;サブコマンドの名前が変更されました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm birthday&lt;/code&gt;が削除されました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm set-script&lt;/code&gt;が削除されました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm bin&lt;/code&gt;が削除されました ( &lt;code&gt;npx&lt;/code&gt;または&lt;code&gt;npm exec&lt;/code&gt;を使用してバイナリを実行します)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;notable-features&quot; id=&quot;notable-features&quot; &gt;注目すべき機能&lt;a href=&quot;#notable-features&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Notable Features&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://github.com/npm/cli/commit/a09e19d88f046e54e8d75343883635a1bd056310&quot;&gt;&lt;code&gt;a09e19d&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/npm/cli/pull/5696&quot;&gt;#5696&lt;/a&gt;新しい&lt;code&gt;npm config fix&lt;/code&gt;コマンド (@nlf)&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://github.com/npm/cli/commit/3445da0138f9eed9d73d2b3f5f451fcc1fa2e3fe&quot;&gt;&lt;code&gt;3445da0&lt;/code&gt;&lt;/a&gt; &lt;code&gt;npm&lt;/code&gt;タイミングがデバッグ ログ ファイルと一緒に書き込まれるようになりました (@lukekarrys)&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://github.com/npm/cli/commit/6ee5b320d2eab58c18d50b861b3cfabe7f24124a&quot;&gt;&lt;code&gt;6ee5b32&lt;/code&gt;&lt;/a&gt; query: 結果に&lt;code&gt;queryContext&lt;/code&gt;を表示するようになりました (@nlf)&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://github.com/npm/cli/commit/314311c61b8f341715c168199d52976ee3237077&quot;&gt;&lt;code&gt;314311c&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/npm/cli/pull/5550&quot;&gt;#5550&lt;/a&gt; &lt;code&gt;login&lt;/code&gt; / &lt;code&gt;adduser&lt;/code&gt; (@wraithgar) の分離&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/npm/cli/commit/de2d33f3ed42e187803bdd31db4f7a12f08f353c&quot;&gt;&lt;code&gt;de2d33f&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;--install-strategy=hoisted|nested|shallow&lt;/code&gt; (#5709) (@fritzy)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このリリースの詳細については、GitHub&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v9.0.0&quot;&gt;リリース ノート&lt;/a&gt;を参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">68129</post-id></item><item><title>シークレット スキャンで暗号化されたシークレットが保存されるようになりました</title><link>https://github.blog/changelog/2022-10-24-secret-scanning</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 24 Oct 2022 15:44:37 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-10-24-secret-scanning</guid><description>Secret scanning</description><content:encoded>&lt;p&gt;GitHub は、対称暗号化を使用して検出されたシークレットを保存するようになりました。暗号化されたシークレットを保存すると、シークレット スキャンで可能な限り最高のユーザー エクスペリエンスを提供できます。&lt;/p&gt;
&lt;p&gt;以前は、公開されたシークレットの場所とそのハッシュのみを保存していました。したがって、ユーザー エクスペリエンスまたは API でシークレットを提示するたびに、その場所とハッシュからシークレットを再導出する必要がありました。これは、UI または API で検出されたシークレットのプレビューを常に表示できるとは限らないことを意味し、ユーザーが適切な失効と修復を確実に行うことを妨げていました。以下は、以前はシークレット プレビューをユーザーに表示できなかった場合の例です。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;コントリビューターが秘密を漏らし、Git 履歴を書き直した場合&lt;/li&gt;
&lt;li&gt;実用的なパフォーマンス上の理由から、シークレットが特定のサイズよりも大きいファイルで見つかった場合&lt;/li&gt;
&lt;li&gt;GitHub UI でのプレビューと互換性のない特定のテキスト エンコーディングのファイルでシークレットが検出された場合&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;現在、GitHub は対称暗号化を使用して、検出されたシークレットをソース コードとは別に保存します。この情報を保存することで、バージョン履歴から削除された場合でも、一貫したユーザー エクスペリエンスで検出されたシークレットをより確実に取得して表示できます。その結果、ユーザーは、以前に検出された秘密が何であったか、以前の露出が長期的な脅威を表しているかどうかを疑問に思うことはなくなります。&lt;/p&gt;
&lt;p&gt;ユーザーのセキュリティは常に最優先事項であり、シークレット ストレージの変更により、ユーザーはソフトウェアを保護するために必要な適切な修復と失効の手順を実行できるようになると確信しています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning#about-secret-scanning-for-advanced-security&quot;&gt;GitHub Advanced Security のシークレット スキャンの詳細&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">68126</post-id></item></channel></rss>