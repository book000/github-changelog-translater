<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Wed, 21 Sep 2022 19:20:28 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.0.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>VS Code の CodeQL: GitHub.com から CodeQL データベースをダウンロードします。</title><link>https://github.blog/changelog/2022-09-21-codeql-for-vs-code-download-codeql-databases-from-github-com</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 21 Sep 2022 19:20:28 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-09-21-codeql-for-vs-code-download-codeql-databases-from-github-com</guid><description>CodeQL for VS Code: download CodeQL databases from GitHub.com</description><content:encoded>&lt;p&gt;GitHub.com で最も人気のあるオープンソース プロジェクトの CodeQL データベースの作成と保存を開始しました。セキュリティ研究に CodeQL を使用している場合&lt;a href=&quot;https://codeql.github.com/docs/codeql-for-visual-studio-code/&quot;&gt;、Visual Studio Code の CodeQL 拡張機能を&lt;/a&gt;使用してこれらのデータベースを簡単かつ直接取得できるようになりました。これにより、独自のカスタム CodeQL クエリを簡単に記述して実行できます。&lt;/p&gt;
&lt;h3 id=&quot;using-codeql-for-security-research&quot; id=&quot;using-codeql-for-security-research&quot; &gt;セキュリティ研究のための CodeQL の使用&lt;a href=&quot;#using-codeql-for-security-research&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Using CodeQL for security research&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; CodeQL エンジンは GitHub のコード スキャンを強化します。ソース コードを分析し、潜在的なセキュリティ問題 ( &lt;a href=&quot;https://github.blog/changelog/2022-06-02-users-can-view-and-comment-on-code-scanning-alerts-on-the-conversation-tab-in-a-pull-request/&quot;&gt;プル リクエストなど) に&lt;/a&gt;フラグを立てます。デフォルトでは、コード スキャンは、&lt;a href=&quot;https://codeql.github.com/codeql-query-help/codeql-cwe-coverage/&quot;&gt;最も重要で一般的なセキュリティ問題&lt;/a&gt;を特定できる&lt;a href=&quot;https://github.com/github/codeql&quot;&gt;オープン ソース クエリ&lt;/a&gt;の大規模なセットを実行します。&lt;/p&gt;
&lt;p&gt; CodeQL は、&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/about-codeql/#about-variant-analysis&quot;&gt;バリアント分析&lt;/a&gt;やその他の種類のセキュリティ研究のための強力なツールでもあります。 CodeQL はソース コードをデータとして扱い、誰でもカスタム CodeQL クエリを記述してコードベースを調査し、脆弱性を特定できます。ステロイドのコード検索のように！&lt;/p&gt;
&lt;p&gt; CodeQL 分析の最初のステップは、ソース コードを CodeQL データベースに抽出することです。このデータベースには、抽象構文ツリー、データ フロー グラフ、制御フロー グラフなどの要素を含む、ソース コードのリレーショナル表現が含まれています。 &lt;a href=&quot;https://codeql.github.com/docs/codeql-cli/using-the-codeql-cli/#using-the-codeql-cli&quot;&gt;CodeQL CLI&lt;/a&gt;を使用して自分で CodeQL データベースを作成できますが、本日出荷された機能を使用すると、はるかに迅速に開始できます。GitHub.com から既製の CodeQL データベースをダウンロードできます。 &lt;/p&gt;
&lt;h3 id=&quot;downloading-codeql-databases-from-githubcom-in-vs-code&quot; id=&quot;downloading-codeql-databases-from-githubcom-in-vs-code&quot; &gt; VS Code で GitHub.com から CodeQL データベースをダウンロードする&lt;a href=&quot;#downloading-codeql-databases-from-githubcom-in-vs-code&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Downloading CodeQL databases from GitHub.com in VS Code&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; VS Code の CodeQL 拡張機能で使用する CodeQL データベースをダウンロードするには:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; VS Code 用の CodeQL 拡張機能がセットアップされていることを確認してください。詳細について&lt;a href=&quot;https://codeql.github.com/docs/codeql-for-visual-studio-code/setting-up-codeql-in-visual-studio-code/&quot;&gt;は、Visual Studio Code での CodeQL の設定 を&lt;/a&gt;参照してください。
&lt;/li&gt;
&lt;li&gt;拡張機能で CodeQL データベース ビューを開きます。
&lt;/li&gt;
&lt;li&gt;サイドバーにカーソルを合わせ、GitHub アイコンをクリックして、分析するパブリック リポジトリの&lt;code&gt;owner/repo&lt;/code&gt;識別子を指定します。 
&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/user-images.githubusercontent.com/42464962/189387221-3b31b0e7-04b0-46b3-9cfc-9bb4233851a8.png?ssl=1&quot; alt=&quot;画像&quot; data-recalc-dims=&quot;1&quot;&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; CodeQL データベースをダウンロードしたら、調査を開始する準備が整いました。詳細については、 &lt;a href=&quot;https://codeql.github.com/&quot;&gt;CodeQL ドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;h2 id=&quot;faqs&quot; id=&quot;faqs&quot; &gt;よくある質問&lt;a href=&quot;#faqs&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;FAQs&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;how-many-codeql-databases-are-available&quot; id=&quot;how-many-codeql-databases-are-available&quot; &gt; CodeQL データベースはいくつ利用できますか? &lt;a href=&quot;#how-many-codeql-databases-are-available&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;How many CodeQL databases are available?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;現在、GitHub.com には 200,000 を超えるリポジトリのデータベースが保存されています。このリストは、セキュリティ研究にとって最も興味深いコードベースが確実に含まれるように、常に拡大および進化しています。 &lt;/p&gt;
&lt;h3 id=&quot;what-languages-are-can-you-download-codeql-databases-for&quot; id=&quot;what-languages-are-can-you-download-codeql-databases-for&quot; &gt; CodeQL データベースをダウンロードできる言語は何ですか? &lt;a href=&quot;#what-languages-are-can-you-download-codeql-databases-for&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What languages are can you download CodeQL databases for?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; CodeQL コード スキャンでサポートするすべての言語のデータベースを作成して保存します。詳細については、「 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-with-codeql#about-codeql&quot;&gt;CodeQL を使用したコード スキャンについて&lt;/a&gt;」を参照してください。 &lt;/p&gt;
&lt;h3 id=&quot;can-i-download-codeql-databases-outside-vs-code&quot; id=&quot;can-i-download-codeql-databases-outside-vs-code&quot; &gt; VS Code の外部で CodeQL データベースをダウンロードできますか? &lt;a href=&quot;#can-i-download-codeql-databases-outside-vs-code&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Can I download CodeQL databases outside VS Code?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;はい、GitHub REST API を使用して CodeQL データベースをダウンロードすることもできます。詳細については、CodeQL CLI ドキュメントの「GitHub.com &lt;a href=&quot;https://codeql.github.com/docs/codeql-cli/creating-codeql-databases/#downloading-codeql-databases-from-github-com&quot;&gt;からデータベースをダウンロード&lt;/a&gt;する」を参照してください。 &lt;/p&gt;
&lt;h3 id=&quot;why-is-there-no-codeql-codebase-available-for-my-favourite-open-source-repository&quot; id=&quot;why-is-there-no-codeql-codebase-available-for-my-favourite-open-source-repository&quot; &gt;お気に入りのオープン ソース リポジトリで利用できる CodeQL コードベースがないのはなぜですか? &lt;a href=&quot;#why-is-there-no-codeql-codebase-available-for-my-favourite-open-source-repository&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Why is there no CodeQL codebase available for my favourite open source repository?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;分析したいリポジトリがあり、CodeQL データベースがまだ利用できない場合は、CodeQL エンジンで GitHub コード スキャンを有効にすることで、データベースの作成 (および保存) をトリガーできます。または、リポジトリをフォークして、フォークでコード スキャンを有効にすることもできます。詳細については、 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-using-actions&quot;&gt;コード スキャンのドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">67248</post-id></item><item><title>GitHub スポンサー: ユーザー アカウントの会計ホスト サポート</title><link>https://github.blog/changelog/2022-09-21-github-sponsors-fiscal-host-support-for-user-accounts</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 21 Sep 2022 17:06:40 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-09-21-github-sponsors-fiscal-host-support-for-user-accounts</guid><description>GitHub Sponsors&amp;#058; Fiscal host support for user accounts</description><content:encoded>&lt;p&gt;本日、ユーザーが GitHub スポンサー プロファイルを作成し、会計ホストを介してスポンサーシップの支払いを受け取ることを選択するためのサポートを追加します。これにより、メンテナーはより柔軟に資金を受け取る方法を選択できるようになります。これは、GitHub スポンサー プロファイルを作成する組織では既に可能であり、変更されていません。ユーザーと組織は、必要に応じて、会計ホストの代わりに Stripe Connect アカウントを使用することを引き続き選択できます。 &lt;a href=&quot;https://docs.github.com/en/sponsors/receiving-sponsorships-through-github-sponsors/using-a-fiscal-host-to-receive-github-sponsors-payouts&quot;&gt;会計ホストを使用して GitHub スポンサー プロファイルにサインアップする方法については、こちらをご覧ください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">67239</post-id></item><item><title>GitHub Mobile から GitHub Enterprise Server 3.1 への接続のサポートを削除する</title><link>https://github.blog/changelog/2022-09-20-removing-support-for-connecting-to-github-enterprise-server-3-1-from-github-mobile</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 20 Sep 2022 16:15:49 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-09-20-removing-support-for-connecting-to-github-enterprise-server-3-1-from-github-mobile</guid><description>Removing support for connecting to GitHub Enterprise Server 3.1 from GitHub Mobile</description><content:encoded>&lt;p&gt;GitHub Mobile は GitHub Enterprise Server 3.1 に接続できなくなりました。 GitHub Mobile から GitHub Enterprise Server への接続を有効にするには、サイト管理者が GitHub Enterprise Server 3.2 以降にアップグレードする必要があります。 GitHub Enterprise Server の新しいバージョンでは、パフォーマンスが向上し、セキュリティが強化され、新しい機能が提供されます。詳細については、「 &lt;a href=&quot;https://docs.github.com/enterprise-server/admin/all-releases&quot;&gt;GitHub Enterprise Server リリース&lt;/a&gt;」および「 &lt;a href=&quot;https://docs.github.com/enterprise-server/admin/enterprise-management/updating-the-virtual-machine-and-physical-resources/upgrading-github-enterprise-server&quot;&gt;GitHub Enterprise Server のアップグレード&lt;/a&gt;」を参照してください。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/mobile&quot;&gt;GitHub Mobile の詳細をお読みになり&lt;/a&gt;&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/mobile&quot;&gt;、フィードバックを送信&lt;/a&gt;して改善に役立ててください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">67206</post-id></item><item><title>Web ベースの認証がすべての npm コマンドで機能するようになりました</title><link>https://github.blog/changelog/2022-09-20-web-based-authentication-now-works-for-all-npm-commands</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 20 Sep 2022 11:04:28 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-09-20-web-based-authentication-now-works-for-all-npm-commands</guid><description>Web based authentication now works for all npm commands</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2022-07-26-general-availability-of-improved-2fa-experience-in-npm/&quot;&gt;最近&lt;/a&gt;、 &lt;code&gt;npm login&lt;/code&gt;および&lt;code&gt;npm publish&lt;/code&gt;コマンドに&lt;code&gt;--auth-type=web&lt;/code&gt;フラグを指定して Web ベースの認証を使用する機能をリリースしました。現在、この機能を、認証または OTP 検証を必要とする他のすべてのコマンドに拡張しています。&lt;/p&gt;
&lt;p&gt;この機能は、CLI バージョン 8.19.1 から使用できます。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">67193</post-id></item><item><title>help.github.com から GitHub サポートにアクセスできるようになりました</title><link>https://github.blog/changelog/2022-09-19-help-github-com-will-now-take-you-to-github-support</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 20 Sep 2022 06:56:47 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-09-19-help-github-com-will-now-take-you-to-github-support</guid><description>help.github.com will now take you to GitHub Support</description><content:encoded>&lt;p&gt;1 か月前に、help.github.com URL に関する最新情報を共有しました。本日より、help.github.com は GitHub のサポート ポータル (support.github.com) へのリダイレクトを開始します。&lt;br /&gt;
ユーザーは引き続き docs.github.com を使用して GitHub Docs にアクセスする必要があります。&lt;/p&gt;
&lt;p&gt; 「help.github.com/」で始まるリンクは、引き続き期待どおりに機能します。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">67192</post-id></item><item><title>エンタープライズ管理ユーザー向けの自動シングル サインオン – パブリック ベータ</title><link>https://github.blog/changelog/2022-09-19-automatic-single-sign-on-for-enterprise-managed-users-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 19 Sep 2022 23:26:58 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-09-19-automatic-single-sign-on-for-enterprise-managed-users-public-beta</guid><description>Automatic Single Sign On for Enterprise Managed Users - Public Beta</description><content:encoded>&lt;p&gt;エンタープライズ管理者は、サインアウトしたエンタープライズ管理対象ユーザーを会社のシングル サインオン (SSO) ページにリダイレクトすることを選択できるようになりました。この機能は、パブリック ベータ版として利用できます。&lt;br /&gt;
デフォルトでは、管理対象ユーザーが有効になっているエンタープライズは非表示になっており、エンタープライズにまだサインインしていないユーザーがエンタープライズ リソースにアクセスすると、 &lt;code&gt;404&lt;/code&gt;エラー ページが表示されます。&lt;br /&gt;
企業でこの機能を有効にすると、企業、組織、またはユーザーの名前空間内のリソースへの訪問者は、企業にまだサインインしていない場合、SSO リダイレクトがすぐに表示されます。&lt;br /&gt;
このリダイレクトは、ユーザーが提供されたリンクが機能しなくなったという印象を与えるのではなく、正しいアカウントにサインインするのに役立ちます。&lt;/p&gt;
&lt;p&gt;この設定は、エンタープライズ設定の&lt;strong&gt;認証セキュリティ&lt;/strong&gt;セクションで、シングル サインオン構成セクションの下にあります。 &lt;br /&gt;
&lt;img alt=&quot;画像&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/1666363/190013395-809f8378-0428-4db2-9ada-dd434b6c3377.png?w=1007&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;この設定の詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/policies/enforcing-policies-for-your-enterprise/enforcing-policies-for-security-settings-in-your-enterprise#managing-sso-for-unauthenticated-users&quot;&gt;「エンタープライズ管理ユーザーの自動リダイレクト」&lt;/a&gt;を参照してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">67191</post-id></item><item><title>プル リクエストをスカッシュ マージするときに表示される Git コミット作成者</title><link>https://github.blog/changelog/2022-09-15-git-commit-author-shown-when-squash-merging-a-pull-request</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 15 Sep 2022 18:38:33 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-09-15-git-commit-author-shown-when-squash-merging-a-pull-request</guid><description>Git commit author shown when squash merging a pull request</description><content:encoded>&lt;p&gt;プル リクエストをスカッシュ マージするときに作成された Git コミットの作成者が、マージ前に表示されるようになりました。以前は、コミットの作成者は、マージ コミットとマージする場合にのみ表示されていました。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/user-images.githubusercontent.com/2503052/190267728-80ac3566-74eb-429f-9617-21fe374fb024.png?ssl=1&quot; alt=&quot;画像&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;また、プル リクエストをマージしているユーザーもそれを開き、複数のメール アドレスが構成されている場合、ドロップダウンで、コミットの作成者に使用する別のメール アドレスを選択できるようになりました。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/user-images.githubusercontent.com/2503052/190268155-c369f6cc-584e-4d3d-9051-20e15317104a.png?ssl=1&quot; alt=&quot;画像&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;これらの改善は、スカッシュ マージによって作成された Git コミットが正しいメール アドレスに関連付けられるように設計されています。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/merging-a-pull-request&quot;&gt;プル リクエストのマージの&lt;/a&gt;詳細については、こちらをご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">67083</post-id></item><item><title>GitHub スポンサー: 「カスタム金額」設定の変更通知</title><link>https://github.blog/changelog/2022-09-13-github-sponsors-change-notice-for-the-custom-amount-setting</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 13 Sep 2022 17:28:04 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-09-13-github-sponsors-change-notice-for-the-custom-amount-setting</guid><description>GitHub Sponsors&amp;#058; change notice for the &apos;custom amount&apos; setting</description><content:encoded>&lt;p&gt;スポンサー メンテナーを合理化するために、GitHub スポンサーのカスタム金額設定を変更しています。 2022 年 10 月 3 日以降、すべてのスポンサー プロファイルでカスタム金額がデフォルトで有効になります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;その日に、以前にカスタム金額を有効にしていない場合、最小カスタム金額は、公開されている月間レベルの最低額または公開されている 1 回限りの最低レベルのいずれか高い方に設定されます。最小額を変更したい場合は、スポンサー ダッシュボードでカスタム金額を有効にし (まだ有効になっていない場合)、希望する最小額に設定できます。&lt;/li&gt;
&lt;li&gt; 2022 年 10 月 3 日より前に最小カスタム金額を設定した場合、その金額は変更されません。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/user-images.githubusercontent.com/82317/189940509-2238781e-46a6-4ffa-b495-354c8c8a9b38.png?ssl=1&quot; alt=&quot;メンテナー向けの GitHub Sponsors ダッシュボードのカスタム スポンサーシップ金額設定&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">67058</post-id></item><item><title>GitHub for iOS: プル リクエストでファイルを編集する</title><link>https://github.blog/changelog/2022-09-13-github-for-ios-edit-files-in-pull-requests</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 13 Sep 2022 15:58:02 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-09-13-github-for-ios-edit-files-in-pull-requests</guid><description>GitHub for iOS&amp;#058; Edit files in pull requests</description><content:encoded>&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/user-images.githubusercontent.com/59900904/187802767-c118b51d-581d-4a90-a01d-e0434d980b1d.png?ssl=1&quot; alt=&quot;GitHub for iOS のプル リクエスト機能でファイルを編集することを知らせるバナー&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://apps.apple.com/us/app/github/id1477376905&quot;&gt;GitHub for iOS&lt;/a&gt;のプルリクエスト内に「ファイル編集」を導入！既存のプル リクエストをすばやく更新して、厄介なタイプミスを修正するか、不足しているメソッドをマージ前に追加します。 &lt;/p&gt;
&lt;div style=&quot;width: 640px;&quot; class=&quot;wp-video&quot;&gt;&lt;!--[if lt IE 9]&gt;&lt;script&gt;document.createElement(&apos;video&apos;);&lt;/script&gt;&lt;![endif]--&gt;
&lt;video class=&quot;wp-video-shortcode js-viewport-aware-video events-none&quot; id=&quot;video-67053-1&quot; width=&quot;640&quot; height=&quot;360&quot; loop=&quot;1&quot; autoplay=&quot;1&quot; preload=&quot;metadata&quot; muted=&quot;1&quot;&gt;&lt;source type=&quot;video/mp4&quot; src=&quot;https://user-images.githubusercontent.com/59900904/189217787-1562c709-c1cb-44a1-8016-071ca353bc77.mp4?_=1&quot; /&gt; &lt;a href=&quot;https://user-images.githubusercontent.com/59900904/189217787-1562c709-c1cb-44a1-8016-071ca353bc77.mp4&quot;&gt;https://user-images.githubusercontent.com/59900904/189217787-1562c709-c1cb-44a1-8016-071ca353bc77.mp4&lt;/a&gt;&lt;/video&gt;&lt;/div&gt;
&lt;p&gt; GitHub for Android 内でのプル リクエストのファイル編集は、今年後半に提供される予定です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mobile&quot;&gt;モバイル用 GitHub の詳細&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://apps.apple.com/app/github/id1477376905?ls=1&quot;&gt;iOS 用 GitHub を今すぐダウンロード&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コミュニティ ディスカッションの会話に参加して、この機能やその他の GitHub Mobile 機能に関する&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/mobile&quot;&gt;フィードバックをお送りください&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">67053</post-id></item><item><title>merge-ort 戦略を使用して作成されたマージコミット</title><link>https://github.blog/changelog/2022-09-12-merge-commits-now-created-using-the-merge-ort-strategy</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 12 Sep 2022 21:21:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2022-09-12-merge-commits-now-created-using-the-merge-ort-strategy</guid><description>Merge commits now created using the merge-ort strategy</description><content:encoded>&lt;p&gt;GitHub がマージ コミットを作成するとき、たとえばプル リクエストを正常にマージできるかどうかをテストしたり、プル リクエストを実際にマージしたりするために、 &lt;a href=&quot;https://github.blog/2021-08-16-highlights-from-git-2-33/#merge-ort-a-new-merge-strategy&quot;&gt;&lt;code&gt;merge-ort&lt;/code&gt;&lt;/a&gt;戦略を使用するようになりました。 &lt;code&gt;merge-ort&lt;/code&gt;は比較的新しい Git マージ戦略であり、大幅に高速化され (たとえば、以前は作成に 5 秒以上かかっていた複雑なマージ コミットが 200 ミリ秒未満で作成されるようになりました)、 &lt;code&gt;merge-recursive&lt;/code&gt;で見つかった微妙な正確性の問題に対処します。ストラテジー。また、Git の最新リリースでは、 &lt;code&gt;merge-ort&lt;/code&gt;がデフォルトのマージ戦略であるため、ローカル マシンと GitHub の間でマージ結果がより予測可能になり、一貫性が保たれます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://git-scm.com/docs/merge-strategies#Documentation/merge-strategies.txt-ort&quot;&gt;Git の&lt;code&gt;merge-ort&lt;/code&gt;戦略&lt;/a&gt;と&lt;a href=&quot;https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/about-merge-methods-on-github&quot;&gt;プル リクエストのマージ方法&lt;/a&gt;の詳細については、こちらをご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">67051</post-id></item></channel></rss>