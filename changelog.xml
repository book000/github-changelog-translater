<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>Changelogs Archive - The GitHub Blog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Thu, 02 May 2024 22:03:06 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.5.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Changelogs Archive - The GitHub Blog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>[一般提供] エンタープライズ管理対象ユーザー向けのゲスト コラボレーター</title><link>https://github.blog/changelog/2024-05-02-ga-guest-collaborators-for-enterprise-managed-users</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 02 May 2024 22:03:06 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-05-02-ga-guest-collaborators-for-enterprise-managed-users</guid><description>&lt;p&gt;[GA] Guest Collaborators for enterprise managed users&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-05-02-ga-guest-collaborators-for-enterprise-managed-users&quot;&gt;[GA] Guest Collaborators for enterprise managed users&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub Enterprise Cloud EMU のゲスト コラボレーターが一般提供されるようになりました。 &lt;a href=&quot;//github.blog/changelog/2023-11-08-public-beta-guest-collaborators-for-enterprise-managed-users/)&quot;&gt;昨年末にパブリック ベータ版で最初に発表された&lt;/a&gt;この機能により、アイデンティティ プロバイダーは&lt;code&gt;guest collaborator&lt;/code&gt;ロールをユーザーに割り当て、そのユーザーの&lt;code&gt;internal&lt;/code&gt;リポジトリへのデフォルト アクセスを制限できるようになります。&lt;/p&gt;
&lt;p&gt;私たちの手を GA エクスペリエンスに導いてくださった何千人ものパブリック ベータ参加者に感謝します。多くのリクエストに応えて、本日、EMU 企業での&lt;a href=&quot;https://github.blog/changelog/2024-05-02-public-beta-repository-collaborators-for-enterprise-managed-users/&quot;&gt;リポジトリ コラボレータ アクセスのパブリック ベータ版&lt;/a&gt;もリリースしました。これにより、エンタープライズ アカウントのメンバーであるユーザーの選択に限定された「外部コラボレーター」アクセス スタイルが EMU に導入されます。これら 2 つの機能を組み合わせることで、請負業者やその他のアクセスが制限されたユースケースのニーズに合わせて、特定のリポジトリや組織に可能な限り詳細なアクセス権を付与できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/admin/managing-accounts-and-repositories/managing-users-in-your-enterprise/roles-in-an-enterprise#guest-collaborators&quot;&gt;ゲスト コラボレーター&lt;/a&gt;について詳しくはこちら&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-05-02-ga-guest-collaborators-for-enterprise-managed-users&quot;&gt;[GA] エンタープライズ管理ユーザー向けのゲスト コラボレーターは、&lt;/a&gt; &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に登場しました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77861</post-id></item><item><title>[パブリック ベータ] エンタープライズ管理対象ユーザーのリポジトリ コラボレータ</title><link>https://github.blog/changelog/2024-05-02-public-beta-repository-collaborators-for-enterprise-managed-users</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 02 May 2024 21:56:47 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-05-02-public-beta-repository-collaborators-for-enterprise-managed-users</guid><description>&lt;p&gt;[Public Beta] Repository collaborators for Enterprise Managed Users&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-05-02-public-beta-repository-collaborators-for-enterprise-managed-users&quot;&gt;[Public Beta] Repository collaborators for Enterprise Managed Users&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;エンタープライズ管理対象ユーザーは、組織のメンバーにならずに、企業内のリポジトリにコラボレーターとして直接追加できるようになりました。これらのユーザーは外部コラボレーターと同様に機能しますが、いくつかの違いがあります。&lt;br /&gt;
 1. 企業内のユーザー アカウントのみをリポジトリに追加できます。つまり、コラボレーションしたいユーザーは、リンクされたアイデンティティ プロバイダー (IDP) から取得する必要があります。&lt;br /&gt;
 2. EMU ユーザーは、企業内のリポジトリのコラボレータのみになれます。 EMU アカウントは企業外で共同作業することはできません。&lt;br /&gt;
 3. Repo Collaborator の招待は、デフォルトでは EMU のエンタープライズ所有者のみが送信できますが、非 EMU の企業および組織では、エンタープライズと組織の所有者の両方が外部コラボレーターを管理できます。&lt;/p&gt;
&lt;p&gt;外部コラボレータと同様に、ユーザーは、リポジトリ コラボレータとしてアクセスを許可されたリポジトリにアクセスするために、資格情報を SSO 認証する必要はありません。これは、GitHub 上の&lt;code&gt;internal&lt;/code&gt;リポジトリの現在のアクセス モデルと一致しています。&lt;/p&gt;
&lt;p&gt;リポジトリ コラボレータを試すには、エンタープライズ設定のリポジトリ ポリシー セクションに移動し、どの層の管理者にコラボレータの招待を許可するかを選択します。&lt;/p&gt;
&lt;p&gt;リポジトリと外部コラボレーターの詳細については、「 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-peoples-access-to-your-organization-with-roles/roles-in-an-organization&quot;&gt;組織内の役割&lt;/a&gt;」を参照してください。&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-05-02-public-beta-repository-collaborators-for-enterprise-managed-users&quot;&gt;[パブリック ベータ] エンタープライズ管理ユーザー向けリポジトリ コラボレーター&lt;/a&gt;appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77860</post-id></item><item><title>dependabot のプル リクエスト ジョブが、自己ホスト型の GitHub Actions ランナーで実行できるようになりました</title><link>https://github.blog/changelog/2024-05-02-dependabot-pull-requests-jobs-are-now-available-to-run-on-self-hosted-actions-runners</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 02 May 2024 16:56:44 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-05-02-dependabot-pull-requests-jobs-are-now-available-to-run-on-self-hosted-actions-runners</guid><description>&lt;p&gt;Dependabot pull requests jobs are now available to run on self hosted Actions runners&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-05-02-dependabot-pull-requests-jobs-are-now-available-to-run-on-self-hosted-actions-runners&quot;&gt;Dependabot pull requests jobs are now available to run on self hosted GitHub Actions runners&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;以前は、プライベート レジストリを使用して内部ネットワーク上でパッケージをホストしていた開発者は、Dependabot を使用してコード内のパッケージのバージョンを更新できませんでした。&lt;/p&gt;
&lt;p&gt;この変更により、ユーザーは、セルフホスト型 GitHub Actions ランナーを使用してプライベート ネットワーク上で dependabot プル リクエスト ジョブを実行することを選択できるようになり、Dependabot がオンプレミスのプライベート レジストリにアクセスして、それらのパッケージを更新できるようになります。&lt;/p&gt;
&lt;p&gt;セルフホスト ランナーを有効にするための前提条件には、対象のリポジトリに対して GitHub アクションを有効にすることが含まれます。 &lt;strong&gt;dependabot の実行は GitHub Actions の分にはカウントされないことに注意することが重要です。つまり、Dependabot は引き続き誰でも無料で使用できます。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;まず、 &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/working-with-dependabot/managing-dependabot-on-self-hosted-runners&quot;&gt;Dependabot Updates を使用したセルフホスト ランナーの管理に関するドキュメントを&lt;/a&gt;確認してください。&lt;!--Carlin ToDo: update link--&gt;&lt;/p&gt;
&lt;p&gt; dependabot を GitHub Actions ワークフローとして実行する意味について詳しく知りたい場合は、 &lt;a href=&quot;https://github.blog/changelog/2024-04-22-dependabot-updates-on-actions-for-github-enterprise-cloud-and-free-pro-and-teams-users/&quot;&gt;変更ログと FAQ&lt;/a&gt;または、 &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/working-with-dependabot/about-dependabot-on-github-actions-runners&quot;&gt;Dependabot on Actions のドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-05-02-dependabot-pull-requests-jobs-are-now-available-to-run-on-self-hosted-actions-runners&quot;&gt;「Dependabot プル リクエスト ジョブが自己ホスト型 GitHub Actions ランナーで実行できるようになりました」&lt;/a&gt;という投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77856</post-id></item><item><title>Artifact Attestations パブリック ベータ版</title><link>https://github.blog/changelog/2024-05-02-artifact-attestations-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 02 May 2024 16:20:10 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-05-02-artifact-attestations-public-beta</guid><description>&lt;p&gt;Artifact Attestations public beta&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-05-02-artifact-attestations-public-beta&quot;&gt;Artifact Attestations public beta&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;アクションに基づいて構築するあらゆるものに対して改ざん防止のペーパートレイルを作成する&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds&quot;&gt;Artifact Attestations を&lt;/a&gt;使用すると、GitHub Actions でビルドに署名し、アーティファクトの出所情報を取得して、どこからでも検証できるようにします。管理するキーや PKI はなく、検証は&lt;a href=&quot;https://cli.github.com/manual/gh_attestation_verify&quot;&gt;GitHub CLI ツール&lt;/a&gt;で行われます。このソリューションは、ソフトウェア アーティファクトの署名を簡素化するオープン ソース プロジェクトである&lt;a href=&quot;https://www.sigstore.dev/&quot;&gt;Sigstore&lt;/a&gt;に基づいています。&lt;/p&gt;
&lt;p&gt; GitHub Actions ワークフローに来歴を追加するには、アーティファクトへのパスを指定して新しい attest-build-provenance アクションを呼び出すだけです。簡単な例を次に示します。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-yml&quot;&gt;permissions:
 id-token: write
 contents: read
 attestations: write

 #
 # (build your artifact)
 #

 - name: Generate artifact attestation
 uses: actions/attest-build-provenance@v1
 with:
 subject-path: &amp;#39;PATH/TO/ARTIFACT&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;次に、CLI ツールを使用して確認します。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-sh&quot;&gt;gh attestation verify PATH/TO/ARTIFACT -o myorganization
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;詳細については、&lt;a href=&quot;https://github.blog/2024-05-02-introducing-artifact-attestations-now-in-public-beta/&quot;&gt;ブログを&lt;/a&gt;チェックし、 &lt;a href=&quot;https://github.com/orgs/community/discussions/122028&quot;&gt;GitHub コミュニティ&lt;/a&gt;のディスカッションに参加してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-05-02-artifact-attestations-public-beta&quot;&gt;Artifact Attestations パブリック ベータ版&lt;/a&gt;の投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77855</post-id></item><item><title>シークレット スキャンの非プロバイダー パターンの新規および更新された監査ログ イベント</title><link>https://github.blog/changelog/2024-05-02-new-and-updated-audit-log-events-for-secret-scanning-non-provider-patterns</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 02 May 2024 16:04:13 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-05-02-new-and-updated-audit-log-events-for-secret-scanning-non-provider-patterns</guid><description>&lt;p&gt;New and updated audit log events for secret scanning non-provider patterns&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-05-02-new-and-updated-audit-log-events-for-secret-scanning-non-provider-patterns&quot;&gt;New and updated audit log events for secret scanning non-provider patterns&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;シークレット スキャンの非プロバイダー パターンがリポジトリ、組織、またはエンタープライズ レベルで有効または無効になったときに、監査ログ イベントが作成されるようになりました。&lt;/p&gt;
&lt;p&gt;既存の&lt;code&gt;secret_scanning_alert&lt;/code&gt;イベントに&lt;code&gt;secret_type&lt;/code&gt;フィールドが含まれるようになりました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレットスキャンについて詳しく見る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/audit-log-events-for-your-organization&quot;&gt;組織の監査ログ イベントの詳細を確認する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この投稿&lt;a href=&quot;https://github.blog/changelog/2024-05-02-new-and-updated-audit-log-events-for-secret-scanning-non-provider-patterns&quot;&gt;「シークレット スキャンの非プロバイダー パターンの新しい監査ログ イベントと更新された監査ログ イベント」&lt;/a&gt;は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77852</post-id></item><item><title>GitHub アプリはクライアント ID を使用してインストール トークンを取得できるようになりました</title><link>https://github.blog/changelog/2024-05-01-github-apps-can-now-use-the-client-id-to-fetch-installation-tokens</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 02 May 2024 00:33:48 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-05-01-github-apps-can-now-use-the-client-id-to-fetch-installation-tokens</guid><description>&lt;p&gt;GitHub Apps can now use the client ID to fetch installation tokens&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-05-01-github-apps-can-now-use-the-client-id-to-fetch-installation-tokens&quot;&gt;GitHub Apps can now use the client ID to fetch installation tokens&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub アプリの開発者は、OAuth フローとインストール トークン フローの両方にクライアント ID を使用することで、アプリケーションを簡素化できます。&lt;/p&gt;
&lt;p&gt;これまで、GitHub アプリはアプリケーション ID とクライアント ID という 2 つの異なる ID を管理してきました。アプリケーション ID は JWT を作成するためにのみ使用され、その後、インストール トークンを取得するために使用されました。クライアント ID は、ユーザーのサインインとインストールの要求に OAuth フローで使用されます。これら 2 つの値は、アプリケーションと、開発者に不必要な摩擦を引き起こした場合にどちらを使用するかという問題を同様に識別します。 JWT を作成するときに、アプリケーション ID の代わりにクライアント ID を使用できるようになりました。&lt;/p&gt;
&lt;p&gt;現時点ではアプリケーション ID は非推奨ではなく、削除する予定もありません。ただし、将来の機能との互換性はクライアント ID の使用に依存するため、更新することをお勧めします。&lt;/p&gt;
&lt;p&gt;ここで許可される具体的な変更は、アプリがアプリケーションの秘密キーを所有していることを証明する JWT を作成するときに、 &lt;code&gt;iss&lt;/code&gt;クレームにクライアント ID を使用できることです。型付き言語を使用している場合、アプリケーション ID は&lt;code&gt;int&lt;/code&gt;ですが、クライアント ID は&lt;code&gt;string&lt;/code&gt;であることに注意してください。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-diff&quot;&gt;require &amp;#39;openssl&amp;#39;
 require &amp;#39;jwt&amp;#39; # https://rubygems.org/gems/jwt

 # Private key contents
 private_pem = File.read(&quot;YOUR_PATH_TO_PEM&quot;)
 private_key = OpenSSL::PKey::RSA.new(private_pem)

 # Generate the JWT
 payload = {
 # issued at time, 60 seconds in the past to allow for clock drift
 iat: Time.now.to_i - 60,
 # JWT expiration time (10 minute maximum)
 exp: Time.now.to_i + (10 * 60),
 --- # GitHub App&amp;#39;s App ID
 --- iss: &quot;12345&quot;
 +++ # GitHub App&amp;#39;s Client ID
 +++ iss: &quot;Iv23f8doAlphaNumer1c&quot;
 }

 jwt = JWT.encode(payload, private_key, &quot;RS256&quot;)
 puts jwt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; Octokit はセットアップでアプリ ID の使用を依然として想定していることに注意してください。Octokit SDK はクライアント ID の使用をサポートするために将来更新される予定です。&lt;/p&gt;
&lt;p&gt;アプリケーションのクライアント ID は、設定ページで確認できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/1666363/b9066ab8-329f-46eb-8dad-816a0254db32&quot; alt=&quot;クライアント ID とアプリケーション ID の両方を示すアプリの設定のスクリーンショット&quot; /&gt;&lt;/p&gt;
&lt;p&gt;クライアント ID とアプリケーション ID は秘密ではなく、エンド ユーザーに表示されることが期待されています。この更新を行うときに ID の処理方法を変更する必要はありません。&lt;/p&gt;
&lt;p&gt; JWT を生成してインストール トークンを取得する方法の詳細については、 &lt;a href=&quot;https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-json-web-token-jwt-for-a-github-app&quot;&gt;「GitHub アプリの JWT の生成」&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-05-01-github-apps-can-now-use-the-client-id-to-fetch-installation-tokens&quot;&gt;GitHub アプリがクライアント ID を使用してインストール トークンを取得できるようになった&lt;/a&gt;という投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77844</post-id></item><item><title>監査ログ ストリーミング ヘルス チェックの一般提供が開始されました</title><link>https://github.blog/changelog/2024-05-01-audit-log-streaming-health-check-is-generally-available</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 01 May 2024 20:36:58 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-05-01-audit-log-streaming-health-check-is-generally-available</guid><description>&lt;p&gt;Audit Log Streaming Health Check is Generally Available&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-05-01-audit-log-streaming-health-check-is-generally-available&quot;&gt;Audit Log Streaming Health Check is Generally Available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub の監査ログ ストリーミング ヘルス チェックが一般提供になりました。監査ログの健全性チェックの目的は、監査ログ ストリームがサイレントに失敗しないことを確認することです。 24 時間ごとに、ストリームごとにヘルスチェックが実行されます。ストリームが正しく設定されていない場合、監査ログ ストリームが正しく構成されていないことを通知する電子メールがエンタープライズ所有者に送信されます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/95828167/739a812a-e3e6-48bc-a282-540e25c20877&quot; alt=&quot;ストリームの構成が間違っている場合の電子メール通知の例&quot; /&gt;&lt;/p&gt;
&lt;p&gt;ストリーミングされた監査ログは、GitHub.com に最大 7 日間保存されます。監査ログ イベントがストリームからドロップされないようにするには、電子メール通知から 6 日以内に構成が間違っているストリームを修正する必要があります。ストリーミング構成を修正するには、「&lt;a href=&quot;#setting-up-audit-log-streaming&quot;&gt;監査ログ ストリーミングの設定&lt;/a&gt;」で説明されている手順に従います。&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-05-01-audit-log-streaming-health-check-is-generally-available&quot;&gt;「監査ログ ストリーミング ヘルス チェックが一般提供になりました」&lt;/a&gt; first appeared on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77829</post-id></item><item><title>npm フィードバックが GitHub コミュニティで利用できるようになりました</title><link>https://github.blog/changelog/2024-04-30-npm-feedback-is-now-available-on-github-community</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 30 Apr 2024 23:31:12 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-30-npm-feedback-is-now-available-on-github-community</guid><description>&lt;p&gt;npm feedback is now available on GitHub Community&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-30-npm-feedback-is-now-available-on-github-community&quot;&gt;npm feedback is now available on GitHub Community&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;npm のフィードバックは&lt;a href=&quot;https://github.com/orgs/community/discussions&quot;&gt;GitHub コミュニティ&lt;/a&gt;で利用できるようになりました。以前は、npm のフィードバックは&lt;a href=&quot;https://github.com/npm/feedback/discussions&quot;&gt;npm フィードバック&lt;/a&gt;チャネルで行われていましたが、未解決のディスカッションを移行するため、このチャネルは廃止される予定です。&lt;/p&gt;
&lt;p&gt;外部ユーザーは&lt;a href=&quot;https://github.com/orgs/community/discussions&quot;&gt;、GitHub コミュニティ&lt;/a&gt;の新しい npm カテゴリを利用して、npm、cli、レジストリ、Web サイトのあらゆる部分に提案を行う必要があります。ユーザーはトピックに投票してランク付けして意見を表明し、既存のアイテムをサポートできます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions&quot;&gt;GitHub コミュニティ&lt;/a&gt;に参加して、npm に関するフィードバックを共有してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-30-npm-feedback-is-now-available-on-github-community&quot;&gt;npm 後のフィードバックが GitHub コミュニティで利用できるようになりました&lt;/a&gt;appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; 。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77807</post-id></item><item><title>エンタープライズ ライセンス ページの「エンタープライズ ヘルプ」セクションの削除</title><link>https://github.blog/changelog/2024-04-30-enterprise-licensing-page-removing-enterprise-help-section</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 30 Apr 2024 22:33:21 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-30-enterprise-licensing-page-removing-enterprise-help-section</guid><description>&lt;p&gt;Enterprise Licensing page removing &quot;Enterprise Help&quot; section&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-30-enterprise-licensing-page-removing-enterprise-help-section&quot;&gt;Enterprise Licensing page removing &amp;#8220;Enterprise Help&amp;#8221; section&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub Enterprise 所有者は、以前はここにあったエンタープライズ ライセンス ページ `https://github.com/enterprises//enterprise_licensing` から&lt;code&gt;Enterprise Help&lt;/code&gt;リンクを削除したことに気付いたかもしれません。 &lt;/p&gt;
&lt;p&gt;&lt;img fetchpriority=&quot;high&quot; decoding=&quot;async&quot; class=&quot;width-fit aligncenter wp-image-77804 size-full&quot; src=&quot;https://github.blog/wp-content/uploads/2024/04/326999513-d7a5b6e3-c799-463b-8fe4-4968e4fd9647.png?resize=1242%2C174&quot; alt=&quot;&quot; width=&quot;1242&quot; height=&quot;174&quot; srcset=&quot;https://github.blog/wp-content/uploads/2024/04/326999513-d7a5b6e3-c799-463b-8fe4-4968e4fd9647.png?resize=1242%2C174?w=1242 1242w, https://github.blog/wp-content/uploads/2024/04/326999513-d7a5b6e3-c799-463b-8fe4-4968e4fd9647.png?resize=1242%2C174?w=300 300w, https://github.blog/wp-content/uploads/2024/04/326999513-d7a5b6e3-c799-463b-8fe4-4968e4fd9647.png?resize=1242%2C174?w=768 768w, https://github.blog/wp-content/uploads/2024/04/326999513-d7a5b6e3-c799-463b-8fe4-4968e4fd9647.png?resize=1242%2C174?w=1024 1024w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;これらのショートカットは引き続き他の場所で見つけることができます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest&quot;&gt;GitHub Enterprise ドキュメントは&lt;/a&gt;、Enterprise 概要ページ `https://github.com/enterprises/` の README の下で参照されています。&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://support.github.com/&quot;&gt;GitHub サポートは&lt;/a&gt;、エンタープライズ概要ページと設定「https://github.com/enterprises//settings/support」のサポート ページの両方で見つけることができます。そして&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/enterprise-server@latest/support/contacting-github-support/providing-data-to-github-support&quot;&gt;GitHub Enterprise Server サポート バンドルは、&lt;/a&gt; [セットアップ] &gt; [サポート サイト管理] ページ、および設定の [GitHub Enterprise Cloud サポート] ページからアップロードできます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-04-30-enterprise-licensing-page-removing-enterprise-help-section&quot;&gt;「エンタープライズ ヘルプ」セクションを削除したポスト エンタープライズ ライセンス ページが&lt;/a&gt;最初に登場したのは、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;です。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77803</post-id></item><item><title>シークレット スキャンは、プッシュ保護のバイパス制御をサポートします (パブリック ベータ版)</title><link>https://github.blog/changelog/2024-04-30-secret-scanning-supports-bypass-controls-for-push-protection-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 30 Apr 2024 22:24:55 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-04-30-secret-scanning-supports-bypass-controls-for-push-protection-public-beta</guid><description>&lt;p&gt;Secret scanning supports bypass controls for push protection (public beta)&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-04-30-secret-scanning-supports-bypass-controls-for-push-protection-public-beta&quot;&gt;Secret scanning supports bypass controls for push protection (public beta)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;シークレット スキャンを使用する GitHub Advanced Security の顧客の場合、プッシュ保護をバイパスできるチームまたはロールを指定できるようになりました。この機能は GitHub Enterprise Cloud のパブリック ベータ版です。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/3474250/b86f2517-1f78-4a7e-a311-28a2ab4a64e7&quot; alt=&quot;設定のバイパスリストのスクリーンショット&quot; /&gt;&lt;/p&gt;
&lt;p&gt;これは新しいバイパス リストを通じて管理され、組織はプッシュ保護をバイパスし、バイパス リクエストのレビュー担当者として機能することを許可されるチームまたはロールを選択できます。このリストに含まれていない個人が、最初にブロックされているコミットをプッシュする必要がある場合は、バイパス リクエストを送信する必要があります。このリクエストは、承認または拒否できる権限のある個人によって検討され、リポジトリへのコミットを続行できるかどうかが判断されます。&lt;/p&gt;
&lt;p&gt;この機能はまだ Web UI プッシュと互換性がないことに注意してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning&quot;&gt;シークレットスキャンについて詳しく見る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/push-protection-for-repositories-and-organizations&quot;&gt;プッシュ保護について詳しくはこちら&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/orgs/community/discussions/121816&quot;&gt;GitHub コミュニティ内のディスカッションに参加してください&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-04-30-secret-scanning-supports-bypass-controls-for-push-protection-public-beta&quot;&gt;シークレット スキャンはプッシュ保護のバイパス制御をサポートします (パブリック ベータ版)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">77802</post-id></item></channel></rss>