<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Mon, 09 Sep 2024 23:16:44 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.6.1</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>VS Code の Copilot Chat のコンテキスト ウィンドウの拡大、テスト生成の改善など</title><link>https://github.blog/changelog/2024-09-09-larger-context-window-improved-test-generation-and-more-in-vs-codes-copilot-chat</link><dc:creator>Allison</dc:creator><pubDate>Mon, 09 Sep 2024 23:16:44 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-09-09-larger-context-window-improved-test-generation-and-more-in-vs-codes-copilot-chat</guid><description>&lt;p&gt;Larger context window, improved test generation, and more in VS Code&apos;s Copilot Chat&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-09-09-larger-context-window-improved-test-generation-and-more-in-vs-codes-copilot-chat&quot;&gt;Larger context window, improved test generation, and more in VS Code&amp;#8217;s Copilot Chat&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/b4b54566-46b7-4f88-a56b-6634579b9bba&quot; alt=&quot;VS Code 8 月の最近の更新&quot; /&gt;&lt;/p&gt;
&lt;p&gt;先月の&lt;a href=&quot;https://aka.ms/github-copilot-chat-gpt-4o&quot;&gt;GPT-4o&lt;/a&gt;へのアップグレード以来、利用可能なチャット コンテキストが増加しました。そのため、VS Code の GitHub Copilot Chat を使用して、より大きなファイルを参照したり、より長いチャット会話を行ったりできるようになりました。さらに、 &lt;a href=&quot;https://code.visualstudio.com/updates/v1_93#_attach-context-in-quick-chat&quot;&gt;[インラインおよびクイック チャット&lt;/a&gt;で&lt;strong&gt;コンテキストを添付] を&lt;/strong&gt;クリックして、より関連性の高いコンテキストをクエリに追加できるようになりました。&lt;/p&gt;
&lt;p&gt;今月&lt;a href=&quot;https://code.visualstudio.com/updates/v1_93#_github-copilot&quot;&gt;のリリースでは、&lt;/a&gt; VS Code の Copilot Chat に次の改善も加えられています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;「Copilot を使用してテストを生成」&lt;/strong&gt;アクションまたは&lt;code&gt;/tests&lt;/code&gt;スラッシュ コマンドを使用して、テストを簡単に生成します。 Copilot は、テストを更新して既存のファイルに追加するか、テスト ファイルが存在しない場合は新しいテスト ファイルを作成します。&lt;a href=&quot;https://code.visualstudio.com/updates/v1_93#_improved-test-generation&quot;&gt;もっと詳しく知る&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; &lt;strong&gt;[チャットを表示]&lt;/strong&gt;ボタンを使用して、以前のチャット セッションを再表示します。セッションには AI によって生成された名前が付けられ、手動で名前を変更できるようになりました。エントリは最後のリクエストの日付で並べ替えられ、日付バケットごとにグループ化されます。&lt;a href=&quot;https://code.visualstudio.com/updates/v1_93#_improved-chat-history&quot;&gt;もっと詳しく知る&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; &lt;strong&gt;[低評価]&lt;/strong&gt;ボタンを選択して、満足のいかないチャット応答の詳細を提供します。詳細なオプションを含むドロップダウンは、問題の種類を選択するか、問題として当社に報告するのに役立ち、Copilot の改善に役立ちます。&lt;a href=&quot;https://code.visualstudio.com/updates/v1_93#_thumbs-down-feedback-details&quot;&gt;もっと詳しく知る&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;コード アクションの名前が明確になりました: &lt;strong&gt;Generate Tests using Copilot&lt;/strong&gt;および&lt;strong&gt;Generate Documentation using Copilot&lt;/strong&gt; 。カーソルを識別子の上に置き、アクションを選択するだけです。 &lt;a href=&quot;https://code.visualstudio.com/updates/v1_93#_renamed-code-actions-for-generating-tests-and-documentation&quot;&gt;もっと詳しく知る&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;experimental-new-features&quot;&gt;実験的な新機能&lt;a href=&quot;#experimental-new-features&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Experimental New Features&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; VS Code では、フィードバックを収集し、Copilot の将来の開発に影響を与えるための実験的な設定が利用できます。&lt;a href=&quot;https://github.com/microsoft/vscode-copilot-release/issues&quot;&gt;私たちの問題&lt;/a&gt;であなたの意見を共有してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;設定でコード生成の指示を定義するか (&lt;em&gt;プライベート フィールド名には常にアンダースコアを使用する&lt;/em&gt;など)、ファイルからインポートします。 &lt;a href=&quot;//settings/github.copilot.chat.experimental.codeGeneration.instructions&quot;&gt;&lt;code&gt;github.copilot.chat.experimental.codeGeneration.instructions&lt;/code&gt;&lt;/a&gt;で、自分のユーザー設定またはチームのワークスペース設定として編集します。&lt;a href=&quot;https://code.visualstudio.com/updates/v1_93#_code-generation-instructions&quot;&gt;もっと詳しく知る&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;より関連性の高い提案を得るには、最近表示または編集したコーディング ファイルをインライン チャット コンテキストとして使用します。 VS Code の&lt;a href=&quot;//settings/github.copilot.chat.experimental.temporalContext.enabled&quot;&gt;&lt;code&gt;github.copilot.chat.experimental.temporalContext.enabled&lt;/code&gt;&lt;/a&gt;経由で有効にします。 &lt;a href=&quot;https://code.visualstudio.com/updates/v1_93#_use-recent-coding-files-as-inline-chat-context-experimental&quot;&gt;もっと詳しく知る&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; &lt;code&gt;/startDebugging&lt;/code&gt;スラッシュ コマンドを使用して起動構成を作成し、デバッグを開始します。 VS Code の&lt;a href=&quot;//settings/github.copilot.advanced.startDebugging.experimental.enabled&quot;&gt;&lt;code&gt;github.copilot.advanced.startDebugging.experimental.enabled&lt;/code&gt;&lt;/a&gt;経由で有効にします。&lt;a href=&quot;https://code.visualstudio.com/updates/v1_93#_start-debugging-from-chat-experimental&quot;&gt;もっと詳しく知る&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このリリースの機能の詳細と詳細については、 &lt;a href=&quot;https://code.visualstudio.com/updates/v1_93#_github-copilot&quot;&gt;VS Code の 8 月リリース (バージョン 1.93) の完全なリリース ノート&lt;/a&gt;を確認してください。&lt;/p&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-09-09-larger-context-window-improved-test-generation-and-more-in-vs-codes-copilot-chat&quot;&gt;「VS Code のコパイロット チャットのコンテキスト ウィンドウの拡大、テスト生成の改善、その他」&lt;/a&gt; first appeared on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79706</post-id></item><item><title>Microsoft Entra ID の GitHub Enterprise Cloud Team Sync に対する権限の低下</title><link>https://github.blog/changelog/2024-09-05-lower-permissions-for-github-enterprise-cloud-team-sync-for-microsoft-entra-id</link><dc:creator>Allison</dc:creator><pubDate>Fri, 06 Sep 2024 02:59:26 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-09-05-lower-permissions-for-github-enterprise-cloud-team-sync-for-microsoft-entra-id</guid><description>&lt;p&gt;Lower permissions for GitHub Enterprise Cloud Team Sync for Microsoft Entra ID&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-09-05-lower-permissions-for-github-enterprise-cloud-team-sync-for-microsoft-entra-id&quot;&gt;Lower permissions for GitHub Enterprise Cloud Team Sync for Microsoft Entra ID&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;新しい下位権限&lt;code&gt;GroupMember.Read.All&lt;/code&gt;で GitHub Enterprise Cloud &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-saml-single-sign-on-for-your-organization/managing-team-synchronization-for-your-organization&quot;&gt;Team Sync&lt;/a&gt; for Microsoft Entra ID を使用して、グループの状態を GitHub に同期できるようになりました。&lt;/p&gt;
&lt;p&gt;新しい権限は、データにアクセスして正しく機能するために必要な最小限の権限を提供します。新しいインストールでは新しい権限が要求されますが、既存のインストールは中断することなく動作し続けます。&lt;/p&gt;
&lt;p&gt;既存のインストールの権限を削減したい管理者は、アプリケーションを再インストールするか、 &lt;a href=&quot;https://docs.microsoft.com/en-us/graph/api/serviceprincipal-post-approleassignments?view=graph-rest-1.0&amp;tabs=http&quot;&gt;App Role Assignments API&lt;/a&gt;を使用して既存のサービスの権限を変更できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-saml-single-sign-on-for-your-organization/managing-team-synchronization-for-your-organization#enabling-team-synchronization-for-entra-id&quot;&gt;チームの同期について詳しくは、こちらをご覧ください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-09-05-lower-permissions-for-github-enterprise-cloud-team-sync-for-microsoft-entra-id&quot;&gt;Microsoft Entra ID の GitHub Enterprise Cloud Team Sync の権限を下げるという&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79691</post-id></item><item><title>非推奨の通知: dependabot が Bundler v1 のサポートを終了</title><link>https://github.blog/changelog/2024-09-05-deprecation-notice-dependabot-dropping-support-for-bundler-v1</link><dc:creator>Allison</dc:creator><pubDate>Thu, 05 Sep 2024 20:16:53 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-09-05-deprecation-notice-dependabot-dropping-support-for-bundler-v1</guid><description>&lt;p&gt;Deprecation notice: Dependabot dropping support for Bundler v1&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-09-05-deprecation-notice-dependabot-dropping-support-for-bundler-v1&quot;&gt;Deprecation notice: Dependabot dropping support for Bundler v1&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;2024 年 10 月 7 日の時点で、Dependabot はサポートが終了した Bundler バージョン 1 をサポートしなくなります。 Bundler バージョン 1 を使用し続ける場合、Dependabot が依存関係を更新するためのプル リクエストを作成しないリスクがあります。これが影響する場合は、Bundler のサポートされているリリースに更新することをお勧めします。 2024 年 9 月の時点で、サポートされている Bundler の最新バージョンは 2.5 です。サポートされているリリースの詳細については、 &lt;a href=&quot;https://github.com/rubygems/rubygems/blob/master/bundler/doc/POLICIES.md#compatibility-guidelines&quot;&gt;Bundler の公式サポート ポリシー&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; The post &lt;a href=&quot;https://github.blog/changelog/2024-09-05-deprecation-notice-dependabot-dropping-support-for-bundler-v1&quot;&gt;Deprecation Notice: dependabot Drops support for Bundler v1&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; 。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79689</post-id></item><item><title>プル リクエストのコミット ページ更新 (パブリック ベータ版)</title><link>https://github.blog/changelog/2024-09-05-pull-request-commits-page-refresh-public-beta</link><dc:creator>Allison</dc:creator><pubDate>Thu, 05 Sep 2024 14:53:39 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-09-05-pull-request-commits-page-refresh-public-beta</guid><description>&lt;p&gt;Pull request commits page refresh (public beta)&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-09-05-pull-request-commits-page-refresh-public-beta&quot;&gt;Pull request commits page refresh (public beta)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;プル リクエストのコミット ページが更新され、パフォーマンスが向上し、他のページとの一貫性が向上し、エクスペリエンスがよりアクセスしやすくなりました。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/8c19a9cd-d9e1-4ede-b22c-45994131ff22&quot; alt=&quot;PR のコミットのリストを表示する、更新された PR コミット ページのスクリーンショット&quot; /&gt;&lt;/p&gt;
&lt;p&gt;中断を最小限に抑えるために、いくつかの例外を除いて、従来のコミット ページの機能が維持されています。( &lt;code&gt;j&lt;/code&gt;と&lt;code&gt;k&lt;/code&gt;の代わりに) 矢印キーを使用してコミットのリストを移動できるようになり、視覚的に区別しやすくするためにフォーカス インジケーターが改善されました。&lt;/p&gt;
&lt;h3 id=&quot;opt-out&quot;&gt;身を引く&lt;a href=&quot;#opt-out&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Opt out&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;従来のコミット ページに戻すには、「新しいプル リクエスト コミット エクスペリエンス」機能プレビューを無効にします ( &lt;a href=&quot;https://docs.github.com/en/get-started/using-github/exploring-early-access-releases-with-feature-preview&quot;&gt;詳細&lt;/a&gt;)。&lt;/p&gt;
&lt;h3 id=&quot;feedback&quot;&gt;フィードバック&lt;a href=&quot;#feedback&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Feedback&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;フィードバックを提供したり、質問したり、既知の問題について調べたりするには、GitHub コミュニティの&lt;a href=&quot;https://gh.io/new-commits-page-feedback&quot;&gt;フィードバック ディスカッション&lt;/a&gt;にアクセスしてください。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2024-09-05-pull-request-commits-page-refresh-public-beta&quot;&gt;プル リクエストのコミット ページの更新 (パブリック ベータ) という&lt;/a&gt;記事は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79654</post-id></item><item><title>GitHub.com の Copilot Chat が GitHub Advanced Security アラートを状況に応じて認識するようになりました</title><link>https://github.blog/changelog/2024-09-05-copilot-chat-in-github-com-is-now-contextually-aware-of-github-advanced-security-alerts</link><dc:creator>Allison</dc:creator><pubDate>Thu, 05 Sep 2024 14:53:28 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-09-05-copilot-chat-in-github-com-is-now-contextually-aware-of-github-advanced-security-alerts</guid><description>&lt;p&gt;Copilot Chat in GitHub.com is now contextually aware of GitHub Advanced Security alerts&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-09-05-copilot-chat-in-github-com-is-now-contextually-aware-of-github-advanced-security-alerts&quot;&gt;Copilot Chat in GitHub.com is now contextually aware of GitHub Advanced Security alerts&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub.com の Copilot Chat を使用して GitHub 全体を検索し、コード スキャン、シークレット スキャン、Dependabot からの GitHub Advanced Security Alerts を見つけて詳細を確認できるようになりました。この変更により、プル リクエスト内のセキュリティ アラートをより深く理解し、シームレスに修正できるようになります。 &lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/2728.png&quot; alt=&quot;✨&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;次のような質問をして、自分で試してみてください。&lt;br /&gt;
 – このアラートを修正するにはどうすればよいですか?&lt;br /&gt;
 – この PR にはいくつのアラートがありますか?&lt;br /&gt;
 – このコード スキャン アラートはどのクラスを参照していますか?&lt;br /&gt;
 – このDependabotアラートの影響を受けるライブラリは何ですか?&lt;br /&gt;
 – このリポジトリにはどのようなセキュリティ警告がありますか?&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/copilot/using-github-copilot/asking-github-copilot-questions-in-githubcom&quot;&gt;GitHub.com の Copilot Chat で質問する方法、&lt;/a&gt;または&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/get-started/learning-about-github/about-github-advanced-security&quot;&gt;GitHub Advanced Security について&lt;/a&gt;詳しく説明します。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-09-05-copilot-chat-in-github-com-is-now-contextually-aware-of-github-advanced-security-alerts&quot;&gt;GitHub.com の Copilot Chat は、GitHub Advanced Security アラートを文脈的に認識するようになったという&lt;/a&gt;投稿が、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79653</post-id></item><item><title>エンタープライズ監査ログを 2 つのエンドポイントにストリーミング可能 (プライベート ベータ版)</title><link>https://github.blog/changelog/2024-09-03-enterprise-audit-logs-can-be-streamed-to-two-endpoints-private-beta</link><dc:creator>Allison</dc:creator><pubDate>Tue, 03 Sep 2024 20:52:58 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-09-03-enterprise-audit-logs-can-be-streamed-to-two-endpoints-private-beta</guid><description>&lt;p&gt;Enterprise audit logs can be streamed to two endpoints [Private Beta]&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-09-03-enterprise-audit-logs-can-be-streamed-to-two-endpoints-private-beta&quot;&gt;Enterprise audit logs can be streamed to two endpoints (private beta)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.blog/wp-content/uploads/2024/09/363289924-72fe3ca2-9c9d-4c88-a13a-37aaa5facb81.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;エンタープライズの監査ログを GitHub で&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/streaming-the-audit-log-for-your-enterprise#setting-up-audit-log-streaming&quot;&gt;サポートされている 2 つのストリーミング エンドポイント&lt;/a&gt;にストリーミングできるようになりました。&lt;/p&gt;
&lt;p&gt;このアップデートにより、Enterprise 所有者は、ログの保存と分析に選択したツールを簡単に使用できるようになります。企業を管理する場合、コンプライアンスを確保し、強力なセキュリティ体制を維持するために複数のツールを採用する必要がある場合があります。これには、企業のセキュリティとコンプライアンスの要件をサポートするという目的を達成するために、さまざまなチームが関与し、さまざまなレベルのアクセスを必要とし、さまざまなテクノロジーを採用する可能性があります。監査ログを 2 つのエンドポイントにストリーミングすることで、複雑なログ ルーティング アーキテクチャを必要とせずに、複数のログ ストレージおよび分析ツールを使用したり、遅延の増加に対処したりできます。&lt;/p&gt;
&lt;p&gt;サインアップにご興味がありますか?この機能をエンタープライズで有効にするには、GitHub アカウント マネージャーに連絡するか、&lt;a href=&quot;https://github.com/enterprise/contact&quot;&gt;営業チームに連絡してください&lt;/a&gt;。有効にすると、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/streaming-the-audit-log-for-your-enterprise#setting-up-audit-log-streaming&quot;&gt;監査ログ ストリーミングの設定に関する&lt;/a&gt;ドキュメントに従って、2 番目のストリームを設定できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-09-03-enterprise-audit-logs-can-be-streamed-to-two-endpoints-private-beta&quot;&gt;エンタープライズ監査後のログは 2 つのエンドポイントにストリーミングできます (プライベート ベータ版)&lt;/a&gt; first appeared on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79644</post-id></item><item><title>GitHub Actions: arm64 Linux および Windows ランナーが一般提供になりました</title><link>https://github.blog/changelog/2024-09-03-github-actions-arm64-linux-and-windows-runners-are-now-generally-available</link><dc:creator>Allison</dc:creator><pubDate>Tue, 03 Sep 2024 19:15:15 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-09-03-github-actions-arm64-linux-and-windows-runners-are-now-generally-available</guid><description>&lt;p&gt;GitHub Actions: arm64 Linux and Windows runners are now generally available&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-09-03-github-actions-arm64-linux-and-windows-runners-are-now-generally-available&quot;&gt;GitHub Actions: arm64 Linux and Windows runners are now generally available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;Arm64 Linux および Windows GitHub でホストされるアクション用ランナーが一般提供されるようになりました。ホストされたランナーのスイートに新たに追加されたこの機能により、すべてのアクション ジョブのパワー、パフォーマンス、持続可能性が向上します。 Arm64 ランナーは、Team および Enterprise Cloud プランのお客様が利用できます。&lt;/p&gt;
&lt;p&gt; 「私たちは、AWS Graviton インスタンス上のカスタムの自己管理セットアップから GitHub arm64 ランナーに切り替えました。 GitHub ランナーに切り替えることで、月額料金が 75% 以上節約され、管理オーバーヘッドがすべて削除されました。これは、シード段階のスタートアップであることを考えると特に重要です。 ARM ランナーでは、ビルド時間が x86 ランナーでの 30 分以上から ARM での約 4 分へと大幅に短縮されました。これにより、プル リクエストの反復処理がはるかに速くなり、同じ GitHub Actions ワークフローの一部として ARM と x86 のビルド プロセスを並行して実行できるようになり、開発チームがコードを本番環境に移行するプロセスが簡素化されました。」 -デイビッド・ミットン氏、アークジェット創設者&lt;/p&gt;
&lt;p&gt;arm64 ランナーの利点と開始方法について詳しくは、 &lt;a href=&quot;https://github.blog/news-insights/product-news/arm64-on-github-actions-powering-faster-more-efficient-build-systems/&quot;&gt;GitHub ブログ&lt;/a&gt;にアクセスしてください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-09-03-github-actions-arm64-linux-and-windows-runners-are-now-generally-available&quot;&gt;GitHub アクション: arm64 Linux および Windows ランナーが一般提供されるようになった&lt;/a&gt;という投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79643</post-id></item><item><title>リポジトリ権限をカスタム組織ロールに追加する</title><link>https://github.blog/changelog/2024-08-29-add-repository-permissions-to-custom-organization-roles</link><dc:creator>Allison</dc:creator><pubDate>Thu, 29 Aug 2024 21:55:39 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-29-add-repository-permissions-to-custom-organization-roles</guid><description>&lt;p&gt;Add repository permissions to custom organization roles&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-29-add-repository-permissions-to-custom-organization-roles&quot;&gt;Add repository permissions to custom organization roles&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;カスタム組織ロールにリポジトリ権限を追加して、組織内のすべてのリポジトリに特定のレベルのアクセス権を付与できるようになりました。&lt;/p&gt;
&lt;p&gt;これは、GitHub の事前定義された組織ロールにおける&lt;a href=&quot;https://github.blog/changelog/2024-07-10-pre-defined-organization-roles-that-grant-access-to-all-repositories/&quot;&gt;組織全体の権限付与&lt;/a&gt;のリリースに基づいています。これらのアップデートにより、管理者は大規模なチームや組織全体にアクセス管理を簡単に拡張できるようになります。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/d0fa1490-df1c-46e3-a88d-368216306f40&quot; alt=&quot;新しいリポジトリ権限を使用してカスタム組織ロールを作成します。このロールは書き込み基本ロールに基づいており、課題の削除、単独マージの要求、リポジトリのプロパティの更新の 3 つの権限を追加します。&quot; width=&quot;700&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;using-repository-permissions-in-organization-roles&quot;&gt;組織ロールでのリポジトリ権限の使用&lt;a href=&quot;#using-repository-permissions-in-organization-roles&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Using repository permissions in organization roles&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;組織のロールには、リポジトリのロールと権限 (つまり&lt;code&gt;close_issue&lt;/code&gt; ) を含めるために、組織の権限 (つまり&lt;code&gt;read_org_audit_log&lt;/code&gt; ) が含まれている必要はありません。これにより、 &lt;code&gt;Write&lt;/code&gt;や&lt;code&gt;Triage&lt;/code&gt;などの事前定義された組織ベース ロールの独自バージョンを作成し、それらのロールを組織内の全員に割り当てて、要件に一致するアクセスの標準設定を確保できます。&lt;/p&gt;
&lt;p&gt;一般的な使用例は、オンコール ローテーション用に昇格されたロールを作成することです。たとえば、 &lt;code&gt;Write&lt;/code&gt;に基づくロールに「マージ キューをジャンプ」および「単独マージをリクエスト」リポジトリ権限が追加されているため、オンコール チームは問題をすぐに修正できます。 API を使用すると、現在のオンコールへのこのロールの割り当てを自動化し、緊急事態またはシフトベースの権限として昇格されたアクセス許可を付与できます。&lt;/p&gt;
&lt;h2 id=&quot;managing-repository-access&quot;&gt;リポジトリへのアクセスの管理&lt;a href=&quot;#managing-repository-access&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Managing repository access&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;組織ロール作成用の UI と&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/rest/orgs/organization-roles?apiVersion=2022-11-28#create-a-custom-organization-role&quot;&gt;REST API の&lt;/a&gt;両方が、リポジトリ権限をサポートするように更新されました。&lt;/p&gt;
&lt;p&gt;さらに、リポジトリ アクセス管理ページを更新して、リポジトリ所有者によってユーザーまたはチームに付与されたアクセスと組織所有者によって組織全体に付与されたアクセスを区別できるようにしました。これは、ユーザーが特定のリポジトリにアクセスする方法を説明するのに役立ちます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/260aa2a5-c50e-4b57-9ebd-f89f0b131221&quot; alt=&quot;新しいリポジトリ コラボレータ ビューには、組織ベースのアクセスが表示されます。&quot; width=&quot;700&quot; /&gt;&lt;/p&gt;
&lt;p&gt;詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-organization-roles&quot;&gt;GitHub のドキュメント&lt;/a&gt;と、ロールの作成と割り当てを自動化するための&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/rest/orgs/organization-roles?apiVersion=2022-11-28#create-a-custom-organization-role&quot;&gt;REST API メソッド&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-08-29-add-repository-permissions-to-custom-organization-roles&quot;&gt;「カスタム組織ロールにリポジトリ権限を追加する」という&lt;/a&gt;投稿は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79615</post-id></item><item><title>Unkey は GitHub シークレット スキャン パートナーになりました</title><link>https://github.blog/changelog/2024-08-29-unkey-is-now-a-github-secret-scanning-partner</link><dc:creator>Allison</dc:creator><pubDate>Thu, 29 Aug 2024 21:06:06 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-29-unkey-is-now-a-github-secret-scanning-partner</guid><description>&lt;p&gt;Unkey is now a GitHub secret scanning partner&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-29-unkey-is-now-a-github-secret-scanning-partner&quot;&gt;Unkey is now a GitHub secret scanning partner&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://www.unkey.com/&quot;&gt;Unkey&lt;/a&gt;ユーザーの場合、GitHub シークレット スキャンで Unkey トークンがスキャンされ、パブリック リポジトリのセキュリティが確保されるようになりました。 Unkey のルート API キーを使用すると、ユーザーは API、API キー、グローバル レート制限、アクセス制御などの Unkey リソースを作成および管理できます。 GitHub は、公開リポジトリで見つかった公開されたトークンを Unkey に転送し、Unkey は侵害されたトークンを取り消し、影響を受けるユーザーに通知します。 &lt;a href=&quot;https://unkey.dev/docs/security/github-scanning&quot;&gt;Unkey トークンの詳細については、こちらをご覧ください&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt; GitHub シークレット スキャンは、トークンや秘密キーなどの既知のタイプのシークレットをリポジトリで検索することでユーザーを保護します。これらの秘密を特定してフラグを立てることで、スキャンはデータ漏洩や不正行為の防止に役立ちます。&lt;/p&gt;
&lt;p&gt; GitHub Advanced Security の顧客は、プライベート リポジトリ内の Unkey トークンをスキャンしてブロックすることもできます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/github/administering-a-repository/about-secret-scanning&quot;&gt;シークレットスキャンについて詳しく見る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/developers/overview/secret-scanning/&quot;&gt;シークレット スキャンに関して GitHub と提携する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2024-08-29-unkey-is-now-a-github-secret-scanning-partner&quot;&gt;Unkey は GitHub シークレット スキャン パートナーになりました&lt;/a&gt;最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79614</post-id></item><item><title>シークレットスキャンによるバイパスのためのきめ細かな権限</title><link>https://github.blog/changelog/2024-08-29-secret-scanning-fine-grained-permissions-for-bypasses</link><dc:creator>Allison</dc:creator><pubDate>Thu, 29 Aug 2024 20:46:47 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-08-29-secret-scanning-fine-grained-permissions-for-bypasses</guid><description>&lt;p&gt;Secret scanning fine-grained permissions for bypasses&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-08-29-secret-scanning-fine-grained-permissions-for-bypasses&quot;&gt;Secret scanning fine-grained permissions for bypasses&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;組織内のプッシュ保護バイパス要求を確認および管理するためのきめ細かい権限を付与できるようになりました。&lt;/p&gt;
&lt;p&gt;この権限を持つユーザーは誰でも、バイパス要求のリストを承認および管理できます。 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/using-advanced-secret-scanning-and-push-protection-features/delegated-bypass-for-push-protection/enabling-delegated-bypass-for-push-protection#configuring-delegated-bypass-for-an-organization&quot;&gt;コードのセキュリティと分析の設定&lt;/a&gt;の「バイパス リスト」にロールまたはチームを追加することで、これらの権限を付与することもできます。&lt;/p&gt;
&lt;p&gt;来月、GitHub はこの変更に伴い、カスタム ロールのサポートをバイパス リストから削除する予定です。混乱を避けるために、以前にバイパスレビュー担当者として追加された既存のカスタムロールには、バイパスリクエストをレビューおよび管理するためのきめ細かい権限が付与されます。&lt;/p&gt;
&lt;p&gt;シークレット スキャン プッシュ保護の&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/using-advanced-secret-scanning-and-push-protection-features/delegated-bypass-for-push-protection/about-delegated-bypass-for-push-protection&quot;&gt;委任バイパス&lt;/a&gt;により、組織やリポジトリは、シークレットを含むコミットをプッシュできるユーザーを制御できます。開発者は、ブロックされたシークレットをプッシュするために、承認されたユーザーに承認を要求できます。&lt;/p&gt;
&lt;h4 id=&quot;learn-more&quot;&gt;もっと詳しく知る&lt;a href=&quot;#learn-more&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Learn more&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンを使用してリポジトリを保護する&lt;/a&gt;方法について詳しくは、こちらをご覧ください。 &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;GitHub コミュニティのディスカッション&lt;/a&gt;に参加するか、 &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSeQ8KzKQDvh7AD2vuTlqsPWkSo-IHh5XJUXdE6YmmLe8F98Kg/viewform?usp=sf_link&quot;&gt;60 分間のフィードバック セッション&lt;/a&gt;にサインアップして、ご意見をお聞かせください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-08-29-secret-scanning-fine-grained-permissions-for-bypasses&quot;&gt;バイパスのためのきめ細かなアクセス許可のシークレット スキャン&lt;/a&gt;という投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">79613</post-id></item></channel></rss>