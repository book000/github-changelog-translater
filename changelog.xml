<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Fri, 14 Jul 2023 18:36:53 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.2.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>GitHub Copilot 7 月 14 日の更新</title><link>https://github.blog/changelog/2023-07-14-github-copilot-july-14th-update</link><dc:creator>Lee Reilly</dc:creator><pubDate>Fri, 14 Jul 2023 18:23:46 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-07-14-auto-draft</guid><description>We continue our momentum with new capabilities for administrators and many improvements to Chat in our Visual Studio Code and Visual Studio extensions. 🤖 Automate GitHub Copilot access for your organization with User Management API (beta) Note: This API is in Beta and is subject to change based on feedback. Since the availability of GitHub [&amp;#8230;]</description><content:encoded>&lt;p&gt;私たちは、管理者向けの新機能と、Visual Studio Code および Visual Studio 拡張機能のチャットに対する多くの改善によって勢いを続けます。 &lt;/p&gt;
&lt;h2 id=&quot;%f0%9f%a4%96-automate-github-copilot-access-for-your-organization-with-user-management-api-beta&quot;&gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f916.png&quot; alt=&quot;🤖&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;ユーザー管理 API (ベータ版) を使用して組織の GitHub Copilot アクセスを自動化する&lt;a href=&quot;#%f0%9f%a4%96-automate-github-copilot-access-for-your-organization-with-user-management-api-beta&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x1f916; Automate GitHub Copilot access for your organization with User Management API (beta)&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;注:&lt;/strong&gt;この API はベータ版であり、フィードバックに基づいて変更される可能性があります。&lt;/p&gt;
&lt;p&gt; GitHub Copilot for Business が利用可能になって以来、特に権限管理に Teams を活用する必要がある場合、UI を介して大規模なユーザーに GitHub Copilot ライセンスを割り当てるのは面倒で時間がかかる可能性があるというフィードバックを聞いてきました。さらに、古いユーザーのリストを定期的に収集してアクセスを取り消す方法がまだ存在しないため、管理者はユーザーの最終アクティビティ日を 1 ページずつ確認し、アクセスを個別に削除することに貴重な時間を費やす必要があります。&lt;/p&gt;
&lt;p&gt; Copilot for Business の新しいユーザー管理 API を使用すると、管理者は、Copilot が有効なすべての組織メンバーを詳細とともにリストし、個人やチームのアクセス権を追加/削除できます。これにより、企業のプロセスとニーズに合わせて大規模にアクセスを自動化できるようになります。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/rest/copilot/copilot-for-business&quot;&gt;ドキュメント&lt;/a&gt;をチェックして今すぐ試して、&lt;a href=&quot;https://github.com/orgs/community/discussions/60780&quot;&gt;ディスカッション投稿&lt;/a&gt;にフィードバックを残してください。 &lt;/p&gt;
&lt;h2 id=&quot;%e2%9c%8d%ef%b8%8f-new-create-commands-in-visual-studio-code-1-80&quot;&gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/270d.png&quot; alt=&quot;✍&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt; Visual Studio Code 1.80 の新しい Create コマンド&lt;a href=&quot;#%e2%9c%8d%ef%b8%8f-new-create-commands-in-visual-studio-code-1-80&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x270d; New Create commands in Visual Studio Code 1.80&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;プロジェクトやノートブックの作成、ワークスペース内のテキストの検索を容易にするために、チャット ビューにプレビュー専用のスラッシュ コマンドが導入されました。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;: チャット ビュー、インライン チャット、およびスラッシュ コマンド ( &lt;code&gt;/search&lt;/code&gt; 、 &lt;code&gt;/createWorkspace&lt;/code&gt;など) にアクセスするには、 &lt;a href=&quot;https://github.com/github-copilot/chat_waitlist_signup/join&quot;&gt;GitHub Copilot チャット待機リスト&lt;/a&gt;にサインアップし、 &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&quot; rel=&quot;nofollow&quot;&gt;GitHub Copilot&lt;/a&gt;拡張機能の&lt;strong&gt;プレリリース&lt;/strong&gt;バージョンをインストールします。&lt;/p&gt;
&lt;h3 id=&quot;create-workspaces&quot;&gt;ワークスペースの作成&lt;a href=&quot;#create-workspaces&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Create workspaces&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;code&gt;/createWorkspace&lt;/code&gt;スラッシュ コマンドを使用して、Copilot に一般的なプロジェクト タイプのワークスペースを作成するように依頼できます。 Copilot は最初にリクエストのディレクトリ構造を生成します。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; loading=&quot;lazy&quot; class=&quot;aligncenter size-full wp-image-73159 width-fit&quot; src=&quot;https://github.blog/wp-content/uploads/2023/07/253332280-59ebe378-4ac3-4d52-b532-b72f98b6d675.png?resize=1024%2C678&quot; alt=&quot;ワークスペースの作成&quot; width=&quot;1024&quot; height=&quot;678&quot; srcset=&quot;https://github.blog/wp-content/uploads/2023/07/253332280-59ebe378-4ac3-4d52-b532-b72f98b6d675.png?resize=1024%2C678?w=2040 2040w, https://github.blog/wp-content/uploads/2023/07/253332280-59ebe378-4ac3-4d52-b532-b72f98b6d675.png?resize=1024%2C678?w=300 300w, https://github.blog/wp-content/uploads/2023/07/253332280-59ebe378-4ac3-4d52-b532-b72f98b6d675.png?resize=1024%2C678?w=768 768w, https://github.blog/wp-content/uploads/2023/07/253332280-59ebe378-4ac3-4d52-b532-b72f98b6d675.png?resize=1024%2C678?w=1024 1024w, https://github.blog/wp-content/uploads/2023/07/253332280-59ebe378-4ac3-4d52-b532-b72f98b6d675.png?resize=1024%2C678?w=1536 1536w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;次に、 &lt;strong&gt;「ワークスペースの作成」&lt;/strong&gt;ボタンを使用して、プロジェクト ディレクトリを作成し、新しいワークスペースとして開くことができます。&lt;/p&gt;
&lt;h3 id=&quot;create-notebooks&quot;&gt;ノートブックを作成する&lt;a href=&quot;#create-notebooks&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Create notebooks&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;code&gt;/createNotebook&lt;/code&gt;スラッシュ コマンドを使用して、Copilot に要件に基づいて Jupyter ノートブックを作成するように依頼できます。 Copilot は、ニーズに基づいてノートブックのアウトラインを生成します。 &lt;/p&gt;
&lt;div style=&quot;width: 2040px;&quot; class=&quot;wp-video&quot;&gt;&lt;!--[if lt IE 9]&gt;&lt;script&gt;document.createElement(&apos;video&apos;);&lt;/script&gt;&lt;![endif]--&gt;
&lt;video class=&quot;wp-video-shortcode js-viewport-aware-video events-none&quot; id=&quot;video-73156-1&quot; width=&quot;2040&quot; height=&quot;1532&quot; loop=&quot;1&quot; autoplay=&quot;1&quot; preload=&quot;metadata&quot; playsinline=&quot;1&quot; muted=&quot;1&quot;&gt;&lt;source type=&quot;video/mp4&quot; src=&quot;https://github.blog/wp-content/uploads/2023/07/253334560-5bb79b3e-fba2-4b3b-a3de-91acd8227b5e.mp4?_=1&quot; /&gt; &lt;a href=&quot;https://github.blog/wp-content/uploads/2023/07/253334560-5bb79b3e-fba2-4b3b-a3de-91acd8227b5e.mp4&quot;&gt;https://github.blog/wp-content/uploads/2023/07/253334560-5bb79b3e-fba2-4b3b-a3de-91acd8227b5e.mp4&lt;/a&gt;&lt;/video&gt;&lt;/div&gt;
&lt;p&gt;次に、 &lt;strong&gt;[ノートブックの作成]&lt;/strong&gt;コマンドを使用してノートブックを作成し、提案されたアウトラインに基づいてコード セルに入力します。&lt;/p&gt;
&lt;h2 id=&quot;visual-studio-extension-improvements&quot;&gt; Visual Studio 拡張機能の改善&lt;a href=&quot;#visual-studio-extension-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Visual Studio extension improvements&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;他のプログラミング言語のサポートの向上&lt;/strong&gt;– XAML、Blazor、C++ などの質問の結果の品質が向上しました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;チャット履歴の保存と復元&lt;/strong&gt;– これにより、ユーザーが Visual Studio を閉じるたびにディスカッション/チャットを失うことがなくなります。現在は永続化され、復元されています。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;チャット履歴のクリア&lt;/strong&gt;- チャット履歴をクリアする機能を追加しました。これにより、Copilot によるプロンプトと回答で以前の会話のコンテキストが考慮されなくなります。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;複数行のプロンプト ボックス&lt;/strong&gt;– ユーザーがより詳細な質問を簡単にできるように、プロンプト入力を改善しました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;チャット ツール ウィンドウにコンテンツを表示するためのストリーミング サポート&lt;/strong&gt;– すべてのチャット エクスペリエンスにストリーミング サポートを追加しました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;テスト生成のための特定の挿入&lt;/strong&gt;– テスト生成では、別のファイルまたはプロジェクトへの挿入が必要になる場合があります。チャット ウィンドウのアクション ボタンによる特別な処理をサポートするようになりました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生活の質の更新&lt;/strong&gt;- チャット エクスペリエンス全体でのコンテキスト、UI の更新、エラー メッセージの改善。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;context-aware-actions-shown-based-on-embeddings&quot;&gt;埋め込みに基づいて表示されるコンテキスト認識アクション&lt;a href=&quot;#context-aware-actions-shown-based-on-embeddings&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Context-aware actions shown based on embeddings&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ドキュメント、説明、テストの生成など、コンテキストを認識したアクションを導入しています。これらのアクションは、既存のインライン コンテキストを取得し、特定のインテントを作成して、それらのタスクに最適で魔法のようなエクスペリエンスを提供します。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; loading=&quot;lazy&quot; class=&quot;aligncenter size-full wp-image-73158 width-fit&quot; src=&quot;https://github.blog/wp-content/uploads/2023/07/253332288-eb3f9a12-f8cf-41f5-92dc-025b483cd212.png?resize=1024%2C678&quot; alt=&quot;埋め込みに基づいて表示されるコンテキスト認識アクション&quot; width=&quot;1024&quot; height=&quot;678&quot; srcset=&quot;https://github.blog/wp-content/uploads/2023/07/253332288-eb3f9a12-f8cf-41f5-92dc-025b483cd212.png?resize=1024%2C678?w=2040 2040w, https://github.blog/wp-content/uploads/2023/07/253332288-eb3f9a12-f8cf-41f5-92dc-025b483cd212.png?resize=1024%2C678?w=300 300w, https://github.blog/wp-content/uploads/2023/07/253332288-eb3f9a12-f8cf-41f5-92dc-025b483cd212.png?resize=1024%2C678?w=768 768w, https://github.blog/wp-content/uploads/2023/07/253332288-eb3f9a12-f8cf-41f5-92dc-025b483cd212.png?resize=1024%2C678?w=1024 1024w, https://github.blog/wp-content/uploads/2023/07/253332288-eb3f9a12-f8cf-41f5-92dc-025b483cd212.png?resize=1024%2C678?w=1536 1536w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;analyze-method-with-github-copilot-in-cpu-usage-tool&quot;&gt; CPU使用率ツールのGitHub Copilotによる分析方法&lt;a href=&quot;#analyze-method-with-github-copilot-in-cpu-usage-tool&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Analyze method with GitHub Copilot in CPU usage tool&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; Copilot Chat がトリガーされると、問題が発生した理由が説明され、修正が提案されます。これらは診断エクスペリエンスに表示されます。これらには、Visual Studio のプレビュー バージョンを使用する必要があります。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; loading=&quot;lazy&quot; class=&quot;aligncenter size-full wp-image-73157 width-fit&quot; src=&quot;https://github.blog/wp-content/uploads/2023/07/253332291-c1c55f4c-ae6d-4ba8-842f-929832955283.png?resize=1024%2C678&quot; alt=&quot;CPU使用率ツールのGitHub Copilotによる分析方法&quot; width=&quot;1024&quot; height=&quot;678&quot; srcset=&quot;https://github.blog/wp-content/uploads/2023/07/253332291-c1c55f4c-ae6d-4ba8-842f-929832955283.png?resize=1024%2C678?w=2040 2040w, https://github.blog/wp-content/uploads/2023/07/253332291-c1c55f4c-ae6d-4ba8-842f-929832955283.png?resize=1024%2C678?w=300 300w, https://github.blog/wp-content/uploads/2023/07/253332291-c1c55f4c-ae6d-4ba8-842f-929832955283.png?resize=1024%2C678?w=768 768w, https://github.blog/wp-content/uploads/2023/07/253332291-c1c55f4c-ae6d-4ba8-842f-929832955283.png?resize=1024%2C678?w=1024 1024w, https://github.blog/wp-content/uploads/2023/07/253332291-c1c55f4c-ae6d-4ba8-842f-929832955283.png?resize=1024%2C678?w=1536 1536w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;p&gt; Copilot についてさらに詳しく知り、そのすべての機能を最大限に活用するには、 &lt;a href=&quot;https://www.youtube.com/playlist?list=PL0lo9MOBetEHEHi9h0k_lPn0XZdEeYZDS&quot; rel=&quot;nofollow&quot;&gt;YouTube Copilot プレイリスト&lt;/a&gt;にアクセスしてください。サインアップするには、 &lt;a href=&quot;https://github.com/features/copilot&quot;&gt;Copilot の機能&lt;/a&gt;ページをご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73156</post-id></item><item><title>コードスペースのポート転送ドメイン名の更新</title><link>https://github.blog/changelog/2023-07-14-codespaces-port-forwarding-domain-name-updates</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 14 Jul 2023 16:34:31 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-07-14-codespaces-port-forwarding-domain-name-updates</guid><description>Codespaces Port Forwarding Domain Name Updates</description><content:encoded>&lt;h1 id=&quot;codespaces-is-updating-the-domain-used-for-forwarded-ports&quot; id=&quot;codespaces-is-updating-the-domain-used-for-forwarded-ports&quot; &gt;コードスペースは、転送ポートに使用されるドメインを更新しています&lt;a href=&quot;#codespaces-is-updating-the-domain-used-for-forwarded-ports&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Codespaces is updating the domain used for forwarded ports&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt; Codespaces は 8 月から、ユーザーのセキュリティ、信頼性、パフォーマンスを向上させるために Web クライアントのポート転送を更新します。この更新の一環として、転送ポートの URL が&lt;code&gt;https://*.preview.app.github.dev&lt;/code&gt;から&lt;code&gt;https://*.app.github.dev&lt;/code&gt;に変更されます。&lt;/p&gt;
&lt;p&gt;この変更に備えるには、中断を避けるために、7 月 31 日までに、コード内でハードコーディングされた&lt;code&gt;preview.app.github.dev&lt;/code&gt;への参照を&lt;code&gt;GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN&lt;/code&gt;環境変数に置き換えてください。環境変数の値は、移行が完了すると、 &lt;code&gt;preview.app.github.dev&lt;/code&gt;から&lt;code&gt;app.github.dev&lt;/code&gt;に更新されます。環境変数の詳細については&lt;a href=&quot;https://docs.github.com/en/codespaces/developing-in-codespaces/default-environment-variables-for-your-codespace&quot;&gt;、こちらを&lt;/a&gt;ご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73155</post-id></item><item><title>シークレット スキャンは、問題で過去に漏洩した新しいトークン タイプを検出するようになりました</title><link>https://github.blog/changelog/2023-07-14-secret-scanning-now-detects-new-token-types-leaked-historically-in-issues</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 14 Jul 2023 13:18:30 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-07-14-secret-scanning-now-detects-new-token-types-leaked-historically-in-issues</guid><description>Secret scanning now detects new token types leaked historically in issues</description><content:encoded>&lt;p&gt;新しいトークン タイプがシークレット スキャンに追加されると、シークレット スキャンを使用する GitHub Advanced Security の顧客は、UI または&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/rest/secret-scanning?apiVersion=2022-11-28#about-the-secret-scanning-api&quot;&gt;REST API&lt;/a&gt;内の課題のタイトル、説明、またはコメントで過去に公開された一致するシークレットを表示できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャンを使用してリポジトリを保護する方法を学びます&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73140</post-id></item><item><title>GitHub の問題とプロジェクト – 7 月 13 日の更新</title><link>https://github.blog/changelog/2023-07-13-github-issues-projects-july-13th-update</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 13 Jul 2023 21:30:32 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-07-13-github-issues-projects-july-13th-update</guid><description>GitHub Issues &amp; Projects - July 13th update</description><content:encoded>&lt;p&gt;本日の変更ログでは、並べ替えの改善、プロジェクトから新しい課題を作成するときにテンプレートまたはフォームを選択する機能、およびサイド パネルから単一の選択フィールドに新しいオプションを追加する機能が提供されます。 &lt;/p&gt;
&lt;h2 id=&quot;file_cabinet-improvements-to-sorting-fields&quot; id=&quot;file_cabinet-improvements-to-sorting-fields&quot; &gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f5c4.png?v8&quot; alias=&quot;file_cabinet&quot;&gt; 🗄&lt;/g-emoji&gt;並べ替えフィールドの改善&lt;a href=&quot;#file_cabinet-improvements-to-sorting-fields&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f5c4.png?v8&quot; alias=&quot;file_cabinet&quot;&gt;🗄&lt;/a&gt;&lt;/g-emoji&gt; &lt;a href=&quot;#file_cabinet-improvements-to-sorting-fields&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f5c4.png?v8&quot; alias=&quot;file_cabinet&quot;&gt;並べ替えフィールドの改善&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; 2 つの異なるフィールドを使用してビュー内の項目を並べ替えられるようになりました。表示メニューで&lt;code&gt;Sort by&lt;/code&gt;を選択し、プライマリ ソート フィールドを選択してから、 &lt;kbd&gt;Alt&lt;/kbd&gt; (MacOS の場合は&lt;kbd&gt;Option&lt;/kbd&gt; ) を押したままにして、セカンダリ ソート フィールドを選択します。 &lt;/p&gt;

&lt;h2 id=&quot;heavy_plus_sign-accessing-issue-templates-in-projects&quot; id=&quot;heavy_plus_sign-accessing-issue-templates-in-projects&quot; &gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2795.png?v8&quot; alias=&quot;heavy_plus_sign&quot;&gt; ➕&lt;/g-emoji&gt;プロジェクトで課題テンプレートにアクセスする&lt;a href=&quot;#heavy_plus_sign-accessing-issue-templates-in-projects&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2795.png?v8&quot; alias=&quot;heavy_plus_sign&quot;&gt;➕&lt;/a&gt;&lt;/g-emoji&gt; &lt;a href=&quot;#heavy_plus_sign-accessing-issue-templates-in-projects&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2795.png?v8&quot; alias=&quot;heavy_plus_sign&quot;&gt;プロジェクトで課題テンプレートにアクセスする&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;プロジェクトから直接新しい課題を作成する場合、適用する課題&lt;a href=&quot;https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/about-issue-and-pull-request-templates&quot;&gt;テンプレート&lt;/a&gt;または&lt;a href=&quot;https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/syntax-for-issue-forms&quot;&gt;フォーム&lt;/a&gt;を選択できるようになりました。&lt;/p&gt;
&lt;p&gt;プロジェクトオムニバーの&lt;code&gt;+&lt;/code&gt;ボタンを使用し、 &lt;code&gt;Create new issue&lt;/code&gt;を選択するだけで開始できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/98360703/85eec860-1477-4207-962d-897c2f84e86e&quot; alt=&quot;画像は、さまざまな問題テンプレートとフォームの多数のオプションを示しています&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;arrow_up_down-adding-a-new-single-select-field-option-from-the-side-panel&quot; id=&quot;arrow_up_down-adding-a-new-single-select-field-option-from-the-side-panel&quot; &gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2195.png?v8&quot; alias=&quot;arrow_up_down&quot;&gt; ↕&lt;/g-emoji&gt;サイドパネルから新しい単一選択フィールドオプションを追加&lt;a href=&quot;#arrow_up_down-adding-a-new-single-select-field-option-from-the-side-panel&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2195.png?v8&quot; alias=&quot;arrow_up_down&quot;&gt;↕&lt;/a&gt;&lt;/g-emoji&gt; &lt;a href=&quot;#arrow_up_down-adding-a-new-single-select-field-option-from-the-side-panel&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2195.png?v8&quot; alias=&quot;arrow_up_down&quot;&gt;サイドパネルから新しい単一選択フィールドオプションを追加する&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;サイド パネルを更新し、単一選択フィールドを編集するときに新しいオプションを追加できるようにしました。入力を開始すると、テキストが既存のオプションと一致しない場合は、新しいオプションを追加するように求められます。 &lt;/p&gt;

&lt;h2 id=&quot;sparkles-bug-fixes-and-improvements&quot; id=&quot;sparkles-bug-fixes-and-improvements&quot; &gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt; ✨&lt;/g-emoji&gt;バグ修正と改善&lt;a href=&quot;#sparkles-bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt;✨&lt;/a&gt;&lt;/g-emoji&gt; &lt;a href=&quot;#sparkles-bug-fixes-and-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt;バグ修正と改善&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;アイテムをロードマップ レイアウトの折りたたまれたグループにドラッグできるようになりました&lt;/li&gt;
&lt;li&gt;空のセルをテーブル レイアウトにコピーして貼り付けることができるようになりました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Export view data&lt;/code&gt;問題とプル リクエストの URL が含まれるようになりました&lt;/li&gt;
&lt;li&gt;ブラウザのタブのタイトルに絵文字が表示されるようになりました&lt;/li&gt;
&lt;li&gt;プロジェクト外で&lt;code&gt;Assignee&lt;/code&gt;情報をコピー＆ペーストできないバグを修正しました&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Tab&lt;/kbd&gt;を使用してボード アイテムの&lt;code&gt;Assignee&lt;/code&gt;値を移動できないバグを修正しました&lt;/li&gt;
&lt;li&gt;移行完了後、 &lt;code&gt;Your classic project&lt;/code&gt;リンクに有効な URL が追加されました&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/features/issues&quot;&gt;GitHub Issues&lt;/a&gt;でプロジェクト計画に GitHub を使用する方法を確認し、&lt;a href=&quot;https://github.com/orgs/github/projects/4247/views/7&quot;&gt;ロードマップ&lt;/a&gt;の内容を確認し、&lt;a href=&quot;https://docs.github.com/issues&quot;&gt;ドキュメント&lt;/a&gt;で詳細を確認してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73119</post-id></item><item><title>GitHub モバイルの問題作成エクスペリエンスの向上</title><link>https://github.blog/changelog/2023-07-13-improved-issue-creation-experience-for-github-mobile</link><dc:creator>ankneis</dc:creator><pubDate>Thu, 13 Jul 2023 21:28:26 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-07-13-auto-draft</guid><description>Introducing a new way of adding metadata while creating issues on GitHub Mobile We are excited to enhance the Issue creation experience for GitHub Mobile by introducing a comprehensive Property Bar. This feature allows you to conveniently add assignees, labels, milestones, and projects while creating Issues on GitHub Mobile. This powerful addition ensures that you [&amp;#8230;]</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; alt=&quot;GitHub Mobile の新しい問題にコンテンツを迅速に追加する&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/26570736/253224518-91c3c43a-9314-477a-8bcd-e6dec87955d4.png?ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;introducing-a-new-way-of-adding-metadata-while-creating-issues-on-github-mobile&quot;&gt; GitHub Mobile で課題を作成する際にメタデータを追加する新しい方法の導入&lt;a href=&quot;#introducing-a-new-way-of-adding-metadata-while-creating-issues-on-github-mobile&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Introducing a new way of adding metadata while creating issues on GitHub Mobile&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;包括的なプロパティ バーを導入することで、GitHub Mobile の問題作成エクスペリエンスを強化できることを嬉しく思います。この機能を使用すると、GitHub Mobile で課題を作成する際に、担当者、ラベル、マイルストーン、プロジェクトを簡単に追加できます。&lt;/p&gt;
&lt;p&gt;この強力な追加機能により、必要なツールをすぐに利用できるようになり、関連するすべてのメタデータを使用して問題を以前よりも迅速に作成できるようになります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/mobile&quot;&gt;GitHub Mobile の詳細を読んで&lt;/a&gt;、改善に役立つ&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/mobile&quot;&gt;フィードバックをお送りください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73112</post-id></item><item><title>GitHub Actions – OIDC と AWS の統合では中間 TLS 証明書のピン留めが不要になりました</title><link>https://github.blog/changelog/2023-07-13-github-actions-oidc-integration-with-aws-no-longer-requires-pinning-of-intermediate-tls-certificates</link><dc:creator>ankneis</dc:creator><pubDate>Thu, 13 Jul 2023 21:01:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-07-13-auto-draft</guid><description>GitHub Actions &amp;#8211; OpenId Connect (OIDC) integration with AWS is now optimized to avoid pinning any intermediary certificate thumbprints. While configuring GitHub as an OIDC IdP (ID Provider), AWS now secures communication by trusting GitHub Actions&amp;#8217;s trusted root certificate authorities (CAs) instead of using a certificate thumbprint to verify GitHub&amp;#8217;s IdP server certificate. This will [&amp;#8230;]</description><content:encoded>&lt;p&gt;GitHub アクション – OpenId Connect (OIDC) と AWS の統合が、中間証明書のサムプリントの固定を回避するように最適化されました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc.html&quot;&gt;GitHub を OIDC IdP (ID プロバイダー) として構成する&lt;/a&gt;際、AWS は、証明書の拇印を使用して GitHub の IdP サーバー証明書を検証するのではなく、GitHub Actions の信頼されたルート認証局 (CA) を信頼することで通信を保護するようになりました。&lt;br /&gt;
これにより、OIDC を使用して GitHub から AWS への認証を行う際に証明書の拇印をピン留めすることで発生する問題が解決され、回避されます。 GitHub の顧客は何もする必要はありません。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect&quot;&gt;GitHub Actions での OIDC の使用について詳しくは、こちらをご覧ください&lt;/a&gt;。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73110</post-id></item><item><title>監査ログ API リクエストのストリーミング パブリック ベータ版の更新</title><link>https://github.blog/changelog/2023-07-13-updates-to-the-audit-log-api-requests-streaming-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 13 Jul 2023 19:43:44 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-07-13-updates-to-the-audit-log-api-requests-streaming-public-beta</guid><description>Updates to the audit log api requests streaming public beta</description><content:encoded>&lt;p&gt;4 月に、GitHub Enterprise Cloud の顧客がエンタープライズ監査ログの一部として API リクエスト イベントをストリーミングするパブリック ベータに参加できることを発表しました。このリリースの一部として、企業のプライベートおよび内部リポジトリに対する REST API 呼び出しを&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/streaming-the-audit-log-for-your-enterprise&quot;&gt;、GitHub でサポートされているストリーミング エンドポイント&lt;/a&gt;の 1 つにストリーミングできるようになりました。&lt;/p&gt;
&lt;p&gt;ただし、他のセキュリティ上重要な API ルートをキャプチャするには、プライベートおよび内部リポジトリに対する API 呼び出しの対象範囲を拡大する必要があることがわかりました。さらに、内部リポジトリとプライベート リポジトリをターゲットとするいくつかの API ルートが、監査やセキュリティの価値がほとんどなく、大量のイベントを生成することを確認しました。これらの懸念に対処するために、私たちは GitHub のセキュリティ チームと提携して、パブリック ベータ版の基礎として機能する監査およびセキュリティに重要なコントローラーのセットを定義しました。ベータ版に対するこれらの調整により、ストリーミングされる API リクエスト イベントによって生成される信号が増加し、ノイズが減少するはずです。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;画像(4)&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/95828167/229549675-7d472b3b-c636-47c2-8372-4adcde52d1f9.png?w=693&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;sub&gt;注: &lt;code&gt;hashed_token&lt;/code&gt;と&lt;code&gt;token_id&lt;/code&gt;セキュリティ上の理由から編集されています。&lt;/sub&gt;&lt;/p&gt;
&lt;p&gt;パブリック ベータ版に興味のある企業所有者は、ドキュメントの指示に従って&lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/streaming-the-audit-log-for-your-enterprise#enabling-audit-log-streaming-of-api-requests&quot;&gt;API リクエストの監査ログ ストリーミングを有効にすることができます。&lt;/a&gt;この機能に加えられた変更に関するフィードバックは&lt;a href=&quot;https://github.com/community/community/discussions/45920&quot;&gt;、ベータ版フィードバック コミュニティのディスカッション投稿でお待ちしています。&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73107</post-id></item><item><title>プル リクエストのマージ キューが一般公開されました。</title><link>https://github.blog/changelog/2023-07-12-pull-request-merge-queue-is-now-generally-available</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 12 Jul 2023 15:27:52 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-07-12-pull-request-merge-queue-is-now-generally-available</guid><description>Pull request merge queue is now generally available!</description><content:encoded>&lt;p&gt;本日、プル リクエストのマージ キューの一般提供を発表します。 &lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8&quot; alias=&quot;tada&quot;&gt; 🎉&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;マージ キューは、最も混雑しているブランチへのプル リクエストのマージを自動化することで、ソフトウェア配信の速度を向上させるのに役立ちます。 &lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/2503052/217027654-f570fb25-092d-476e-b6f5-0b31b8514662.png?ssl=1&quot; alt=&quot;プル リクエストのマージ キューのスクリーンショット&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;マージ キューの前に、開発者は多くの場合、マージ前にプル リクエスト ブランチを更新して、すでにマージされているプル リクエストとの互換性がないために変更がメイン ブランチを壊さないようにする必要があります。これらの更新ごとに、新しいラウンドの継続的インテグレーション (CI) チェックが発生し、開発者がマージを試みる前にこのチェックを完了する必要がありました。マージ キューは、マージのためにキューに入れられた各プル リクエストが、その前にキューに入れられた他のプル リクエストとテストされるようにすることで、このプロセスを自動化します。&lt;/p&gt;
&lt;p&gt;マージ キューは、GitHub Enterprise Cloud プランのプライベート リポジトリとパブリック リポジトリ、および組織が所有するすべてのパブリック リポジトリで利用できます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=XEZMgohmtts&quot;&gt;マージ キューがどのように機能するかについては、このビデオ デモ&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;h2 id=&quot;updates&quot; id=&quot;updates&quot; &gt;アップデート&lt;a href=&quot;#updates&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Updates&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;過去数か月間、私たちはバグの修正とフィードバックへの対応に忙しくしてきました。一般提供の一環として、次のアップデートを発表します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;新規&lt;/strong&gt;: プル リクエストがキューから&lt;code&gt;destroyed&lt;/code&gt;ためにマージ グループがマージまたは無効になった場合を含め、何らかの理由でマージ グループが破棄された場合、アクションが破棄された&lt;code&gt;merge_group&lt;/code&gt; Webhook イベントが公開されるようになりました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;修正&lt;/strong&gt;: キューによって一時的なブランチが作成されるときに公開される&lt;code&gt;push&lt;/code&gt; Webhook イベントの&lt;code&gt;before&lt;/code&gt;プロパティと&lt;code&gt;created&lt;/code&gt;プロパティは、ブランチの作成を反映するように設定されるようになりました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;変更&lt;/strong&gt;: キューの先頭へのジャンプは、GitHub Enterprise のリポジトリではデフォルトで管理者のみが利用できるようになりましたが、カスタム リポジトリ ロールを使用して個々のユーザーとチームに許可することもできます。以前は、書き込みアクセス権を持つユーザーはキューをジャンプできましたが、管理者にはキューへのアクセスを制限したり、書き込みアクセス権のないユーザーにキューを許可したりする方法がありませんでした。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;修正&lt;/strong&gt;: &lt;code&gt;pull_request.dequeued&lt;/code&gt; Webhook イベントは、プル リクエストがキューにマージされた場合など、何らかの理由でキューから削除されるたびに一貫して公開されるようになりました。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;learn-more&quot; id=&quot;learn-more&quot; &gt;もっと詳しく知る&lt;a href=&quot;#learn-more&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Learn more&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;マージ キューの使用を開始する方法の詳細については、&lt;a href=&quot;https://github.blog/2023-07-12-github-merge-queue-is-generally-available/&quot;&gt;ブログ&lt;/a&gt;で詳細を確認してください。&lt;/p&gt;
&lt;h3 id=&quot;a-special-thanks&quot; id=&quot;a-special-thanks&quot; &gt;特別な感謝&lt;a href=&quot;#a-special-thanks&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;A special thanks&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;この機能のパブリック ベータ版に参加していただいたコミュニティのお客様に大きな感謝を表します。あなたの意見は、チームが最も混雑する支店での交通渋滞を防ぐのに役立ちます。万歳！ &lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8&quot; alias=&quot;sparkles&quot;&gt; ✨&lt;/g-emoji&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73067</post-id></item><item><title>パスキーのパブリックベータ版</title><link>https://github.blog/changelog/2023-07-12-passkeys-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 12 Jul 2023 15:09:38 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-07-12-passkeys-public-beta</guid><description>Passkeys Public Beta</description><content:encoded>&lt;p&gt;パスキーはサインイン時のパスワードの代わりとなり、より高いセキュリティ、使いやすさ、紛失防止を実現します。これらは現在、パブリック ベータ版として GitHub.com で利用可能です。詳細については、&lt;a href=&quot;https://gh.io/passkeyblog&quot;&gt;このブログ投稿を&lt;/a&gt;参照してください。&lt;/p&gt;
&lt;p&gt;このパブリック ベータ版は、2FA を使用しているかどうかに関係なく、パスワードを持つすべてのユーザーに公開されています。まず、 &lt;a href=&quot;https://docs.github.com/en/get-started/using-github/exploring-early-access-releases-with-feature-preview#exploring-beta-releases-with-feature-preview&quot;&gt;機能プレビューとしてパスキーを有効にします&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;パスキーを使用すると、サインイン時にパスワードやユーザー名を入力する必要がなくなります。また、アカウントで 2FA が有効になっている場合は、2FA を実行する必要もありません。これは、パスキーはユーザーの身元とデバイスの所有を検証するため、1 つで 2 つの認証要素としてカウントされるためです。&lt;/p&gt;
&lt;p&gt;登録すると、新しいパスキーを登録し、多くのセキュリティ キーをパスキーにアップグレードできます。プレビューに登録している場合は、次回対象となるセキュリティ キーを使用するときに、アップグレードするように求められます。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; width=&quot;346&quot; alt=&quot;「指紋」というセキュリティ キーをパスキーにアップグレードするかどうかをユーザーに尋ねる、セキュリティ キーのアップグレード プロンプトのスクリーンショット。&quot; src=&quot;https://github.com/github/docs/assets/1666363/a4fb158f-31f7-4b70-8a92-a7720bf0f7ed&quot;&gt;&lt;/p&gt;
&lt;p&gt;詳細については、&lt;a href=&quot;https://gh.io/passkeyblog&quot;&gt;パスキーに関するこのブログ投稿&lt;/a&gt;と、ドキュメントの&lt;a href=&quot;https://docs.github.com/en/authentication/authenticating-with-a-passkey/about-passkeys&quot;&gt;「パスキーについて」&lt;/a&gt;を参照してください。フィードバックがある場合は、&lt;a href=&quot;https://gh.io/passkey-feedback&quot;&gt;公開ディスカッション&lt;/a&gt;にメモを残してください。私たちはアカウント セキュリティのこの進歩に興奮しており、お客様にとってどのように改善できるかを喜んで理解したいと考えています。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73064</post-id></item><item><title>CodeQL を使用したコード スキャンでは、新規ユーザーに対して Python 依存関係が自動的にインストールされなくなりました</title><link>https://github.blog/changelog/2023-07-12-code-scanning-with-codeql-no-longer-installs-python-dependencies-automatically-for-new-users</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 12 Jul 2023 13:02:53 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-07-12-code-scanning-with-codeql-no-longer-installs-python-dependencies-automatically-for-new-users</guid><description>Code scanning with CodeQL no longer installs Python dependencies automatically for new users</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning-for-a-repository#creating-an-advanced-setup&quot;&gt;高度なセットアップ&lt;/a&gt;を通じて CodeQL を使用してコード スキャンを使用して Python プロジェクトを分析する場合、プロジェクトの依存関係を自動的にインストールしようとします。過去数か月、数年にわたって、私たちは Python 分析を大幅に改善してきました。つまり、CodeQL はコードベースを分析するためにこれらの依存関係をフェッチする必要がなくなりました。&lt;/p&gt;
&lt;p&gt;したがって、今後は、CodeQL for Python の新規ユーザーに対する依存関係の自動インストールを無効にしました。これにより、結果への影響を最小限に抑えながら、Python プロジェクトのスキャン時間が短縮されます。少なくとも 1 つの Python プロジェクトをスキャンするように既に CodeQL を設定しているコード スキャン ユーザーには、新しく設定されたリポジトリに対する変更は表示されません。新しい動作は、以前に Python プロジェクトが設定されていないユーザーにのみ適用されます。高度なセットアップを介して CodeQL によるコード スキャンを構成している既存のユーザーには、 &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/customizing-code-scanning#analyzing-python-dependencies&quot;&gt;ドキュメント&lt;/a&gt;で説明されているように&lt;code&gt;setup-python-dependencies: false&lt;/code&gt;を設定して依存関係のインストールを無効にすることをお勧めします。&lt;/p&gt;
&lt;p&gt; GitHub Enterprise Server (GHES) のユーザーは、バージョン 3.11 以降、この変更の恩恵を受けることができます。 2024 年末までに、すべての依存関係インストール (既存ユーザー向けを含む) を廃止する予定です。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">73062</post-id></item></channel></rss>