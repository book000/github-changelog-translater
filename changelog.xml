<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Wed, 29 Mar 2023 13:22:56 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>Git でブランチ保護をバイパスするための情報メッセージ</title><link>https://github.blog/changelog/2023-03-29-info-messages-for-bypassing-branch-protections-in-git</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 29 Mar 2023 13:01:25 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-03-29-info-messages-for-bypassing-branch-protections-in-git</guid><description>Info messages for bypassing branch protections in Git</description><content:encoded>&lt;p&gt;Git プッシュに応答して、バイパスされた&lt;a href=&quot;https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule&quot;&gt;ブランチ保護ルール&lt;/a&gt;を表示するようになりました。これらは&lt;code&gt;information&lt;/code&gt;メッセージであり、ワークフローをブロックするようには設計されていません。&lt;/p&gt;
&lt;p&gt;歴史的に、Git プッシュの後、ブランチ ルールがバイパスされたことを示す兆候はありませんでした。&lt;/p&gt;
&lt;p&gt; Repo 管理者、 &lt;a href=&quot;https://docs.github.com/en/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization#repository&quot;&gt;ブランチ保護のバイパス権限&lt;/a&gt;を持つアクター、およびブランチ保護のバイパス リスト内のアクターは、バイパスされたルールのリストを表示するようになりました。 &lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;ルールのリストを表示している Git コマンド ライン インターフェースのスクリーンショット&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/7575792/228326077-f6cc9a18-1819-4faf-b006-4c0adcae4553.png?ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;
&lt;/p&gt;
&lt;p&gt; GitHub の&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/repositories&quot;&gt;パブリック フィードバック ディスカッション&lt;/a&gt;でフィードバックをお寄せください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71010</post-id></item><item><title>リポジトリの依存関係グラフ ビューの更新</title><link>https://github.blog/changelog/2023-03-28-updates-to-the-repository-dependency-graph-view</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 28 Mar 2023 18:25:12 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-03-28-updates-to-the-repository-dependency-graph-view</guid><description>Updates to the repository dependency graph view</description><content:encoded>&lt;p&gt;依存関係グラフには、リポジトリに格納されているマニフェスト ファイルとロック ファイルの概要が表示されます。リポジトリ ビューには、次のような更新されたユーザー エクスペリエンスがあります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;すべての依存関係のページ分割されたリストからパッケージ名で検索&lt;/li&gt;
&lt;li&gt;依存ライセンス&lt;/li&gt;
&lt;li&gt;依存関係に関する Dependabot アラート。重大度別に並べ替えられ、必要に応じて Dependabot アラートおよび Dependabot 更新プル リクエストにリンクされます (リポジトリの Dependabot アラートを表示する権限を持つユーザーにのみ表示されます)。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/3474250/228082901-0e685d77-f722-4f69-98d4-8a95a7bda822.png?ssl=1&quot; alt=&quot;ハイ コントラスト テーマを使用したディペンデンシー グラフ UX のスクリーンショット&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt; [インサイト] &gt; [依存関係グラフ] からリポジトリの依存関係グラフにアクセスします。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph&quot;&gt;ディペンデンシー グラフの詳細&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71009</post-id></item><item><title>ディペンデンシー グラフから SBOM を生成する</title><link>https://github.blog/changelog/2023-03-28-generate-an-sbom-from-the-dependency-graph</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 28 Mar 2023 18:02:28 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-03-28-generate-an-sbom-from-the-dependency-graph</guid><description>Generate an SBOM from the dependency graph</description><content:encoded>&lt;p&gt;ソフトウェア部品表 (SBOM) は、ソフトウェア プロジェクトの依存関係と関連するメタデータ (バージョン、ライセンスなど) の標準化されたインベントリです。リポジトリの依存関係グラフを、 &lt;a href=&quot;https://spdx.github.io/spdx-spec/v2.3/&quot;&gt;SPDX 2.3 仕様&lt;/a&gt;に準拠した SBOM としてエクスポートできるようになりました。&lt;/p&gt;
&lt;p&gt;リポジトリの依存関係グラフで [SBOM のエクスポート] をクリックして、メイン ブランチのヘッドを表す SBOM を生成します。結果の JSON ファイルがブラウザにダウンロードされます。 SBOM のエクスポートは、GitHub 上のすべてのクラウド リポジトリに対して無料であり、リポジトリへの読み取りアクセス権を持つすべてのユーザーが実行できます。&lt;/p&gt;
&lt;p&gt;リポジトリの SBOM を生成するためのサポート REST API は、今後数週間で利用可能になります。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/3474250/228253150-72b2c268-caa0-406b-a542-2a2def714994.png?ssl=1&quot; alt=&quot;右上隅に SBOM エクスポート ボタンがあるリポジトリの依存関係グラフのスクリーンショット&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph&quot;&gt;ディペンデンシー グラフの詳細&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/exporting-a-software-bill-of-materials-for-your-repository&quot;&gt;リポジトリのソフトウェア部品表のエクスポートの詳細&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">71008</post-id></item><item><title>GitHub アクション: Visual Studio Code 拡張機能がパブリック ベータになりました</title><link>https://github.blog/changelog/2023-03-28-github-actions-visual-studio-code-extension-is-now-in-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 28 Mar 2023 16:41:05 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-03-28-github-actions-visual-studio-code-extension-is-now-in-public-beta</guid><description>GitHub Actions: Visual Studio Code Extension is now in public beta</description><content:encoded>&lt;p&gt;VS Code の GitHub Actions 拡張機能がパブリック ベータになりました。この拡張機能には、構文検証やオートコンプリートなどの豊富な編集機能が含まれており、ワークフローの作成と編集がより迅速かつ簡単になります。開発者は、ワークフローの実行を表示したり、ログを調べたり、VS Code から直接再実行をトリガーしたりすることもできます。&lt;/p&gt;
&lt;p&gt;開始するには、 &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=github.vscode-github-actions&quot;&gt;VS Code マーケットプレイス&lt;/a&gt;にアクセスするか、 &lt;a href=&quot;https://github.blog/2023-03-28-announcing-the-github-actions-extension-for-vs-code/&quot;&gt;Actions VS Code 拡張機能のブログ投稿&lt;/a&gt;から拡張機能の詳細を確認してください。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/orgs/github/projects/4247/views/1?filterQuery=actions&quot;&gt;パブリック ロードマップ&lt;/a&gt;にアクセスして、Actions の次の予定を確認してください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">70998</post-id></item><item><title>コード スキャンは、リポジトリで有効になっているツールの状態を示します</title><link>https://github.blog/changelog/2023-03-28-code-scanning-shows-the-health-of-tools-enabled-on-a-repository</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 28 Mar 2023 11:57:03 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-03-28-code-scanning-shows-the-health-of-tools-enabled-on-a-repository</guid><description>Code scanning shows the health of tools enabled on a repository</description><content:encoded>&lt;p&gt;新しいコード スキャン ツールのステータス ページでは、ユーザーは CodeQL やその他のコード スキャン ツールのステータスを表示できます。&lt;br /&gt;
このページには、リポジトリで有効になっているすべてのツールが表示され、それらのセットアップ タイプ、構成、および関連するエラーや警告に関する情報が提供されます。ツールが期待どおりに機能しない場合は、ここから問題のトラブルシューティングを開始できます。&lt;br /&gt;
&lt;br /&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/managing-code-scanning-alerts-for-your-repository#viewing-the-alerts-for-a-repository&quot;&gt;リポジトリのコード スキャン ページ&lt;/a&gt;の上部にあるボタンを使用して、新しいツール ステータス ページにアクセスできます。 &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;コード スキャン ツール ステータス ページ アクセス&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/54394529/227717362-fd61b7c9-fcb8-4325-a9ff-d13e5049365d.png?w=600&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;
&lt;/p&gt;
&lt;h3 id=&quot;statuses-for-the-tool&quot; id=&quot;statuses-for-the-tool&quot; &gt;ツールのステータス&lt;a href=&quot;#statuses-for-the-tool&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Statuses for the tool&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;このページには、ツールの 3 つのステータス (すべての構成が機能している、注意が必要な構成、機能していない構成) が示されます。&lt;br /&gt;
&lt;br /&gt;コード スキャンは、ツール ステータスを提供するために、デフォルト ブランチの少なくとも 1 つの分析を受け取る必要があります。デフォルト ブランチのステータスのみが報告されます。&lt;br /&gt;
&lt;br /&gt;このページには、ツールのすべての分析構成の最新の状態が表示されます。たとえば、リポジトリの 2 つの別個の部分を個別にスキャンする 2 つの別個のワークフローを作成した場合、ページには両方のステータスを組み合わせて、ツールの最新の状態が表示されます。&lt;/p&gt;
&lt;h3 id=&quot;the-page-structure&quot; id=&quot;the-page-structure&quot; &gt;ページ構造&lt;a href=&quot;#the-page-structure&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;The page structure&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ツールごとに、構成の誤りとエラー、言語ごとのスキャンされたファイルの数、セットアップの種類と構成、ツールがチェックするルールのリスト、および詳細な CSV レポートに関する実用的な情報がページに表示されます。 &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;コード スキャン ツール ステータス ページの詳細&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/54394529/228172209-1ac9438c-a98e-4094-ab74-f58e594fb9a5.png?w=600&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;
&lt;/p&gt;
&lt;h4 id=&quot;error-messages&quot; id=&quot;error-messages&quot; &gt;エラーメッセージ&lt;a href=&quot;#error-messages&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Error messages&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;デバッグに役立つように、ツール ステータス ページには、ツールのセットアップおよび解析の実行中に複数のコード スキャン システム コンポーネントから収集されたエラー メッセージが表示されます。これには、CodeQL、コード スキャン ワークフロー、SARIF アップロード制限、および内部コード スキャン システムからのエラーが含まれます。&lt;br /&gt;
&lt;br /&gt;サードパーティのコード スキャン ツールは、ツール関連のエラーをページに配信することはまだできません。将来、これらのツールは、SARIF アップロードを介してコード スキャンにエラー メッセージを送信できるようになります。&lt;/p&gt;
&lt;h4 id=&quot;scanned-files&quot; id=&quot;scanned-files&quot; &gt;スキャンされたファイル&lt;a href=&quot;#scanned-files&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Scanned files&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; [スキャンされたファイル] セクション&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-the-tool-status-page#how-codeql-defines-scanned-files&quot;&gt;には、リポジトリ内のファイル数と比較して、言語ごとに分析されたファイルの数が表示されます。&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;このセクションは、コード スキャン ツールがリポジトリで正しく動作しているかどうかを判断するのに役立ち、ツールによってサポートおよび分析されている言語に関する情報のみを表示し、リポジトリに存在するがサポートされていない言語やツールによって分析されていない言語は無視します。&lt;br /&gt;
&lt;br /&gt;このセクションは、サードパーティのコード スキャン ツールではまだ表示されません。将来的には、サードパーティ ツールが SARIF アップロードを介してコード スキャンにエラー メッセージを送信できるようになります。&lt;/p&gt;
&lt;h3 id=&quot;delivery-dates&quot; id=&quot;delivery-dates&quot; &gt;運送日&lt;a href=&quot;#delivery-dates&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Delivery dates&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;これは GitHub.com に出荷されており、GitHub Enterprise Server 3.9 で利用できるようになります。&lt;/p&gt;
&lt;p&gt;コード スキャンと&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-the-tool-status-page&quot;&gt;ツール ステータス ページ&lt;/a&gt;&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning&quot;&gt;の詳細をご覧ください&lt;/a&gt;。&lt;br /&gt;
&lt;br /&gt; &lt;a href=&quot;https://github.com/features/security&quot;&gt;GitHub Advanced Security の詳細をご覧ください。&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">70963</post-id></item><item><title>明るいテーマと暗いテーマの色のコントラストの改善</title><link>https://github.blog/changelog/2023-03-28-light-and-dark-theme-color-contrast-improvements</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 28 Mar 2023 11:45:48 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-03-28-light-and-dark-theme-color-contrast-improvements</guid><description>Light and dark theme color contrast improvements</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; alt=&quot;a11y コントラストの改善&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/6720549/227412508-bbbac032-2ee9-4d5e-a886-b3c3f9722f62.png?w=1200&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt; github.com のデフォルトの明るいテーマと暗いテーマの色のコントラストを改善し、すべてのユーザーがアクセスできるようにしました。これらの変更は、GitHub をすべての開発者に包括的にするという私たちの取り組みの一環として、 &lt;a href=&quot;https://primer.style/&quot;&gt;GitHub のデザイン システム&lt;/a&gt;である Primer に加えられました。詳細については、 &lt;a href=&quot;https://accessibility.github.com/&quot;&gt;accessibility.github.com&lt;/a&gt;にアクセスしてください。&lt;/p&gt;
&lt;p&gt; VS Code の明るいテーマと暗いテーマも、これらの変更に合わせて更新されます。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">70962</post-id></item><item><title>締め切り期限と GitHub クラスルーム教育者向けの課題ダッシュボードの改善、学生向けの締め切りの可視性の向上</title><link>https://github.blog/changelog/2023-03-27-cutoff-deadlines-and-improved-assignment-dashboard-for-github-classroom-educators-better-deadline-visibility-for-students</link><dc:creator>Kevin Duck</dc:creator><pubDate>Mon, 27 Mar 2023 15:39:17 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-03-27-cutoff-deadlines-and-improved-assignment-dashboard-for-github-classroom-educators-better-deadline-visibility-for-students</guid><description>Cutoff deadlines and improved assignment dashboard for GitHub Classroom Educators, better deadline visibility for Students</description><content:encoded>&lt;p&gt;&lt;a href=&quot;classroom.github.com&quot;&gt;GitHub Classroom&lt;/a&gt;を使用する教育者は、オプションで課題の締め切りを「ハード カットオフ」に設定できるようになりました。締め切り日を使用すると、締め切り日が過ぎると、学生は課題リポジトリへの書き込みアクセス権を失います。&lt;/p&gt;
&lt;p&gt;個々の学生やグループに延長を許可して、課題を提出する時間を増やすことができます。&lt;/p&gt;
&lt;p&gt;課題ダッシュボード ビューが更新され、学生が時間どおりに (締め切り前に) リポジトリにコミットしたか、遅れて (締め切り後に) コミットしたか、またはその両方であるかをより適切に示すようになりました。これらの状態でダッシュボード ビューを簡単にフィルター処理し、学生のリポジトリの最新のオンタイムおよびレイト コミットにすばやくクリックできます。&lt;/p&gt;
&lt;p&gt;学生からの大きな要望に応えて、課題の README のボタンをクリックして、いつでも課題の締め切りを表示できるようになりました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/education/manage-coursework-with-github-classroom/teach-with-github-classroom/create-an-individual-assignment&quot;&gt;新しい課題の作成&lt;/a&gt;、 &lt;a href=&quot;https://docs.github.com/education/manage-coursework-with-github-classroom/teach-with-github-classroom/extending-an-assignments-deadline-for-an-individual-or-group&quot;&gt;締め切りの延長&lt;/a&gt;、 &lt;a href=&quot;https://docs.github.com/education/manage-coursework-with-github-classroom/learn-with-github-classroom/viewing-your-assignments-deadline&quot;&gt;学生が課題の締め切りを表示する機能&lt;/a&gt;について詳しくは、こちらをご覧ください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">70938</post-id></item><item><title>セキュリティ カバレッジ有効化スライドアウト パネルの段階的な改善</title><link>https://github.blog/changelog/2023-03-24-incremental-improvements-to-the-security-coverage-enablement-slide-out-panel</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 24 Mar 2023 21:34:23 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-03-24-incremental-improvements-to-the-security-coverage-enablement-slide-out-panel</guid><description>Incremental improvements to the security coverage enablement slide-out panel</description><content:encoded>&lt;p&gt;最近、セキュリティ概要のセキュリティ カバレッジ ページのスライドアウト有効化パネルにいくつかの改善をリリースしました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;リポジトリのアクティブなコミッターが表示されるようになり、使用されている Advanced Security ライセンスの数を把握できるようになりました。 Advanced Security が有効になっていないリポジトリの場合、数字は機能を有効にするために必要なライセンスの数を示します。&lt;/li&gt;
&lt;li&gt;保存されていない変更は、「変更済み」タグで明確にラベル付けされるようになりました。さらに、[セキュリティ設定を保存] ボタンに、行われた有効化の変更の総数が表示されるようになりました。&lt;/li&gt;
&lt;li&gt;セキュリティ機能が有効になっている間、カバレッジ ページには「更新中…」のステータスが表示され、進行中のプロセスが通知されます。 
&lt;p align=&quot;center&quot;&gt;
&lt;img decoding=&quot;async&quot; alt=&quot;セキュリティ カバレッジ スライドアウト パネル&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/2262535/227632852-f514e192-45ec-413b-bbf4-9d790e216d33.png?w=600&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot;&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの改善は GitHub.com に出荷されており、GitHub Enterprise Server 3.9 で利用できるようになります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/security-overview/about-the-security-overview&quot;&gt;セキュリティの概要の詳細を確認し&lt;/a&gt;、&lt;a href=&quot;https://github.com/github-community/community/discussions/categories/code-security&quot;&gt;フィードバックをお送りください&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;a href=&quot;https://github.com/features/security&quot;&gt;GitHub の高度なセキュリティについて詳しく知る&lt;/a&gt;&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">70934</post-id></item><item><title>依存関係グラフ GraphQL API プレビューには、送信された依存関係が含まれています</title><link>https://github.blog/changelog/2023-03-24-dependency-graph-graphql-api-preview-includes-submitted-dependencies</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 24 Mar 2023 20:00:33 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-03-24-dependency-graph-graphql-api-preview-includes-submitted-dependencies</guid><description>Dependency graph GraphQL API preview includes submitted dependencies</description><content:encoded>&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/graphql/overview/schema-previews#access-to-a-repositorys-dependency-graph-preview&quot;&gt;リポジトリ依存関係グラフ GraphQL API プレビューは、&lt;/a&gt;依存関係送信 API を使用して送信された依存関係を返すようになりました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph&quot;&gt;ディペンデンシー グラフの詳細&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/using-the-dependency-submission-api&quot;&gt;依存関係提出 API の詳細&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">70933</post-id></item><item><title>きめ細かい PAT 管理のための組織 API</title><link>https://github.blog/changelog/2023-03-24-organization-apis-for-fine-grained-pats-management</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 24 Mar 2023 19:11:06 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2023-03-24-organization-apis-for-fine-grained-pats-management</guid><description>Organization APIs for fine-grained PATs management</description><content:encoded>&lt;p&gt;組織の所有者は、GitHub アプリを使用して、組織内のきめ細かい個人用アクセス トークン (PAT) の承認と監査を自動化できるようになりました。新しい API と Webhook イベントにより、GitHub アプリは組織内の新しい PAT 要求の通知を受け、要求を確認してから、PAT を承認または拒否できます。また、組織に対して承認されたすべての詳細な PAT のビューを提供し、承認を取り消すこともできます。これらの API とイベントは、 &lt;a href=&quot;https://github.blog/2022-10-18-introducing-fine-grained-personal-access-tokens-for-github/&quot;&gt;昨年リリースされた&lt;/a&gt;現在進行中のきめ細かな PAT パブリック ベータ版の一部です。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://i0.wp.com/user-images.githubusercontent.com/1666363/227591227-7d5d739e-72ef-4990-bfdf-ee7cd9423c23.png?ssl=1&quot; alt=&quot;ユーザーからのリクエストがアプリへの Webhook イベントをトリガーする方法を示す人魚図。アプリはリクエストを確認し、承認することを選択できます。後で、アプリケーションは承認されたすべての PAT を確認し、1 つを取り消すことを選択できます。その結果、PAT を作成したユーザーに電子メール通知が送信されます。&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt; Webhook イベントと API リストに含まれる詳細には、要求されたリポジトリとアクセス許可、トークンの有効期限、PAT を使用して何をする予定かについてのユーザーの説明が含まれます。 &lt;code&gt;personal_access_token_request&lt;/code&gt;イベントは、リクエストが作成されたとき、管理者またはアプリケーションによって承認または拒否されたとき、またはリクエストしているユーザーによってキャンセルされたときに生成されます。&lt;/p&gt;
&lt;p&gt;これらの API を呼び出すことができるのは GitHub アプリだけであり、それ自体で動作するか、サインインしている組織管理者に代わって動作します。&lt;br /&gt;
アクティブなトークンを管理するには、 &lt;code&gt;organization_personal_access_tokens&lt;/code&gt;権限が必要です。一方、 &lt;code&gt;organization_personal_access_token_requests&lt;/code&gt;権限により、アプリはリクエストに関する Webhook を受信し、リクエスト管理 API を呼び出すことができます。&lt;/p&gt;
&lt;p&gt;組織は、これらの要求を管理するために、個人用アクセス トークンの承認フローを有効にする必要があります。そうしないと、組織に対してきめ細かい個人用アクセス トークンが自動的に承認されます (それにより、 &lt;code&gt;personal_access_token_request: approved&lt;/code&gt;イベントが生成されます)。&lt;/p&gt;
&lt;p&gt;これらの API の詳細については、 &lt;a href=&quot;https://docs.github.com/en/rest/orgs/orgs?apiVersion=2022-11-28#list-requests-to-access-organization-resources-with-fine-grained-personal-access-tokens&quot;&gt;「きめ細かな PAT を使用して組織のリソースにアクセスするためのリクエストを一覧表示する」&lt;/a&gt;および&lt;a href=&quot;https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads?actionType=approved#personal_access_token_request&quot;&gt;「 &lt;code&gt;personal_access_token_request&lt;/code&gt; webhook イベント」&lt;/a&gt;を参照してください。詳細な PAT の詳細、および組織で有効にする方法については、 &lt;a href=&quot;https://docs.github.com/en/organizations/managing-programmatic-access-to-your-organization/setting-a-personal-access-token-policy-for-your-organization&quot;&gt;「組織の個人用アクセス トークン ポリシーの設定」を&lt;/a&gt;参照してください。&lt;/p&gt;
&lt;p&gt;詳細な PAT について報告するフィードバックやバグがある場合は、&lt;a href=&quot;https://github.com/community/community/discussions/36441&quot;&gt;専用のフィードバック ディスカッション&lt;/a&gt;でお知らせください。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">70932</post-id></item></channel></rss>