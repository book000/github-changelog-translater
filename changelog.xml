<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>Changelogs Archive - The GitHub Blog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Sat, 02 Mar 2024 13:46:15 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.4.3</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Changelogs Archive - The GitHub Blog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>CodeQL 2.16.3: Python 用の AI を活用した自動修正、更新されたクエリ、およびセキュリティ修正</title><link>https://github.blog/changelog/2024-03-01-codeql-2-16-3-ai-powered-autofixes-for-python-updated-queries-and-security-fixes</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 01 Mar 2024 10:01:50 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-03-01-codeql-2-16-3-ai-powered-autofixes-for-python-updated-queries-and-security-fixes</guid><description>&lt;p&gt;CodeQL 2.16.3: AI-powered autofixes for Python, updated queries, and security fixes&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-03-01-codeql-2-16-3-ai-powered-autofixes-for-python-updated-queries-and-security-fixes&quot;&gt;CodeQL 2.16.3: AI-powered autofixes for Python, updated queries, and security fixes&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;CodeQL は、GitHub コード スキャンを強化する静的分析エンジンです。 CodeQL バージョン&lt;code&gt;2.16.3&lt;/code&gt;がリリースされ、GitHub.com でコード スキャン ユーザーに公開されました。&lt;/p&gt;
&lt;p&gt;このリリースの重要な変更点は次のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; CodeQL コード スキャンでは、プル リクエストの Python アラートに対する AI を利用した自動修正提案がサポートされるようになりました。これは、現在の&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/code-scanning/managing-code-scanning-alerts/about-autofix-for-codeql-code-scanning&quot;&gt;自動修正プレビュー&lt;/a&gt;参加者全員に対して自動的に有効になります。&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.16.3/#new-features&quot;&gt;新しいオプション&lt;/a&gt;&lt;code&gt;python_executable_name&lt;/code&gt;が Python エクストラクターに追加されました。これにより、スキャンを実行しているシステムにインストールされているデフォルト以外の Python 実行可能ファイル&lt;span class=&quot;x x-first&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;x x-last&quot;&gt;Windows マシンの&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;pl-c1 x&quot;&gt;py.exe&lt;/span&gt;&lt;/code&gt;など) を選択できます。&lt;/li&gt;
&lt;li&gt;信頼できないデータベースまたは CodeQL パックの処理によって引き起こされる可能性がある、重大度の低いデータ漏洩の脆弱性である&lt;a href=&quot;https://github.com/github/codeql-cli-binaries/security/advisories/GHSA-gf8p-v3g3-3wph&quot;&gt;CVE-2024-25129&lt;/a&gt;の修正。&lt;/li&gt;
&lt;li&gt; 2 つの新しいクエリ:
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.16.3/#java-2&quot;&gt;java/android/insecure-local-authentication&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://developer.android.com/privacy-and-security/keystore&quot;&gt;Keystore に&lt;/a&gt;バックアップされたキーを使用しないためバイパスされる可能性がある生体認証 API の使用を見つけるためのものです。&lt;/li&gt;
&lt;li&gt; &lt;code&gt;&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.16.3/#swift&quot;&gt;swift/unsafe-unpacking&lt;/a&gt;&lt;/code&gt; 、zip ファイルの内容が宛先ディレクトリの外に抽出されないことを検証せずに、ユーザー制御の zip アーカイブを抽出するコードを検出します。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;クエリ&lt;code&gt;java/path-injection&lt;/code&gt;および&lt;code&gt;java/path-injection-local&lt;/code&gt;のシンクは、誤検知の数を減らすために&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.16.3/#java-2&quot;&gt;再加工されました&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;変更の完全なリストについては、&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.16.3/&quot;&gt;バージョン 2.16.3&lt;/a&gt;の完全な変更ログを参照してください。すべての新機能は GHES 3.13 にも含まれます。 GHES 3.12 以前のユーザーは&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.12/admin/code-security/managing-github-advanced-security-for-your-enterprise/configuring-code-scanning-for-your-appliance#configuring-codeql-analysis-on-a-server-without-internet-access&quot;&gt;、CodeQL バージョンをアップグレード&lt;/a&gt;できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-03-01-codeql-2-16-3-ai-powered-autofixes-for-python-updated-queries-and-security-fixes&quot;&gt;CodeQL 2.16.3: AI を活用した Python 用自動修正、更新されたクエリ、およびセキュリティ修正の&lt;/a&gt;投稿は、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76861</post-id></item><item><title>GitHub の無料ユーザーに対してプッシュ保護が有効になっています</title><link>https://github.blog/changelog/2024-02-29-push-protection-is-enabled-for-free-users-on-github</link><dc:creator>Kevin Duck</dc:creator><pubDate>Thu, 29 Feb 2024 20:06:15 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-29-push-protection-is-enabled-for-free-users-on-github</guid><description>&lt;p&gt;Push protection is enabled for free users on GitHub&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-29-push-protection-is-enabled-for-free-users-on-github&quot;&gt;Push protection is enabled for free users on GitHub&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub 上のすべての無料ユーザー アカウントで&lt;a href=&quot;https://github.blog/changelog/2024-02-14-secret-scannings-push-protection-will-soon-be-enabled-for-all-free-accounts-on-github/&quot;&gt;プッシュ保護を有効にする&lt;/a&gt;ためのロールアウトを開始しました。これにより、リポジトリ自体でシークレット スキャンが有効になっているかどうかに関係なく、パブリック リポジトリに誤ってシークレットをコミットすることが自動的に防止されます。&lt;/p&gt;
&lt;p&gt;パブリック リポジトリへのプッシュでシークレットが検出された場合、プッシュはブロックされます。コミットからシークレットを削除するか、シークレットが安全であると判断した場合はブロックをバイパスするかを選択できます。&lt;/p&gt;
&lt;p&gt;この変更がアカウントに適用されるまでに 1 ～ 2 週間かかる場合があります。&lt;a href=&quot;https://github.com/settings/security_analysis&quot;&gt;コードのセキュリティと分析の設定&lt;/a&gt;の早い段階でステータスを確認し、オプトインすることができます。有効にすると、オプトアウトするオプションもあります。プッシュ保護を無効にすると、シークレットが誤って漏洩する可能性があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.blog/2024-02-29-keeping-secrets-out-of-public-repositories/&quot;&gt;ブログ投稿を読む&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレットスキャンについて詳しく見る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/push-protection-for-users&quot;&gt;ユーザーのプッシュ保護について詳しく見る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/orgs/community/discussions/110557&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2024-02-29-push-protection-is-enabled-for-free-users-on-github&quot;&gt;「GitHub の無料ユーザーに対してプッシュ保護が有効になっている」という&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76859</post-id></item><item><title>エンタープライズ README</title><link>https://github.blog/changelog/2024-02-28-enterprise-readmes</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 28 Feb 2024 16:08:42 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-28-enterprise-readmes</guid><description>&lt;p&gt;Enterprise READMEs&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-28-enterprise-readmes&quot;&gt;Enterprise READMEs&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;エンタープライズ アカウントには、新しいルート ナビゲーション エクスペリエンスが追加され、すべてのユーザーが&lt;code&gt;Enterprise Overview&lt;/code&gt;に移動します。この新しいページ内で、GitHub Enterprise 所有者は自社の README を作成できます。これは内部的にすべての企業メンバーに表示されます。 &lt;code&gt;Organization&lt;/code&gt;ページはまだ存在しており、エンタープライズ アカウントの左側のナビゲーション内にあります。この新しいエクスペリエンスは現在 GitHub.com で利用可能であり、GitHub Enterprise Server 3.13 に含まれる予定です。&lt;/p&gt;
&lt;p&gt;詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/managing-your-enterprise-account/creating-a-readme-for-an-enterprise&quot;&gt;企業向けの README の作成&lt;/a&gt;に関するドキュメントを参照してください。この新しいページに表示したい内容についてフィードバックを送信するには、新しい概要ページの右側、README の上にある&lt;a href=&quot;https://survey3.medallia.com/?ligHiQ-o1SSoAXU1lSsJCI&quot;&gt;[フィードバックを送信]&lt;/a&gt;をクリックすることで、いつでも送信できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-02-28-enterprise-readmes&quot;&gt;Enterprise README の&lt;/a&gt;投稿は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76793</post-id></item><item><title>コパイロット – 2 月 27 日の更新</title><link>https://github.blog/changelog/2024-02-27-copilot-february-27th-update</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 27 Feb 2024 20:26:51 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-27-copilot-february-15th-update</guid><description>&lt;p&gt;Copilot - February 15th update&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-27-copilot-february-27th-update&quot;&gt;Copilot &amp;#8211; February 27th update&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;h2 id=&quot;%e2%8f%ab-copilot-code-completion-model-updated-with-more-improvements&quot;&gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/23eb.png&quot; alt=&quot;⏫&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt; Copilot コード補完モデルが更新され、さらなる改善が加えられました&lt;a href=&quot;#%e2%8f%ab-copilot-code-completion-model-updated-with-more-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#x23eb; Copilot Code Completion model updated with more improvements&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;すべての IDE で Copilot コード補完を強化するモデルの新しいアップデートを発表できることを嬉しく思います。このアップデートには、ユーザー向けの指示に従って改善され、パフォーマンスが向上しました。詳細は次のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指示への追従性の向上: 副操縦士は、ユーザーから与えられた指示をよりよく理解し、従うことができます。これは、Copilot がユーザーの意図と要件に一致するコードを生成する能力が向上したことを意味します。&lt;/li&gt;
&lt;li&gt;パフォーマンスの向上: 最後に、このモデルのアップデートには、Copilot ユーザー向けのパフォーマンスの向上が含まれています。これはすべての場合に顕著なわけではありませんが、特定のタスクでは Copilot をさらに高速かつ効率的にするのに役立ちます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-02-27-copilot-february-27th-update&quot;&gt;Copilot – 2 月 27 日の更新の&lt;/a&gt;投稿は、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76751</post-id></item><item><title>リポジトリ ルール – マージ キュー ルールの構成 – パブリック ベータ版</title><link>https://github.blog/changelog/2024-02-27-repository-rules-configure-merge-queue-rule-public-beta</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 27 Feb 2024 20:06:34 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-27-repository-rules-configure-merge-queue-rule-public-beta</guid><description>&lt;p&gt;Repository Rules - configure merge queue rule - public beta&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-27-repository-rules-configure-merge-queue-rule-public-beta&quot;&gt;Repository Rules &amp;#8211; configure merge queue rule &amp;#8211; public beta&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;span class=&quot;x x-first x-last&quot;&gt;リポジトリ ルールセットでの&lt;/span&gt;&lt;span class=&quot;x x-first x-last&quot;&gt;マージ キューの構成が&lt;/span&gt;パブリック ベータ版で&lt;span class=&quot;x x-first x-last&quot;&gt;利用できる&lt;/span&gt;ようになりました&lt;span class=&quot;x x-first x-last&quot;&gt;。&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/7575792/1f946735-7382-4892-add2-073518d6c179&quot; alt=&quot;ルールセット内のマージキューの構成を示すスクリーンショット&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;merge-queue-rule-insights&quot;&gt;マージキューとルールの洞察&lt;a href=&quot;#merge-queue-rule-insights&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Merge queue &amp; rule insights&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;これまで、ルール インサイトでは、複数のプル リクエストがキューによって同時にマージされた場合でも、マージされたプル リクエストは 1 つだけリストされていました。また、このベータ版では、マージ キュー内の各プル リクエストには、ルール インサイトに個別のレコードが含まれ、プル リクエストをマージ キューに追加したアクターにリンクされます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/7575792/67f0d8f7-ca4d-4d26-9626-5e89f3fca176&quot; alt=&quot;ルールの分析情報とキューからのすべての PR を示すスクリーンショットの例&quot; /&gt;&lt;/p&gt;
&lt;p&gt;ルール インサイト ダイアログの追加データ内で、キューに必要なチェックとともに、同じグループにマージされたすべてのプル リクエストを確認できるようになりました。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/7575792/c5feda5b-1be4-48cd-8dab-d0eb315ce5d2&quot; alt=&quot;ルールインサイトのキューの詳細のスクリーンショットの例&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;limitations&quot;&gt;制限事項&lt;a href=&quot;#limitations&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Limitations&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;マージ キュー ルールは API 経由で構成できません。この機能は近い将来利用可能になる予定です。&lt;/li&gt;
&lt;li&gt;ブランチ保護およびリポジトリ ルールのマージ キューはワイルドカード パターンをサポートしていません&lt;/li&gt;
&lt;li&gt;組織のルールセットではサポートされていません。&lt;/li&gt;
&lt;li&gt;単一のブランチに対して複数のマージ キューが構成されていると、マージが妨げられます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/announcements&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-02-27-repository-rules-configure-merge-queue-rule-public-beta&quot;&gt;リポジトリ ルール – マージ キュー ルールの構成 – パブリック ベータ版の投稿&lt;/a&gt;は、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76750</post-id></item><item><title>GitHub Copilot Enterprise の一般提供が開始されました</title><link>https://github.blog/changelog/2024-02-27-copilot-enterprise-is-now-generally-available</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 27 Feb 2024 16:48:31 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-27-copilot-enterprise-is-now-generally-available</guid><description>&lt;p&gt;Copilot Enterprise is now generally available&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-27-copilot-enterprise-is-now-generally-available&quot;&gt;GitHub Copilot Enterprise is now generally available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/884151/53dea518-b2f8-48bc-96a6-3607497e45a8&quot; alt=&quot;GitHub Copilot Enterprise の一般提供が開始されました&quot; /&gt;&lt;/p&gt;
&lt;p&gt;これまでで最も先進的な AI 製品である GitHub Copilot Enterprise が&lt;a href=&quot;https://github.blog/2024-02-27-github-copilot-enterprise-is-now-generally-available&quot;&gt;一般公開されました&lt;/a&gt;。 GitHub Copilot Enterprise を使用すると、次のことが可能になります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;組織固有のコードベースをより深く理解する&lt;/strong&gt;: GitHub.com の Copilot Chat はコードを理解し、開発者のコ​​ード ナビゲーションと理解を合理化します。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;組織の知識とベスト プラクティスにすばやくアクセス&lt;/strong&gt;: 開発者がナレッジ ベース (以前は docset と呼ばれていた) を会話に添付できるようにすることで、GitHub.com の Copilot Chat は、GitHub に保存されている Markdown ドキュメントに基づいて質問に答えることができます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;プル リクエストをより迅速にレビューする&lt;/strong&gt;: GitHub Copilot によって生成されたプル リクエストの概要と、プル リクエストの変更についてチャットできる機能により、レビュー担当者はプル リクエストを迅速に把握し、貴重なフィードバックの提供により多くの時間を費やすことができます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/2023-11-08-universe-2023-copilot-transforms-github-into-the-ai-powered-developer-platform/#introducing-github-copilot-enterprise-copilot-personalized-to-your-organization&quot;&gt;限定公開ベータ&lt;/a&gt;に続き、Copilot をさらにスマートにするために、本日 GitHub Copilot Enterprise に次の改善を加えます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;GitHub Copilot では、GitHub.com のチャット会話内で Bing を検索して、質問に答えたり、一般知識やコードベース以外の情報を検索したりできるようになりました&lt;/strong&gt;&lt;em&gt;(パブリック ベータ)&lt;/em&gt; 。&lt;/li&gt;
&lt;li&gt; 「ナレッジの添付」ボタンを使用して&lt;strong&gt;、GitHub.com の Copilot Chat 会話からナレッジ ベース (以前はドキュメントセットと呼ばれていました) にアクセスできるようになりました&lt;/strong&gt;。組織の所有者は、組織の設定から&lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/copilot/github-copilot-enterprise/copilot-chat-in-github/managing-copilot-knowledge-bases&quot;&gt;ナレッジ ベースを作成&lt;/a&gt;できます。&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;GitHub Copilot はユーザーが参照するコードを認識する&lt;/strong&gt;ため、どのファイル、シンボル、またはスニペットについてチャットするかを明確に指定する必要がなくなりました。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/884151/39816e1c-5545-431a-924f-639cd3b6ccfa&quot; alt=&quot;GitHub Copilot が現在表示しているコードにどのようにアクセスできるかを示す会話の例&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;GitHub Copilot は、より構造化されたプル リクエストの概要を生成します&lt;/strong&gt;。概要を示す「概要」セクションと、コードを説明する「概要」セクションがあります。&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;GitHub Copilot では、プル リクエストの diff を分析して説明できるようになり&lt;/strong&gt;、プル リクエストのレビュー担当者が変更を理解し、優れたフィードバックを共有することが容易になります。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/github/release-assets/assets/884151/81ae9bff-1844-4b8f-b501-ad3abdb78f06&quot; alt=&quot;GitHub Copilot がプル リクエストの差分をどのように説明し、改善できるかを示す会話例&quot; /&gt;&lt;/p&gt;
&lt;p&gt; GitHub.com で Copilot Chat を試してみませんか?開始する際に推奨されるプロンプトをいくつか示します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Bing 検索をトリガーするには、最近のイベントについて質問します&lt;/strong&gt;。Node.js v20 にはどのような更新がありましたか?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;リポジトリで GitHub Copilot Chat を開き、リポジトリについて質問します&lt;/strong&gt;。turnOn 関数はどこで定義されていますか?&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;GitHub.com でファイルを開き、そのファイルについて質問します&lt;/strong&gt;。現在表示しているファイル内の各関数の単体テスト ケースの草案&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2024-02-27-copilot-enterprise-is-now-generally-available&quot;&gt;GitHub Copilot Enterprise の一般提供開始に関する&lt;/a&gt;投稿は、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76745</post-id></item><item><title>シークレット スキャンは、エンタープライズ管理対象ユーザーのユーザー名前空間リポジトリをサポートします</title><link>https://github.blog/changelog/2024-02-23-secret-scanning-supports-user-namespace-repositories-for-enterprise-managed-users</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 23 Feb 2024 22:02:25 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-23-secret-scanning-supports-user-namespace-repositories-for-enterprise-managed-users</guid><description>&lt;p&gt;Secret scanning supports user namespace repositories for Enterprise Managed Users&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-23-secret-scanning-supports-user-namespace-repositories-for-enterprise-managed-users&quot;&gt;Secret scanning supports user namespace repositories for Enterprise Managed Users&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;Enterprise 管理対象ユーザーは、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/managing-accounts-and-repositories/managing-repositories-in-your-enterprise/viewing-user-owned-repositories-in-your-enterprise&quot;&gt;ユーザー名前空間リポジトリ&lt;/a&gt;でシークレット スキャンを有効にできるようになりました。ユーザー リポジトリの所有者は、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-patterns#supported-secrets&quot;&gt;サポートされているシークレットが&lt;/a&gt;リポジトリ内で検出されると、シークレット スキャン アラートを受け取ります。ユーザー名前空間リポジトリでも&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/push-protection-for-repositories-and-organizations&quot;&gt;プッシュ保護を&lt;/a&gt;有効にすることができます。&lt;/p&gt;
&lt;p&gt;エンタープライズ レベルのシークレット スキャン アラートのリストで、エンタープライズ所有者は、ユーザーの名前空間リポジトリで検出されたすべてのシークレットを表示できます。エンタープライズ所有者は、ユーザー名前空間リポジトリに一時的にアクセスして、シークレットの詳細を表示できます。&lt;/p&gt;
&lt;p&gt;ユーザー名前空間リポジトリは、セキュリティ&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/security-overview/assessing-code-security-risk#viewing-enterprise-level-code-security-risks&quot;&gt;リスク&lt;/a&gt;と&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/security-overview/assessing-adoption-code-security#viewing-the-enablement-of-code-security-features-for-an-enterprise&quot;&gt;対象範囲の&lt;/a&gt;ページに含まれています。&lt;/p&gt;
&lt;p&gt;シークレット スキャンは、GHES 3.13 以降、Enterprise Server の個人リポジトリでもサポートされます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレットスキャンについて詳しく見る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/admin/identity-and-access-management/understanding-iam-for-enterprises/about-enterprise-managed-users&quot;&gt;エンタープライズ管理対象ユーザーの詳細については、こちらをご覧ください。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;投稿&lt;a href=&quot;https://github.blog/changelog/2024-02-23-secret-scanning-supports-user-namespace-repositories-for-enterprise-managed-users&quot;&gt;シークレット スキャンはエンタープライズ管理ユーザーのユーザー名前空間リポジトリをサポートします&lt;/a&gt;最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に登場しました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76716</post-id></item><item><title>GitHub アプリのスコープ指定されたトークン作成に対する新しい制限</title><link>https://github.blog/changelog/2024-02-22-new-limits-on-scoped-token-creation-for-github-apps</link><dc:creator>Kevin Duck</dc:creator><pubDate>Fri, 23 Feb 2024 01:24:18 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-22-auto-draft</guid><description>&lt;p&gt;As a proactive measure to protect Github.com availability, GitHub Apps that attempt to create high-complexity scoped installation tokens will receive failures if they would individually reference too many repositories. At the time of release, no GitHub App is above these limits &amp;#8211; the limit is approximately 8 times higher than what any app is consuming. [&amp;#8230;]&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-22-new-limits-on-scoped-token-creation-for-github-apps&quot;&gt;New limits on scoped token creation for GitHub Apps&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;Github.com の可用性を保護するための事前対策として、複雑性の高い範囲指定されたインストール トークンを作成しようとする GitHub アプリが個別に参照するリポジトリが多すぎる場合、エラーが発生します。リリース時点では、これらの制限を超える GitHub アプリはありません。この制限は、アプリが消費する量の約 8 倍です。複雑さの計算方法の詳細については、以下を参照してください。&lt;/p&gt;
&lt;p&gt;スコープ付きトークンを使用すると、GitHub アプリは、組織内でアプリが持つ権限のサブセット (縮小されたリポジトリのセットと権限の両方) だけを持つインストール トークンを作成できます。&lt;br /&gt;
このようにして、多くの権限と多くのリポジトリへのアクセスを持つアプリケーションでも、現在必要なアクセスのみに適したトークンを安全に要求できます。これは便利な最小特権機能です。&lt;/p&gt;
&lt;p&gt;スコープ付きトークンを要求する場合、アプリケーションは必要なアクセス許可とリポジトリの両方を指定できます。どちらのパラメータもオプションであり、どちらかを省略すると、付与されたすべてのアクセス許可またはアクセス可能なすべてのリポジトリのいずれかで、対応する完全なアクセスがトークンに与えられます。&lt;/p&gt;
&lt;p&gt;追加される最初の制限は、トークン リクエストにリポジトリが含まれる場合です。現在、リストできる個別のリポジトリは 500 個までです。&lt;/p&gt;
&lt;p&gt; 2 番目の制限は、リポジトリがリストされて&lt;em&gt;いない&lt;/em&gt;が権限はリストされており、アプリケーションが組織内の&lt;code&gt;some&lt;/code&gt;リポジトリにインストールされている場合です。つまり、組織内の&lt;code&gt;all&lt;/code&gt;リポジトリへのアクセスが明示的に許可されていない場合です。&lt;br /&gt;
その場合、制限は要求される権限の数とアプリケーションがアクセスできるリポジトリの数に基づきます。複雑さの制限を超えると、アプリケーションはエラー「 &lt;code&gt;Too many repositories for installation&lt;/code&gt; 」を受け取り、アプリケーションが成功するためにアクセスできるリポジトリの最大数と、トークンの複雑さを軽減するための他のオプションを提供します。 、ここでも提供されます。&lt;/p&gt;
&lt;p&gt;トークン リクエストの複雑さを軽減するには、次のいずれかを実行できます。&lt;br /&gt;
 1. 組織内でアプリケーションがアクセスできるリポジトリの数を減らします。&lt;br /&gt;
 2. トークンに対して要求される権限の数を減らします。&lt;br /&gt;
 3. 組織の「すべて」のリポジトリにアクセスできるようにアプリケーションを設定します。&lt;br /&gt;
 4. スコープ付きトークンをまったく要求せず、代わりに標準インストール トークンを要求します。&lt;/p&gt;
&lt;p&gt;これらのオプションを使用すると、トークンの複雑さが軽減され、アプリケーションがその組織のトークンを再度取得できるようになります。&lt;/p&gt;
&lt;p&gt; GitHub App スコープのトークンの発行とインストールの詳細については、次のドキュメントを参照してください。&lt;/p&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/apps/creating-github-apps/authenticating-with-a-github-app/generating-an-installation-access-token-for-a-github-app&quot;&gt;「GitHub アプリのインストール アクセス トークンの生成」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/apps/using-github-apps/reviewing-and-modifying-installed-github-apps&quot;&gt;「インストールされている GitHub アプリの確認と変更」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; REST API: &lt;a href=&quot;https://docs.github.com/rest/apps/apps?apiVersion=2022-11-28#create-an-installation-access-token-for-an-app&quot;&gt;「アプリのインストール アクセス トークンを作成する」&lt;/a&gt;&lt;/li&gt;
&lt;p&gt;この記事は、 &lt;a href=&quot;https://github.blog/changelog/2024-02-22-new-limits-on-scoped-token-creation-for-github-apps&quot;&gt;GitHub アプリのスコープ指定されたトークン作成に対する新しい制限が&lt;/a&gt;最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76689</post-id></item><item><title>CodeQL 2.16.2: 新しい Android クエリと精度の向上</title><link>https://github.blog/changelog/2024-02-21-codeql-2-16-2-new-android-queries-and-improved-precision</link><dc:creator>Kevin Duck</dc:creator><pubDate>Wed, 21 Feb 2024 14:56:42 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-21-codeql-2-16-2-new-android-queries-and-improved-precision</guid><description>&lt;p&gt;CodeQL 2.16.2: New Android queries and improved precision&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-21-codeql-2-16-2-new-android-queries-and-improved-precision&quot;&gt;CodeQL 2.16.2: New Android queries and improved precision&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;CodeQL 2.16.2 は、github.com で GitHub コード スキャンのユーザーが利用できるようになりました。また、すべての新機能は GHES 3.13 にも含まれる予定です。 GHES 3.12 以前のユーザーは&lt;a href=&quot;https://docs.github.com/en/enterprise-server@3.12/admin/code-security/managing-github-advanced-security-for-your-enterprise/configuring-code-scanning-for-your-appliance#configuring-codeql-analysis-on-a-server-without-internet-access&quot;&gt;、CodeQL バージョンをアップグレード&lt;/a&gt;できます。&lt;/p&gt;
&lt;p&gt;このリリースの重要な変更点は次のとおりです。&lt;/p&gt;
&lt;p&gt;テキスト フィールドや通知を介した機密データの漏洩を検出するために &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.16.2/#java&quot;&gt;、2 つの新しい Java / Android クエリ&lt;/a&gt;( &lt;code&gt;java/android/sensitive-text&lt;/code&gt;および&lt;code&gt;java/android/sensitive-notification&lt;/code&gt; ) を追加しました。&lt;/p&gt;
&lt;p&gt;いくつかの C/C++ クエリの&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.16.2/#c-c&quot;&gt;精度が向上しまし&lt;/a&gt;た。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.16.2/#c-1&quot;&gt;C# 12 で導入されたコレクション式&lt;/a&gt;(例: &lt;code&gt;[1, y, 4, .. x]&lt;/code&gt; ) を認識できるようになりました。&lt;/p&gt;
&lt;p&gt;変更の完全なリストについては、&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.16.2/&quot;&gt;バージョン 2.16.2&lt;/a&gt;の完全な変更ログを参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2024-02-21-codeql-2-16-2-new-android-queries-and-improved-precision&quot;&gt;CodeQL 2.16.2: 新しい Android クエリと精度の向上という&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76667</post-id></item><item><title>シークレット スキャンにより、Mailgun と Mailchimp の有効性チェックが追加されました</title><link>https://github.blog/changelog/2024-02-20-secret-scanning-adds-validity-checks-for-mailgun-and-mailchimp</link><dc:creator>Kevin Duck</dc:creator><pubDate>Tue, 20 Feb 2024 18:35:39 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2024-02-20-secret-scanning-adds-validity-checks-for-mailgun-and-mailchimp</guid><description>&lt;p&gt;Secret scanning adds validity checks for Mailgun and Mailchimp&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2024-02-20-secret-scanning-adds-validity-checks-for-mailgun-and-mailchimp&quot;&gt;Secret scanning adds validity checks for Mailgun and Mailchimp&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;シークレット スキャンでは、有効性チェックのサポートが Mailgun ( &lt;code&gt;mailgun_api_key&lt;/code&gt; ) および Mailchimp ( &lt;code&gt;mailchimp_api_key&lt;/code&gt; ) API キーに拡張されています。&lt;/p&gt;
&lt;p&gt;有効性チェックは、漏洩した認証情報が&lt;code&gt;active&lt;/code&gt;あり、依然として悪用される可能性があるかどうかを示します。 &lt;a href=&quot;https://github.blog/changelog/2023-04-28-secret-scanning-now-supports-validation-checks-for-supported-partner-patterns/&quot;&gt;以前に特定のリポジトリの検証チェックを有効にしていた&lt;/a&gt;場合、GitHub はサポートされているトークン タイプのアラートの有効性を自動的に検証します。&lt;/p&gt;
&lt;p&gt;有効性チェックは、Enterprise Cloud 上の GitHub Advanced Security を使用してリポジトリで利用できます。 「コードのセキュリティと分析」設定ページから「関連するパートナーに送信することでシークレットが有効かどうかを自動的に検証する」オプションをチェックすることで、組織レベルとリポジトリ レベルの両方でこの機能を有効にできます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning&quot;&gt;シークレット スキャン&lt;/a&gt;や&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-patterns#supported-secrets&quot;&gt;有効性チェックでサポートされているパターン&lt;/a&gt;の詳細については、こちらをご覧ください。&lt;/p&gt;
&lt;p&gt;ポスト&lt;a href=&quot;https://github.blog/changelog/2024-02-20-secret-scanning-adds-validity-checks-for-mailgun-and-mailchimp&quot;&gt;シークレット スキャンでは、Mailgun と Mailchimp の有効性チェックが追加されます&lt;/a&gt;appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; 。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">76652</post-id></item></channel></rss>